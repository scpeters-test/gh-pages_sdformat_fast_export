{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/49/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/49/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/49/sdf-element-getelement-fails-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/49/vote"}}, "reporter": {"display_name": "Jonathan Bohren", "uuid": "{588087c1-4405-46da-b019-43f00b894b30}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B588087c1-4405-46da-b019-43f00b894b30%7D"}, "html": {"href": "https://bitbucket.org/%7B588087c1-4405-46da-b019-43f00b894b30%7D/"}, "avatar": {"href": "https://bitbucket.org/account/jbohren/avatar/"}}, "nickname": "jbohren", "type": "user", "account_id": null}, "title": "sdf::Element::GetElement fails with undefined reference to `xmlCharStrdup` at runtime when used in plugin", "component": null, "votes": 0, "watches": 2, "content": {"raw": "I've written a gazebo model plugin which is linked against the libraries found by `find_package(gazebo)`. When I try to load this library, I get the following dynamic linker error when calling `sdf::Element::GetElement(...)`:\r\n\r\n```\r\ngzserver: symbol lookup error: /home/jbohren/ws/hydro/underlay/devel/lib/librtt_gazebo_deployer.so: undefined symbol: xmlCharStrdup\r\n```\r\n\r\nThe libraries given by `find_package(gazebo)` are as follows:\r\n```\r\n gazebo_transport;gazebo_physics;gazebo_sensors;gazebo_rendering;gazebo_gui;sdformat;gazebo_msgs;gazebo_math;gazebo_common;gazebo;/usr/lib/libgazebo.so;/usr/lib/libgazebo_ccd.so;/usr/lib/libgazebo_common.so;/usr/lib/libgazebo_gimpact.so;/usr/lib/libgazebo_gui.so;/usr/lib/libgazebo_gui_building.so;/usr/lib/libgazebo_gui_viewers.so;/usr/lib/libgazebo_math.so;/usr/lib/libgazebo_msgs.so;/usr/lib/libgazebo_ode.so;/usr/lib/libgazebo_opcode.so;/usr/lib/libgazebo_opende_ou.so;/usr/lib/libgazebo_physics.so;/usr/lib/libgazebo_physics_ode.so;/usr/lib/libgazebo_rendering.so;/usr/lib/libgazebo_selection_buffer.so;/usr/lib/libgazebo_sensors.so;/usr/lib/libgazebo_skyx.so;/usr/lib/libgazebo_transport.so;/usr/lib/libgazebo_util.so;/usr/lib/libgazebo_player.so;optimized;/usr/lib/libprotobuf.so;debug;/usr/lib/libprotobuf.so;/usr/lib/x86_64-linux-gnu/libsdformat.so\r\n```\r\n\r\nThis is resolved only if I explicitly link my plugin against libxml2.\r\n\r\nI'm building it in an isolated catkin workspace, and what's interesting is that if I build it in a non-isolated workspace, it loads with no trouble. This is probably a side-effect fixed by building it with another package without isolation.", "markup": "markdown", "html": "<p>I've written a gazebo model plugin which is linked against the libraries found by <code>find_package(gazebo)</code>. When I try to load this library, I get the following dynamic linker error when calling <code>sdf::Element::GetElement(...)</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">gzserver</span><span class=\"o\">:</span> <span class=\"n\">symbol</span> <span class=\"n\">lookup</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"sr\">/home/jbohren/ws/hydro/underlay/devel/lib/</span><span class=\"n\">librtt_gazebo_deployer</span><span class=\"o\">.</span><span class=\"na\">so</span><span class=\"o\">:</span> <span class=\"kc\">undefined</span> <span class=\"n\">symbol</span><span class=\"o\">:</span> <span class=\"n\">xmlCharStrdup</span>\n</pre></div>\n\n\n<p>The libraries given by <code>find_package(gazebo)</code> are as follows:</p>\n<div class=\"codehilite\"><pre><span></span> gazebo_transport;gazebo_physics;gazebo_sensors;gazebo_rendering;gazebo_gui;sdformat;gazebo_msgs;gazebo_math;gazebo_common;gazebo;/usr/lib/libgazebo.so;/usr/lib/libgazebo_ccd.so;/usr/lib/libgazebo_common.so;/usr/lib/libgazebo_gimpact.so;/usr/lib/libgazebo_gui.so;/usr/lib/libgazebo_gui_building.so;/usr/lib/libgazebo_gui_viewers.so;/usr/lib/libgazebo_math.so;/usr/lib/libgazebo_msgs.so;/usr/lib/libgazebo_ode.so;/usr/lib/libgazebo_opcode.so;/usr/lib/libgazebo_opende_ou.so;/usr/lib/libgazebo_physics.so;/usr/lib/libgazebo_physics_ode.so;/usr/lib/libgazebo_rendering.so;/usr/lib/libgazebo_selection_buffer.so;/usr/lib/libgazebo_sensors.so;/usr/lib/libgazebo_skyx.so;/usr/lib/libgazebo_transport.so;/usr/lib/libgazebo_util.so;/usr/lib/libgazebo_player.so;optimized;/usr/lib/libprotobuf.so;debug;/usr/lib/libprotobuf.so;/usr/lib/x86_64-linux-gnu/libsdformat.so\n</pre></div>\n\n\n<p>This is resolved only if I explicitly link my plugin against libxml2.</p>\n<p>I'm building it in an isolated catkin workspace, and what's interesting is that if I build it in a non-isolated workspace, it loads with no trouble. This is probably a side-effect fixed by building it with another package without isolation.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2014-03-12T16:10:48.677453+00:00", "milestone": null, "updated_on": "2014-03-12T18:01:57.648650+00:00", "type": "issue", "id": 49}