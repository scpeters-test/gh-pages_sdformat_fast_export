{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/63/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/63.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/63/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/63/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/63/gzsdf-segfaults-in-trusty"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/63/vote"}}, "reporter": {"display_name": "Lucas Chiesa", "uuid": "{87a73923-6bb6-47c2-8cc4-8ef7ed377385}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B87a73923-6bb6-47c2-8cc4-8ef7ed377385%7D"}, "html": {"href": "https://bitbucket.org/%7B87a73923-6bb6-47c2-8cc4-8ef7ed377385%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5a3571b6492fdf138869f978b9b85171d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLC-6.png"}}, "nickname": "tulku", "type": "user", "account_id": "557058:87a53773-774f-4ce5-953a-2b8677515100"}, "title": "gzsdf segfaults in trusty", "component": null, "votes": 3, "watches": 9, "content": {"raw": "When doing:\r\n\r\n$ gzsdf print tutorial.urdf \r\n\r\nin a freshly installed Ubuntu trusty I get:\r\n\r\nSegmentation fault (core dumped)\r\n\r\nI have ros Indigo installed, but not sourced at the moment of doing this.\r\n\r\nThis happened with every urdf that I've tried. If the urdf is not correct (a missing joint for example) then it complains of the bad structure.\r\n\r\n```\r\n$ gdb /usr/bin/gzsdf\r\nGNU gdb (Ubuntu 7.7-0ubuntu3) 7.7\r\nThis GDB was configured as \"x86_64-linux-gnu\".\r\nReading symbols from /usr/bin/gzsdf...(no debugging symbols found)...done.\r\n(gdb) set args print tutorial.urdf\r\n(gdb) run\r\nStarting program: /usr/bin/gzsdf print tutorial.urdf\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n[New Thread 0x7fffe8316700 (LWP 3334)]\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff76c7d0b in boost::detail::shared_count::shared_count(boost::detail::weak_count const&, boost::detail::sp_nothrow_tag) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\r\n(gdb) bt\r\n#0  0x00007ffff76c7d0b in boost::detail::shared_count::shared_count(boost::detail::weak_count const&, boost::detail::sp_nothrow_tag) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\r\n#1  0x00007ffff76c64a3 in ReduceFixedJoints(TiXmlElement*, boost::shared_ptr<urdf::Link>) ()\r\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\r\n#2  0x00007ffff76c6f12 in sdf::URDF2SDF::InitModelString(std::string const&, bool) ()\r\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\r\n#3  0x00007ffff76c7514 in sdf::URDF2SDF::InitModelDoc(TiXmlDocument*) ()\r\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\r\n#4  0x00007ffff76c7678 in sdf::URDF2SDF::InitModelFile(std::string const&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\r\n#5  0x00007ffff76a1aa3 in sdf::readFile(std::string const&, boost::shared_ptr<sdf::SDF>) ()\r\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\r\n#6  0x0000000000403e60 in main ()\r\n```\r\n\r\nIf I rebuild sdformat with debug symbols, it works, so I can't get a better backtrace.\r\n\r\nI've pasted the valgrind output of the not segfaulting version in:\r\nhttps://gist.github.com/tulku/c0670b0df1f40b4396d7\r\nin case it is of any help.\r\n\r\nThe problem seems to be when calling ReduceFixedJoints method.\r\n", "markup": "markdown", "html": "<p>When doing:</p>\n<p>$ gzsdf print tutorial.urdf </p>\n<p>in a freshly installed Ubuntu trusty I get:</p>\n<p>Segmentation fault (core dumped)</p>\n<p>I have ros Indigo installed, but not sourced at the moment of doing this.</p>\n<p>This happened with every urdf that I've tried. If the urdf is not correct (a missing joint for example) then it complains of the bad structure.</p>\n<div class=\"codehilite\"><pre><span></span>$ gdb /usr/bin/gzsdf\nGNU gdb <span class=\"o\">(</span>Ubuntu <span class=\"m\">7</span>.7-0ubuntu3<span class=\"o\">)</span> <span class=\"m\">7</span>.7\nThis GDB was configured as <span class=\"s2\">&quot;x86_64-linux-gnu&quot;</span>.\nReading symbols from /usr/bin/gzsdf...<span class=\"o\">(</span>no debugging symbols found<span class=\"o\">)</span>...done.\n<span class=\"o\">(</span>gdb<span class=\"o\">)</span> <span class=\"nb\">set</span> args print tutorial.urdf\n<span class=\"o\">(</span>gdb<span class=\"o\">)</span> run\nStarting program: /usr/bin/gzsdf print tutorial.urdf\n<span class=\"o\">[</span>Thread debugging using libthread_db enabled<span class=\"o\">]</span>\nUsing host libthread_db library <span class=\"s2\">&quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;</span>.\n<span class=\"o\">[</span>New Thread 0x7fffe8316700 <span class=\"o\">(</span>LWP <span class=\"m\">3334</span><span class=\"o\">)]</span>\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff76c7d0b in boost::detail::shared_count::shared_count<span class=\"o\">(</span>boost::detail::weak_count const<span class=\"p\">&amp;</span>, boost::detail::sp_nothrow_tag<span class=\"o\">)</span> <span class=\"o\">()</span> from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\n<span class=\"o\">(</span>gdb<span class=\"o\">)</span> bt\n<span class=\"c1\">#0  0x00007ffff76c7d0b in boost::detail::shared_count::shared_count(boost::detail::weak_count const&amp;, boost::detail::sp_nothrow_tag) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.1</span>\n<span class=\"c1\">#1  0x00007ffff76c64a3 in ReduceFixedJoints(TiXmlElement*, boost::shared_ptr&lt;urdf::Link&gt;) ()</span>\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\n<span class=\"c1\">#2  0x00007ffff76c6f12 in sdf::URDF2SDF::InitModelString(std::string const&amp;, bool) ()</span>\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\n<span class=\"c1\">#3  0x00007ffff76c7514 in sdf::URDF2SDF::InitModelDoc(TiXmlDocument*) ()</span>\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\n<span class=\"c1\">#4  0x00007ffff76c7678 in sdf::URDF2SDF::InitModelFile(std::string const&amp;) ()</span>\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\n<span class=\"c1\">#5  0x00007ffff76a1aa3 in sdf::readFile(std::string const&amp;, boost::shared_ptr&lt;sdf::SDF&gt;) ()</span>\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.1\n<span class=\"c1\">#6  0x0000000000403e60 in main ()</span>\n</pre></div>\n\n\n<p>If I rebuild sdformat with debug symbols, it works, so I can't get a better backtrace.</p>\n<p>I've pasted the valgrind output of the not segfaulting version in:\n<a href=\"https://gist.github.com/tulku/c0670b0df1f40b4396d7\" rel=\"nofollow\" class=\"ap-connect-link\">https://gist.github.com/tulku/c0670b0df1f40b4396d7</a>\nin case it is of any help.</p>\n<p>The problem seems to be when calling ReduceFixedJoints method.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-05-29T21:00:41.333233+00:00", "milestone": null, "updated_on": "2014-07-18T18:07:35.458788+00:00", "type": "issue", "id": 63}