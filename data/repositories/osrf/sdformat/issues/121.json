{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/121/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/121.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/121/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/121/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/121/fix-for-double-precision-error"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/121/vote"}}, "reporter": {"display_name": "Robin Vanhove", "uuid": "{f5719cd7-c74d-4dfe-9b59-fdf8d822bf09}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf5719cd7-c74d-4dfe-9b59-fdf8d822bf09%7D"}, "html": {"href": "https://bitbucket.org/%7Bf5719cd7-c74d-4dfe-9b59-fdf8d822bf09%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21de1dc6238aaed19734cb9f74d1da1fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRV-4.png"}}, "nickname": "r0b1n", "type": "user", "account_id": "557058:0260d5b0-bd41-42ff-ac9d-6732c6bfe42a"}, "title": "Fix for double precision error", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hello,\r\n\r\nThe method sdf::Param::Get() doesn't work correctly.\r\n\r\nFor example if in a gazebo world file I enter this coordinate : \r\n```\r\n#!xml\r\n\r\n<spherical_coordinates>\r\n  <latitude_deg>43.105064510</latitude_deg>\r\n</spherical_coordinates>\r\n```\r\nthe method std::Param::Get<double>() returns *43.105100* ; that represents an error of roughly a meter !\r\n\r\n\r\nThe problem comes from the line ( include/sdf/Param.hh : 293 ), where boost::lexical_cast converts a variant (of type double) to a string, then converts it back to a double :\r\n\r\n```\r\n#!c++\r\n\r\n_value = boost::lexical_cast<T>(this->dataPtr->value);\r\n```\r\n\r\nThis [commit](https://bitbucket.org/r0b1n/sdformat/commits/d277dfbb10c1a9ac477f399d2b588f0406dea0ea) proposes a fix + unit test for the problem.\r\n\r\n\r\nThanks,\r\nRobin", "markup": "markdown", "html": "<p>Hello,</p>\n<p>The method sdf::Param::Get() doesn't work correctly.</p>\n<p>For example if in a gazebo world file I enter this coordinate : </p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;spherical_coordinates&gt;</span>\n  <span class=\"nt\">&lt;latitude_deg&gt;</span>43.105064510<span class=\"nt\">&lt;/latitude_deg&gt;</span>\n<span class=\"nt\">&lt;/spherical_coordinates&gt;</span>\n</pre></div>\n\n\n<p>the method std::Param::Get&lt;double&gt;() returns <em>43.105100</em> ; that represents an error of roughly a meter !</p>\n<p>The problem comes from the line ( include/sdf/Param.hh : 293 ), where boost::lexical_cast converts a variant (of type double) to a string, then converts it back to a double :</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">_value</span> <span class=\"o\">=</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">value</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>This <a data-is-external-link=\"true\" href=\"https://bitbucket.org/r0b1n/sdformat/commits/d277dfbb10c1a9ac477f399d2b588f0406dea0ea\" rel=\"nofollow\">commit</a> proposes a fix + unit test for the problem.</p>\n<p>Thanks,\nRobin</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-05-02T18:09:32.397633+00:00", "milestone": null, "updated_on": "2016-05-19T18:10:31.321820+00:00", "type": "issue", "id": 121}