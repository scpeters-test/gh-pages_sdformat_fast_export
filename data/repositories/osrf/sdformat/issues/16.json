{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/16/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/16/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/16/parser_urdf-accidentally-shares-gazebo"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/16/vote"}}, "reporter": {"display_name": "Piyush Khandelwal", "uuid": "{0aafe920-14b3-4b46-927d-421c6f4e90f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0aafe920-14b3-4b46-927d-421c6f4e90f2%7D"}, "html": {"href": "https://bitbucket.org/%7B0aafe920-14b3-4b46-927d-421c6f4e90f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4c0a1652789850a7953553e6d883eb06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-1.png"}}, "nickname": "piyushk", "type": "user", "account_id": "557058:f6cfe420-cf98-45d4-b1ff-8a554ca13fd0"}, "title": "parser_urdf accidentally shares gazebo extensions across different models", "component": null, "votes": 0, "watches": 2, "content": {"raw": "parser_urdf.cc declares g_extensions at the global level ([L37](#!/osrf/sdformat/src/3c73f4c32d8c20e368c583ddbbc791bf37f14331/src/parser_urdf.cc?at=sdf_1.4#cl-37)):\r\n```\r\n#!c++\r\n\r\nstd::map<std::string, std::vector<SDFExtension*> > g_extensions;\r\n```\r\n\r\nWhen I load 2 robots with the same visual plugin as below:\r\n```\r\n#!xml\r\n\r\n    <gazebo reference=\"${name}_screen_link\">\r\n      <visual>\r\n        <plugin name=\"${name}_video_controller\" filename=\"libgazebo_ros_video.so\">\r\n          <height>120</height>\r\n          <width>160</width>\r\n          <topicName>image</topicName>\r\n        </plugin>\r\n      </visual>\r\n    </gazebo>\r\n```\r\n\r\nThe program crashes out with the following error:\r\n```\r\ngzserver: tinyxml.cpp:165: TiXmlNode* TiXmlNode::LinkEndChild(TiXmlNode*): Assertion `node->parent == 0 || node->parent == this' failed.\r\n#3  0x00007ffff4f6a192 in __GI___assert_fail (\r\n    assertion=0x7ffff4605600 \"node->parent == 0 || node->parent == this\", \r\n    file=0x7ffff460546a \"tinyxml.cpp\", line=165, \r\n    function=0x7ffff4605740 \"TiXmlNode* TiXmlNode::LinkEndChild(TiXmlNode*)\") at assert.c:103\r\n#4  0x00007ffff45fea15 in TiXmlNode::LinkEndChild(TiXmlNode*) () from /usr/lib/libtinyxml.so.2.6.2\r\n#5  0x00007ffff5ee1ab7 in InsertSDFExtensionVisual(TiXmlElement*, std::string const&) ()\r\n   from /usr/lib/libsdformat.so.1\r\n#6  0x00007ffff5ee9990 in CreateVisual(TiXmlElement*, boost::shared_ptr<urdf::Link const>, boost::shared_ptr<urdf::Visual>, std::string const&) () from /usr/lib/libsdformat.so.1\r\n```\r\n\r\nI think this can be resolved by calling `g_extensions.clear()` in `InitModelString`, though I am not sure if there are any other ramifications of doing so (should be added right before [L2552](#!/osrf/sdformat/src/3c73f4c32d8c20e368c583ddbbc791bf37f14331/src/parser_urdf.cc?at=sdf_1.4#cl-2552)). As far as I can tell `g_extensions` should be used once per model and is only global for code convenience.\r\n", "markup": "markdown", "html": "<p>parser_urdf.cc declares g_extensions at the global level (<a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/3c73f4c32d8c20e368c583ddbbc791bf37f14331/src/parser_urdf.cc?at=sdf_1.4#cl-37\" rel=\"nofollow\">L37</a>):</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">map</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">SDFExtension</span><span class=\"o\">*&gt;</span> <span class=\"o\">&gt;</span> <span class=\"n\">g_extensions</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>When I load 2 robots with the same visual plugin as below:</p>\n<div class=\"codehilite language-xml\"><pre><span></span>    <span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;${name}_screen_link&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;visual&gt;</span>\n        <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;${name}_video_controller&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libgazebo_ros_video.so&quot;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;height&gt;</span>120<span class=\"nt\">&lt;/height&gt;</span>\n          <span class=\"nt\">&lt;width&gt;</span>160<span class=\"nt\">&lt;/width&gt;</span>\n          <span class=\"nt\">&lt;topicName&gt;</span>image<span class=\"nt\">&lt;/topicName&gt;</span>\n        <span class=\"nt\">&lt;/plugin&gt;</span>\n      <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>The program crashes out with the following error:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">gzserver</span><span class=\"o\">:</span> <span class=\"n\">tinyxml</span><span class=\"o\">.</span><span class=\"na\">cpp</span><span class=\"o\">:</span><span class=\"mi\">165</span><span class=\"o\">:</span> <span class=\"n\">TiXmlNode</span><span class=\"o\">*</span> <span class=\"n\">TiXmlNode</span><span class=\"o\">::</span><span class=\"n\">LinkEndChild</span><span class=\"o\">(</span><span class=\"n\">TiXmlNode</span><span class=\"o\">*):</span> <span class=\"n\">Assertion</span> <span class=\"err\">`</span><span class=\"n\">node</span><span class=\"o\">-&gt;</span><span class=\"n\">parent</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">||</span> <span class=\"n\">node</span><span class=\"o\">-&gt;</span><span class=\"n\">parent</span> <span class=\"o\">==</span> <span class=\"k\">this</span><span class=\"err\">&#39;</span> <span class=\"n\">failed</span><span class=\"o\">.</span>\n<span class=\"err\">#</span><span class=\"mi\">3</span>  <span class=\"mh\">0x00007ffff4f6a192</span> <span class=\"k\">in</span> <span class=\"n\">__GI___assert_fail</span> <span class=\"o\">(</span>\n    <span class=\"n\">assertion</span><span class=\"o\">=</span><span class=\"mh\">0x7ffff4605600</span> <span class=\"s2\">&quot;node-&gt;parent == 0 || node-&gt;parent == this&quot;</span><span class=\"o\">,</span> \n    <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"mh\">0x7ffff460546a</span> <span class=\"s2\">&quot;tinyxml.cpp&quot;</span><span class=\"o\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">165</span><span class=\"o\">,</span> \n    <span class=\"kd\">function</span><span class=\"o\">=</span><span class=\"mh\">0x7ffff4605740</span> <span class=\"s2\">&quot;TiXmlNode* TiXmlNode::LinkEndChild(TiXmlNode*)&quot;</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">assert</span><span class=\"o\">.</span><span class=\"na\">c</span><span class=\"o\">:</span><span class=\"mi\">103</span>\n<span class=\"err\">#</span><span class=\"mi\">4</span>  <span class=\"mh\">0x00007ffff45fea15</span> <span class=\"k\">in</span> <span class=\"n\">TiXmlNode</span><span class=\"o\">::</span><span class=\"n\">LinkEndChild</span><span class=\"o\">(</span><span class=\"n\">TiXmlNode</span><span class=\"o\">*)</span> <span class=\"o\">()</span> <span class=\"n\">from</span> <span class=\"sr\">/usr/lib/</span><span class=\"n\">libtinyxml</span><span class=\"o\">.</span><span class=\"na\">so</span><span class=\"o\">.</span><span class=\"mf\">2.6</span><span class=\"o\">.</span><span class=\"mi\">2</span>\n<span class=\"err\">#</span><span class=\"mi\">5</span>  <span class=\"mh\">0x00007ffff5ee1ab7</span> <span class=\"k\">in</span> <span class=\"n\">InsertSDFExtensionVisual</span><span class=\"o\">(</span><span class=\"n\">TiXmlElement</span><span class=\"o\">*,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"kd\">const</span><span class=\"o\">&amp;)</span> <span class=\"o\">()</span>\n   <span class=\"n\">from</span> <span class=\"sr\">/usr/lib/</span><span class=\"n\">libsdformat</span><span class=\"o\">.</span><span class=\"na\">so</span><span class=\"o\">.</span><span class=\"mi\">1</span>\n<span class=\"err\">#</span><span class=\"mi\">6</span>  <span class=\"mh\">0x00007ffff5ee9990</span> <span class=\"k\">in</span> <span class=\"n\">CreateVisual</span><span class=\"o\">(</span><span class=\"n\">TiXmlElement</span><span class=\"o\">*,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">urdf</span><span class=\"o\">::</span><span class=\"n\">Link</span> <span class=\"kd\">const</span><span class=\"o\">&gt;,</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">shared_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">urdf</span><span class=\"o\">::</span><span class=\"n\">Visual</span><span class=\"o\">&gt;,</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"kd\">const</span><span class=\"o\">&amp;)</span> <span class=\"o\">()</span> <span class=\"n\">from</span> <span class=\"sr\">/usr/lib/</span><span class=\"n\">libsdformat</span><span class=\"o\">.</span><span class=\"na\">so</span><span class=\"o\">.</span><span class=\"mi\">1</span>\n</pre></div>\n\n\n<p>I think this can be resolved by calling <code>g_extensions.clear()</code> in <code>InitModelString</code>, though I am not sure if there are any other ramifications of doing so (should be added right before <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/3c73f4c32d8c20e368c583ddbbc791bf37f14331/src/parser_urdf.cc?at=sdf_1.4#cl-2552\" rel=\"nofollow\">L2552</a>). As far as I can tell <code>g_extensions</code> should be used once per model and is only global for code convenience.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2013-07-25T20:14:26.964907+00:00", "milestone": null, "updated_on": "2013-07-30T22:15:59.347240+00:00", "type": "issue", "id": 16}