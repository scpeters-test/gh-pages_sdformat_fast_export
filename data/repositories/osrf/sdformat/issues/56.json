{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/56/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/56.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/56/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/56/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/56/sdf-findfile-search-order-is-counter"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/56/vote"}}, "reporter": {"display_name": "andy_somerville", "uuid": "{09fd5d4b-d90e-4416-9a6a-2e5cd638472c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D"}, "html": {"href": "https://bitbucket.org/%7B09fd5d4b-d90e-4416-9a6a-2e5cd638472c%7D/"}, "avatar": {"href": "https://bitbucket.org/account/andy_somerville/avatar/"}}, "nickname": "andy_somerville", "type": "user", "account_id": null}, "title": "sdf::findFile search order is counter-intuitive and likely incorrect", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently `sdf::findFile` searches system level directories before local, or custom path (`SDF_PATH`) specific ones. This prevents searches to non install locations from working correctly. \r\n\r\nAdditionally it presupposes that the file being searched is below a parent directory \"sdformat\" when searching in below `SDF_SHARE_PATH`. `Converter::Converter` also prepends a parent called \"sdformat\" to queries doubling this path to \"sdformat/sdformat/\" causing it to fail in those cases.\r\n\r\nThese both directly affect the ability of the integration tests to function correctly for uninstalled builds on systems where there is an older/different system level build already installed. \r\n\r\nIt is also likely cause problems outside of this scenario.\r\n\r\nFor backward compatibility the `sdformat` prepend should be kept, but an addional search should be done without it\r\n\r\nThe current order is:\r\n\r\n * URI\r\n * System unversioned (SDF_SHARE_PATH/sdformat)\r\n * System versioned     (SDF_SHARE_PATH/sdformat/x.x)\r\n * Custom\r\n * Absolute or Local\r\n\r\nThe order should probably be almost opposite with added paths to account for \"sdformat\" parent expectation seen below:\r\n\r\n * URI\r\n * Absolute or Local\r\n * Custom\r\n * raw System versioned  (SDF_SHARE_PATH/x.x)\r\n * prepended  System versioned   (SDF_SHARE_PATH/sdformat/x.x)\r\n * raw System unversioned (SDF_SHARE_PATH)\r\n * prepended System unversioned (SDF_SHARE_PATH/sdformat)\r\n\r\n\r\n", "markup": "markdown", "html": "<p>Currently <code>sdf::findFile</code> searches system level directories before local, or custom path (<code>SDF_PATH</code>) specific ones. This prevents searches to non install locations from working correctly. </p>\n<p>Additionally it presupposes that the file being searched is below a parent directory \"sdformat\" when searching in below <code>SDF_SHARE_PATH</code>. <code>Converter::Converter</code> also prepends a parent called \"sdformat\" to queries doubling this path to \"sdformat/sdformat/\" causing it to fail in those cases.</p>\n<p>These both directly affect the ability of the integration tests to function correctly for uninstalled builds on systems where there is an older/different system level build already installed. </p>\n<p>It is also likely cause problems outside of this scenario.</p>\n<p>For backward compatibility the <code>sdformat</code> prepend should be kept, but an addional search should be done without it</p>\n<p>The current order is:</p>\n<ul>\n<li>URI</li>\n<li>System unversioned (SDF_SHARE_PATH/sdformat)</li>\n<li>System versioned     (SDF_SHARE_PATH/sdformat/x.x)</li>\n<li>Custom</li>\n<li>Absolute or Local</li>\n</ul>\n<p>The order should probably be almost opposite with added paths to account for \"sdformat\" parent expectation seen below:</p>\n<ul>\n<li>URI</li>\n<li>Absolute or Local</li>\n<li>Custom</li>\n<li>raw System versioned  (SDF_SHARE_PATH/x.x)</li>\n<li>prepended  System versioned   (SDF_SHARE_PATH/sdformat/x.x)</li>\n<li>raw System unversioned (SDF_SHARE_PATH)</li>\n<li>prepended System unversioned (SDF_SHARE_PATH/sdformat)</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2014-04-09T01:03:35.292086+00:00", "milestone": null, "updated_on": "2014-04-09T01:56:46.169270+00:00", "type": "issue", "id": 56}