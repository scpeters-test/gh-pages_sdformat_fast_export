{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/211/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/211.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/211/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/211/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/211/virtual-area"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/211/vote"}}, "reporter": {"display_name": "Matthijs van der Burgh", "uuid": "{855a4af3-768d-4ef3-a630-cf1751b3571d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B855a4af3-768d-4ef3-a630-cf1751b3571d%7D"}, "html": {"href": "https://bitbucket.org/%7B855a4af3-768d-4ef3-a630-cf1751b3571d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c571e20349b3b6c68a716be1b11a34d6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMB-6.png"}}, "nickname": "MatthijsBurgh", "type": "user", "account_id": "5bdd827c607ed0380401a826"}, "title": "Virtual area", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\nSDF doesn't contain any elements for virtual geometries. Virtual geometries could be used in multiple ways. For example event triggerring or limiting behaviour, position. I am interested in how you would implement it in SDF.\r\n\r\nMy suggestion would be:\r\ntag: virtual_area\r\nparent: link\r\nchilds: name, frame, pose, geometry(, plugin)\r\n\r\n# Motivation\r\nThe virtual area could be useful for:\r\n* Event triggers, start an event if a robot, actor, etc. enters a virtual area.\r\n* Allow objects, actors, population to only move in the virtual area.\r\n\r\nMore in general the virtual area can be used for checking if certain objects are located somewhere in space. Or to apply limits in space for almost anything: models, actors, population, physics, etc,\r\n\r\n# Describe alternatives you've considered\r\nI couldn't find anything already in SDF suitable for this. World, State and Scene, don't have anything in there, which could match this. In my opinion the best solution is to define these in models. So this area can be used for events/limits relative to a model.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>SDF doesn't contain any elements for virtual geometries. Virtual geometries could be used in multiple ways. For example event triggerring or limiting behaviour, position. I am interested in how you would implement it in SDF.</p>\n<p>My suggestion would be:\ntag: virtual_area\nparent: link\nchilds: name, frame, pose, geometry(, plugin)</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>The virtual area could be useful for:\n<em> Event triggers, start an event if a robot, actor, etc. enters a virtual area.\n</em> Allow objects, actors, population to only move in the virtual area.</p>\n<p>More in general the virtual area can be used for checking if certain objects are located somewhere in space. Or to apply limits in space for almost anything: models, actors, population, physics, etc,</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>I couldn't find anything already in SDF suitable for this. World, State and Scene, don't have anything in there, which could match this. In my opinion the best solution is to define these in models. So this area can be used for events/limits relative to a model.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-26T12:49:48.719042+00:00", "milestone": null, "updated_on": "2018-11-26T17:04:12.361716+00:00", "type": "issue", "id": 211}