{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/200/comments/50626542.json"}, "html": {"href": "#!/osrf/sdformat/issues/200#comment-50626542"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/200.json"}}, "type": "issue", "id": 200, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "<frame/>: Support multiple frames in a single parent? Intended scope of frames? Use link names as frames?"}, "content": {"raw": "Question 7: Currently the code in pull request #468 doesn't allow sibling tags of the same type to have the same name. For example, the following two example files return an error when calling `Model::Load`:\n\n* [model_duplicate_links.sdf](#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/sdf/model_duplicate_links.sdf?at=pose_dom&fileviewer=file-view-default) has two sibling links named `link`\n* [model_duplicate_joints.sdf](#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/sdf/model_duplicate_joints.sdf?at=pose_dom&fileviewer=file-view-default) has two sibling joints named `joint`\n\nIt is possible to load sibling elements of different types with the same name, though the pose resolution is currently broken (see [model_link_joint_same_name.sdf](#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/sdf/model_link_joint_same_name.sdf?at=pose_dom&fileviewer=file-view-default) and its [corresponding test](#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/integration/model_dom.cc?at=pose_dom&fileviewer=file-view-default#model_dom.cc-144:184)).", "markup": "markdown", "html": "<p>Question 7: Currently the code in <a href=\"#!/osrf/sdformat/pull-requests/468/pose-dom\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #468</a> doesn't allow sibling tags of the same type to have the same name. For example, the following two example files return an error when calling <code>Model::Load</code>:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/sdf/model_duplicate_links.sdf?at=pose_dom&amp;fileviewer=file-view-default\" rel=\"nofollow\">model_duplicate_links.sdf</a> has two sibling links named <code>link</code></li>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/sdf/model_duplicate_joints.sdf?at=pose_dom&amp;fileviewer=file-view-default\" rel=\"nofollow\">model_duplicate_joints.sdf</a> has two sibling joints named <code>joint</code></li>\n</ul>\n<p>It is possible to load sibling elements of different types with the same name, though the pose resolution is currently broken (see <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/sdf/model_link_joint_same_name.sdf?at=pose_dom&amp;fileviewer=file-view-default\" rel=\"nofollow\">model_link_joint_same_name.sdf</a> and its <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/3f04e7c35e1b11cd43c9719a8fba7077fa11b611/test/integration/model_dom.cc?at=pose_dom&amp;fileviewer=file-view-default#model_dom.cc-144:184\" rel=\"nofollow\">corresponding test</a>).</p>", "type": "rendered"}, "created_on": "2019-02-15T23:59:55.133689+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 50626542}