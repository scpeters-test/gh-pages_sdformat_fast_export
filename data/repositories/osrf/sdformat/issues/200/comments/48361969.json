{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/200/comments/48361969.json"}, "html": {"href": "#!/osrf/sdformat/issues/200#comment-48361969"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/200.json"}}, "type": "issue", "id": 200, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "<frame/>: Support multiple frames in a single parent? Intended scope of frames? Use link names as frames?"}, "content": {"raw": "5) Makes sense!\n\n6) Nope, not looking for cross-model propagation, definitely most satisfied with a model boundary. (Keeps things nice and encapsulated.)\n\n7) Thanks!\n\nNow, uh, adding one more question that came up:\n\n8) Can you refer the model's frame explicitly? e.g.\n```xml\n<model name=\"my_model\">\n   <frame name=\"a\">\n     <!-- Same as `<pose>...</pose>`? -->\n     <pose frame=\"my_model\">...</pose>\n   </frame>\n</model>\n```\nIf so, how would you handle the rename of a `model`  via an `//include/name` element?\n\nIn Drake, we just merged initial support for the `<frame/>` tag [[ref](https://github.com/RobotLocomotion/drake/pull/9352)]; however, I'm unsure if I should permit users to access the model's frame in an SDF.\n\nIf users should be able to access it, then should they only be able to access it via the model-specified name, not the include-override name?\nIf that's the case, can I ask if it's possible to access the original name via `sdf::Model`?\n\n(All in all, it looks like the easiest solution for now might be to say you can't refer to a model's frame explicitly inside SDF, and if a user wants the model frame, they should specify a `//frame/pose` element without `@frame`?)", "markup": "markdown", "html": "<p>5) Makes sense!</p>\n<p>6) Nope, not looking for cross-model propagation, definitely most satisfied with a model boundary. (Keeps things nice and encapsulated.)</p>\n<p>7) Thanks!</p>\n<p>Now, uh, adding one more question that came up:</p>\n<p>8) Can you refer the model's frame explicitly? e.g.</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;my_model&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;a&quot;</span><span class=\"nt\">&gt;</span>\n     <span class=\"c\">&lt;!-- Same as `&lt;pose&gt;...&lt;/pose&gt;`? --&gt;</span>\n     <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;my_model&quot;</span><span class=\"nt\">&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n   <span class=\"nt\">&lt;/frame&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>If so, how would you handle the rename of a <code>model</code>  via an <code>//include/name</code> element?</p>\n<p>In Drake, we just merged initial support for the <code>&lt;frame/&gt;</code> tag [<a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake/pull/9352\" rel=\"nofollow\">ref</a>]; however, I'm unsure if I should permit users to access the model's frame in an SDF.</p>\n<p>If users should be able to access it, then should they only be able to access it via the model-specified name, not the include-override name?\nIf that's the case, can I ask if it's possible to access the original name via <code>sdf::Model</code>?</p>\n<p>(All in all, it looks like the easiest solution for now might be to say you can't refer to a model's frame explicitly inside SDF, and if a user wants the model frame, they should specify a <code>//frame/pose</code> element without <code>@frame</code>?)</p>", "type": "rendered"}, "created_on": "2018-10-15T21:21:11.687543+00:00", "user": {"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}, "updated_on": "2018-10-15T21:21:50.126221+00:00", "type": "issue_comment", "id": 48361969}