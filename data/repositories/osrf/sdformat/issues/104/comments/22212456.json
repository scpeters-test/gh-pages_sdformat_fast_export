{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/104/comments/22212456.json"}, "html": {"href": "#!/osrf/sdformat/issues/104#comment-22212456"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/104.json"}}, "type": "issue", "id": 104, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Memory leak in `Element`"}, "content": {"raw": "@traversaro we have some platform-specific code in gazebo for doing this:\n\n* [ServerFixture::GetMemInfo](https://bitbucket.org/osrf/gazebo/src/3272a19576b45cffa99c6b9365887b235b0d7ab0/gazebo/test/ServerFixture.cc?at=default&fileviewer=file-view-default#ServerFixture.cc-1578)\n* [test/performance/RAMLibrary.hh](https://bitbucket.org/osrf/gazebo/src/3272a19576b45cffa99c6b9365887b235b0d7ab0/test/performance/RAMLibrary.hh?at=default&fileviewer=file-view-default#RAMLibrary.hh-41)\n\nFor some reason those files have two different implementations for Linux, and one for OS X, and none for Windows. Those two sets of functions are close to 60 lines of code.\n\nThe python implementation is very compact:\n\n* [tools/get_mem_info.py](#!/osrf/sdformat/src/1e709ff88135357d650afb7c50dffbaec2623b7e/tools/get_mem_info.py?fileviewer=file-view-default) (in branch `issue_104_test`)\n\nIt does require some extra logic to account for API changes in the psutil module between the version I tested on trusty (from `python-psutil` debian) and the version I installed on OS X with `pip`. My personal preference is to just call python with a simple script rather than research a bunch of platform specific API's and test them on various machines. Just my opinion.", "markup": "markdown", "html": "<p>@traversaro we have some platform-specific code in gazebo for doing this:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/3272a19576b45cffa99c6b9365887b235b0d7ab0/gazebo/test/ServerFixture.cc?at=default&amp;fileviewer=file-view-default#ServerFixture.cc-1578\" rel=\"nofollow\">ServerFixture::GetMemInfo</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/3272a19576b45cffa99c6b9365887b235b0d7ab0/test/performance/RAMLibrary.hh?at=default&amp;fileviewer=file-view-default#RAMLibrary.hh-41\" rel=\"nofollow\">test/performance/RAMLibrary.hh</a></li>\n</ul>\n<p>For some reason those files have two different implementations for Linux, and one for OS X, and none for Windows. Those two sets of functions are close to 60 lines of code.</p>\n<p>The python implementation is very compact:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/1e709ff88135357d650afb7c50dffbaec2623b7e/tools/get_mem_info.py?fileviewer=file-view-default\" rel=\"nofollow\">tools/get_mem_info.py</a> (in branch <code>issue_104_test</code>)</li>\n</ul>\n<p>It does require some extra logic to account for API changes in the psutil module between the version I tested on trusty (from <code>python-psutil</code> debian) and the version I installed on OS X with <code>pip</code>. My personal preference is to just call python with a simple script rather than research a bunch of platform specific API's and test them on various machines. Just my opinion.</p>", "type": "rendered"}, "created_on": "2015-10-03T05:24:13.869592+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 22212456}