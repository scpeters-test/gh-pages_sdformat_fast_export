{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/39940095.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-39940095"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "I think there are a lot of great ideas here.\n\nIn the hopefully-not-too-distant future, we're going to have the ability to load arbitrary plugins in a completely generic way, so I'm not sure that we even need to worry much about a \"type\" specifier, except maybe to be used as an extra sanity check somewhere.\n\nBasically, pending the [ignition-common pull request 59](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/59), your plugin can be loaded into a generic `PluginPtr` container, and you can use that container to access any interfaces that your plugin instance provides, without the plugin loader or parser needing to know anything about the type. The plugin itself will know what interfaces it provides upon being loaded.\n\nThat being said, it's conceivable that you might have your own plugin loading framework which you'd like to utilize instead of the existing Gazebo plugin loading framework or the upcoming `ignition` plugin framework. If that's the case, then I would propose that the `type` attribute would indicate what kind of loader is expected to perform the loading operation. This would help with backwards compatibility, as we could specify `gazebo`, `ignition`, or a user's custom plugin loader. The Gazebo plugin loader would only pay attention if `gazebo` is specified, and `ignition` would only pay attention to it if `ignition` is specified.", "markup": "markdown", "html": "<p>I think there are a lot of great ideas here.</p>\n<p>In the hopefully-not-too-distant future, we're going to have the ability to load arbitrary plugins in a completely generic way, so I'm not sure that we even need to worry much about a \"type\" specifier, except maybe to be used as an extra sanity check somewhere.</p>\n<p>Basically, pending the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/59\" rel=\"nofollow\">ignition-common pull request 59</a>, your plugin can be loaded into a generic <code>PluginPtr</code> container, and you can use that container to access any interfaces that your plugin instance provides, without the plugin loader or parser needing to know anything about the type. The plugin itself will know what interfaces it provides upon being loaded.</p>\n<p>That being said, it's conceivable that you might have your own plugin loading framework which you'd like to utilize instead of the existing Gazebo plugin loading framework or the upcoming <code>ignition</code> plugin framework. If that's the case, then I would propose that the <code>type</code> attribute would indicate what kind of loader is expected to perform the loading operation. This would help with backwards compatibility, as we could specify <code>gazebo</code>, <code>ignition</code>, or a user's custom plugin loader. The Gazebo plugin loader would only pay attention if <code>gazebo</code> is specified, and <code>ignition</code> would only pay attention to it if <code>ignition</code> is specified.</p>", "type": "rendered"}, "created_on": "2017-09-18T20:02:00.607070+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 39940095}