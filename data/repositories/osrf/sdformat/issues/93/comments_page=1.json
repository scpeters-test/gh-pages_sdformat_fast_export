{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/20660803.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-20660803"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Ping !", "markup": "markdown", "html": "<p>Ping !</p>", "type": "rendered"}, "created_on": "2015-08-03T18:57:54.959310+00:00", "user": {"display_name": "sylvainjoyeux", "uuid": "{11579fb5-6368-4ec9-a820-10579e368fe7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D"}, "html": {"href": "https://bitbucket.org/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab99fe65b45016b2db44dddbfdf55664d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-4.png"}}, "nickname": "sylvainjoyeux", "type": "user", "account_id": "557058:b2449296-2ccf-409f-99e3-05df6003cede"}, "updated_on": null, "type": "issue_comment", "id": 20660803}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/20715058.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-20715058"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Thanks for the proposal. This is a very good idea. How about the following?\n\n\n```\n#!xml\n\n<plugin name=\"plugin_name\" type=\"gazebo\" file=\"somelibrary.so\">\n<!-- Insert any content here -->\n</plugin>\n```\n\nWhere the `file` element is optional.", "markup": "markdown", "html": "<p>Thanks for the proposal. This is a very good idea. How about the following?</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;plugin_name&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;gazebo&quot;</span> <span class=\"na\">file=</span><span class=\"s\">&quot;somelibrary.so&quot;</span><span class=\"nt\">&gt;</span>\n<span class=\"c\">&lt;!-- Insert any content here --&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>Where the <code>file</code> element is optional.</p>", "type": "rendered"}, "created_on": "2015-08-05T17:18:07.179800+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 20715058}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/20715568.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-20715568"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Not sure. Let's try to describe my use case and see if that makes sense.\n\nMy use case is that the same \"thrusters SDF extension\" is being interpreted by different elements in the system. There's a gazebo plugin for the physics, then there is a component that exports the plugin to the rest of the framework. That's what led me to propose having a single <plugin> tag with various sub-tags. This way, different software parts can share the common parameters but have the software-specific parts isolated.\n\nDoes that make sense ?", "markup": "markdown", "html": "<p>Not sure. Let's try to describe my use case and see if that makes sense.</p>\n<p>My use case is that the same \"thrusters SDF extension\" is being interpreted by different elements in the system. There's a gazebo plugin for the physics, then there is a component that exports the plugin to the rest of the framework. That's what led me to propose having a single &lt;plugin&gt; tag with various sub-tags. This way, different software parts can share the common parameters but have the software-specific parts isolated.</p>\n<p>Does that make sense ?</p>", "type": "rendered"}, "created_on": "2015-08-05T17:47:43.774257+00:00", "user": {"display_name": "sylvainjoyeux", "uuid": "{11579fb5-6368-4ec9-a820-10579e368fe7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D"}, "html": {"href": "https://bitbucket.org/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab99fe65b45016b2db44dddbfdf55664d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-4.png"}}, "nickname": "sylvainjoyeux", "type": "user", "account_id": "557058:b2449296-2ccf-409f-99e3-05df6003cede"}, "updated_on": null, "type": "issue_comment", "id": 20715568}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/20715673.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-20715673"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Can you expand your example to include some of the common parameters that you mentioned?", "markup": "markdown", "html": "<p>Can you expand your example to include some of the common parameters that you mentioned?</p>", "type": "rendered"}, "created_on": "2015-08-05T17:53:35.041554+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 20715673}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/20715839.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-20715839"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "The plugin expects a list of links and thruster parameters. The thruster limits are used both in the physics and in the gazebo-to-rock interface.\n\nBy the way, why is a plugin name even needed ?\n\n~~~\n<plugin name='thrusters'>\n   <gazebo>libgazebo_thrusters.so</gazebo>\n   <!-- name of the Rock task that can export this plugin to the outside world -->\n   <rock>gazebo_thrusters::Task</rock>\n            \n   <thruster name='thruster::x::right'>\n        <max_thrust>200</max_thrust>\n        <min_thrust>-200</min_thrust>\n   </thruster>\n   <thruster name='thruster::x::left'>\n        <max_thrust>200</max_thrust>\n        <min_thrust>-200</min_thrust>\n   </thruster>\n</plugin>\n~~~\n", "markup": "markdown", "html": "<p>The plugin expects a list of links and thruster parameters. The thruster limits are used both in the physics and in the gazebo-to-rock interface.</p>\n<p>By the way, why is a plugin name even needed ?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&#39;thrusters&#39;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;gazebo&gt;</span>libgazebo_thrusters.so<span class=\"nt\">&lt;/gazebo&gt;</span>\n   <span class=\"c\">&lt;!-- name of the Rock task that can export this plugin to the outside world --&gt;</span>\n   <span class=\"nt\">&lt;rock&gt;</span>gazebo_thrusters::Task<span class=\"nt\">&lt;/rock&gt;</span>\n\n   <span class=\"nt\">&lt;thruster</span> <span class=\"na\">name=</span><span class=\"s\">&#39;thruster::x::right&#39;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;max_thrust&gt;</span>200<span class=\"nt\">&lt;/max_thrust&gt;</span>\n        <span class=\"nt\">&lt;min_thrust&gt;</span>-200<span class=\"nt\">&lt;/min_thrust&gt;</span>\n   <span class=\"nt\">&lt;/thruster&gt;</span>\n   <span class=\"nt\">&lt;thruster</span> <span class=\"na\">name=</span><span class=\"s\">&#39;thruster::x::left&#39;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;max_thrust&gt;</span>200<span class=\"nt\">&lt;/max_thrust&gt;</span>\n        <span class=\"nt\">&lt;min_thrust&gt;</span>-200<span class=\"nt\">&lt;/min_thrust&gt;</span>\n   <span class=\"nt\">&lt;/thruster&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-08-05T18:05:20.334916+00:00", "user": {"display_name": "sylvainjoyeux", "uuid": "{11579fb5-6368-4ec9-a820-10579e368fe7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D"}, "html": {"href": "https://bitbucket.org/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab99fe65b45016b2db44dddbfdf55664d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-4.png"}}, "nickname": "sylvainjoyeux", "type": "user", "account_id": "557058:b2449296-2ccf-409f-99e3-05df6003cede"}, "updated_on": null, "type": "issue_comment", "id": 20715839}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/20715972.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-20715972"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "The plugin name is there so that it be referenced by a program. Gazebo used to have the ability to unload a plugin based on a name.\n\nThe contents of a `<plugin>` element are left undefined by SDF, and are directly copied. So, in your example you can do the following:\n\n\n```\n#!xml\n\n<plugin name='thrusters' file=\"libgazebo_thrusters.so\">\n   <!-- name of the Rock task that can export this plugin to the outside world -->\n   <rock>gazebo_thrusters::Task</rock>\n\n   <thruster name='thruster::x::right'>\n        <max_thrust>200</max_thrust>\n        <min_thrust>-200</min_thrust>\n   </thruster>\n   <thruster name='thruster::x::left'>\n        <max_thrust>200</max_thrust>\n        <min_thrust>-200</min_thrust>\n   </thruster>\n</plugin>\n```\n\nGazebo will be happy with this, and your program should just ignore the `file` attribute.", "markup": "markdown", "html": "<p>The plugin name is there so that it be referenced by a program. Gazebo used to have the ability to unload a plugin based on a name.</p>\n<p>The contents of a <code>&lt;plugin&gt;</code> element are left undefined by SDF, and are directly copied. So, in your example you can do the following:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&#39;thrusters&#39;</span> <span class=\"na\">file=</span><span class=\"s\">&quot;libgazebo_thrusters.so&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"c\">&lt;!-- name of the Rock task that can export this plugin to the outside world --&gt;</span>\n   <span class=\"nt\">&lt;rock&gt;</span>gazebo_thrusters::Task<span class=\"nt\">&lt;/rock&gt;</span>\n\n   <span class=\"nt\">&lt;thruster</span> <span class=\"na\">name=</span><span class=\"s\">&#39;thruster::x::right&#39;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;max_thrust&gt;</span>200<span class=\"nt\">&lt;/max_thrust&gt;</span>\n        <span class=\"nt\">&lt;min_thrust&gt;</span>-200<span class=\"nt\">&lt;/min_thrust&gt;</span>\n   <span class=\"nt\">&lt;/thruster&gt;</span>\n   <span class=\"nt\">&lt;thruster</span> <span class=\"na\">name=</span><span class=\"s\">&#39;thruster::x::left&#39;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;max_thrust&gt;</span>200<span class=\"nt\">&lt;/max_thrust&gt;</span>\n        <span class=\"nt\">&lt;min_thrust&gt;</span>-200<span class=\"nt\">&lt;/min_thrust&gt;</span>\n   <span class=\"nt\">&lt;/thruster&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>Gazebo will be happy with this, and your program should just ignore the <code>file</code> attribute.</p>", "type": "rendered"}, "created_on": "2015-08-05T18:12:41.753323+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 20715972}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/20716146.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-20716146"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Yes. That is indeed a very obvious solution. With the extension of the type= attribute, and file= being optional, it would definitely cover all my use-cases.", "markup": "markdown", "html": "<p>Yes. That is indeed a very obvious solution. With the extension of the type= attribute, and file= being optional, it would definitely cover all my use-cases.</p>", "type": "rendered"}, "created_on": "2015-08-05T18:22:20.075593+00:00", "user": {"display_name": "sylvainjoyeux", "uuid": "{11579fb5-6368-4ec9-a820-10579e368fe7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D"}, "html": {"href": "https://bitbucket.org/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab99fe65b45016b2db44dddbfdf55664d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-4.png"}}, "nickname": "sylvainjoyeux", "type": "user", "account_id": "557058:b2449296-2ccf-409f-99e3-05df6003cede"}, "updated_on": null, "type": "issue_comment", "id": 20716146}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/39926930.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-39926930"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "I'd like to go back to this.\n\nWhat would it take to get the type and optional file parameter implemented ? I don't mind doing the work, but I'm not entirely sure about the way forward ...\n\nHow I see it, I would need to:\n* propose a PR to sdformat to add the type attribute and make the filename attribute optional. This requires only to change the .sdf description (/usr/share/sdformat/... in the installed packages). The type attribute would be 'gazebo' by default.\n* propose a PR to gazebo that would ignore plugin tags whose type is not `\"gazebo\"`.\n\nAm I missing anything ?", "markup": "markdown", "html": "<p>I'd like to go back to this.</p>\n<p>What would it take to get the type and optional file parameter implemented ? I don't mind doing the work, but I'm not entirely sure about the way forward ...</p>\n<p>How I see it, I would need to:\n<em> propose a PR to sdformat to add the type attribute and make the filename attribute optional. This requires only to change the .sdf description (/usr/share/sdformat/... in the installed packages). The type attribute would be 'gazebo' by default.\n</em> propose a PR to gazebo that would ignore plugin tags whose type is not <code>\"gazebo\"</code>.</p>\n<p>Am I missing anything ?</p>", "type": "rendered"}, "created_on": "2017-09-18T14:30:27.562510+00:00", "user": {"display_name": "sylvainjoyeux", "uuid": "{11579fb5-6368-4ec9-a820-10579e368fe7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D"}, "html": {"href": "https://bitbucket.org/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab99fe65b45016b2db44dddbfdf55664d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-4.png"}}, "nickname": "sylvainjoyeux", "type": "user", "account_id": "557058:b2449296-2ccf-409f-99e3-05df6003cede"}, "updated_on": null, "type": "issue_comment", "id": 39926930}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/39929299.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-39929299"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "I'd suggest we make `type` optional with no default value, and for Gazebo, we can start using [gazebo plugin types](https://bitbucket.org/osrf/gazebo/src/58fbe39d9e90bcfabc9f4a2ba911ce934b29b66a/gazebo/common/Plugin.hh?fileviewer=file-view-default#Plugin.hh-372) like `gazebo::ModelPlugin`, `gazebo::WorldPlugin`, etc but still hadle the case where type is not provided. We're also starting to use plugins on the Ignition libraries, and in that case we can start using types like [ignition::gui::plugins::Publisher](https://bitbucket.org/ignitionrobotics/ign-gui/src/d70426197da133c7a95ac7e5dc5984dd4a226a6e/src/plugins/Publisher.cc?fileviewer=file-view-default#Publisher.cc-182).\n\nIf we make `filename` optional, we also have to double check on Gazebo's side whether that's being properly handled.", "markup": "markdown", "html": "<p>I'd suggest we make <code>type</code> optional with no default value, and for Gazebo, we can start using <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/58fbe39d9e90bcfabc9f4a2ba911ce934b29b66a/gazebo/common/Plugin.hh?fileviewer=file-view-default#Plugin.hh-372\" rel=\"nofollow\">gazebo plugin types</a> like <code>gazebo::ModelPlugin</code>, <code>gazebo::WorldPlugin</code>, etc but still hadle the case where type is not provided. We're also starting to use plugins on the Ignition libraries, and in that case we can start using types like <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-gui/src/d70426197da133c7a95ac7e5dc5984dd4a226a6e/src/plugins/Publisher.cc?fileviewer=file-view-default#Publisher.cc-182\" rel=\"nofollow\">ignition::gui::plugins::Publisher</a>.</p>\n<p>If we make <code>filename</code> optional, we also have to double check on Gazebo's side whether that's being properly handled.</p>", "type": "rendered"}, "created_on": "2017-09-18T15:59:22.116479+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-09-18T15:59:57.399797+00:00", "type": "issue_comment", "id": 39929299}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/39937295.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-39937295"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Does it make a lot of sense to use the plugin class as the 'type' attribute ? I would think that the plugin type is constrained by where the plugin tag is (i.e. a plugin inside a <model> can only be a ModelTask), in which case just `gazebo` would be enough.", "markup": "markdown", "html": "<p>Does it make a lot of sense to use the plugin class as the 'type' attribute ? I would think that the plugin type is constrained by where the plugin tag is (i.e. a plugin inside a &lt;model&gt; can only be a ModelTask), in which case just <code>gazebo</code> would be enough.</p>", "type": "rendered"}, "created_on": "2017-09-18T17:12:12.700777+00:00", "user": {"display_name": "sylvainjoyeux", "uuid": "{11579fb5-6368-4ec9-a820-10579e368fe7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D"}, "html": {"href": "https://bitbucket.org/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab99fe65b45016b2db44dddbfdf55664d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-4.png"}}, "nickname": "sylvainjoyeux", "type": "user", "account_id": "557058:b2449296-2ccf-409f-99e3-05df6003cede"}, "updated_on": null, "type": "issue_comment", "id": 39937295}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/39937396.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-39937396"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Fair point, maybe my example should have been a derived class like  `gazebo::BuoyancyPlugin`, which is derived from `gazebo::ModelPlugin`.", "markup": "markdown", "html": "<p>Fair point, maybe my example should have been a derived class like  <code>gazebo::BuoyancyPlugin</code>, which is derived from <code>gazebo::ModelPlugin</code>.</p>", "type": "rendered"}, "created_on": "2017-09-18T17:17:03.679185+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 39937396}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/39937974.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-39937974"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "cc @mxgrey since he has been improving plugin support in ignition-common", "markup": "markdown", "html": "<p>cc @mxgrey since he has been improving plugin support in ignition-common</p>", "type": "rendered"}, "created_on": "2017-09-18T17:50:20.285933+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 39937974}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/39940095.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-39940095"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "I think there are a lot of great ideas here.\n\nIn the hopefully-not-too-distant future, we're going to have the ability to load arbitrary plugins in a completely generic way, so I'm not sure that we even need to worry much about a \"type\" specifier, except maybe to be used as an extra sanity check somewhere.\n\nBasically, pending the [ignition-common pull request 59](https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/59), your plugin can be loaded into a generic `PluginPtr` container, and you can use that container to access any interfaces that your plugin instance provides, without the plugin loader or parser needing to know anything about the type. The plugin itself will know what interfaces it provides upon being loaded.\n\nThat being said, it's conceivable that you might have your own plugin loading framework which you'd like to utilize instead of the existing Gazebo plugin loading framework or the upcoming `ignition` plugin framework. If that's the case, then I would propose that the `type` attribute would indicate what kind of loader is expected to perform the loading operation. This would help with backwards compatibility, as we could specify `gazebo`, `ignition`, or a user's custom plugin loader. The Gazebo plugin loader would only pay attention if `gazebo` is specified, and `ignition` would only pay attention to it if `ignition` is specified.", "markup": "markdown", "html": "<p>I think there are a lot of great ideas here.</p>\n<p>In the hopefully-not-too-distant future, we're going to have the ability to load arbitrary plugins in a completely generic way, so I'm not sure that we even need to worry much about a \"type\" specifier, except maybe to be used as an extra sanity check somewhere.</p>\n<p>Basically, pending the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-common/pull-requests/59\" rel=\"nofollow\">ignition-common pull request 59</a>, your plugin can be loaded into a generic <code>PluginPtr</code> container, and you can use that container to access any interfaces that your plugin instance provides, without the plugin loader or parser needing to know anything about the type. The plugin itself will know what interfaces it provides upon being loaded.</p>\n<p>That being said, it's conceivable that you might have your own plugin loading framework which you'd like to utilize instead of the existing Gazebo plugin loading framework or the upcoming <code>ignition</code> plugin framework. If that's the case, then I would propose that the <code>type</code> attribute would indicate what kind of loader is expected to perform the loading operation. This would help with backwards compatibility, as we could specify <code>gazebo</code>, <code>ignition</code>, or a user's custom plugin loader. The Gazebo plugin loader would only pay attention if <code>gazebo</code> is specified, and <code>ignition</code> would only pay attention to it if <code>ignition</code> is specified.</p>", "type": "rendered"}, "created_on": "2017-09-18T20:02:00.607070+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 39940095}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/41513806.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-41513806"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "I agree with @mxgrey's last paragraph and think the `type` attribute is necessary: it allows other projects to use their own plugin loader, and it allows ignition projects to only load plugins relevant to them ([related](https://bitbucket.org/ignitionrobotics/ign-sensors/pull-requests/2/a-bit-of-code-refactor/diff#comment-46735566)). If you recognize the type then use your plugin loader.\n\n```xml\n<plugin name=\"thrusters\" type=\"ignition::gui::Plugin\" filename=\"libgazebo_thrusters_gui.so\">\n  <max_thrust>200</max_thrust>\n  <min_thrust>-200</min_thrust>\n</plugin>\n```\n\nBackwards compatibility options:\n\n1. @chapulina's [idea](#!/osrf/sdformat/issues/93/change-the-sdf-spec-to-make-less-gazebo#comment-39929299): add `type` as an optional attribute. Gazebo will attempt to load plugins with no type, printing a warning that type should be more specific.\n\n1. Make `type` required and bump the `SDF` version. The conversion script from 1.6 will automatically add gazebo types to plugin blocks. Gazebo will only load plugins with its types.\n\n1. ???\n\nI mention bumping the `SDF` version because I think the `filename` attribute should be renamed to `location` if `type` is added. Another plugin loader may not use filenames. Maybe it expects a URI and will download the plugin?", "markup": "markdown", "html": "<p>I agree with @mxgrey's last paragraph and think the <code>type</code> attribute is necessary: it allows other projects to use their own plugin loader, and it allows ignition projects to only load plugins relevant to them (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-sensors/pull-requests/2/a-bit-of-code-refactor/diff#comment-46735566\" rel=\"nofollow\">related</a>). If you recognize the type then use your plugin loader.</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;thrusters&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ignition::gui::Plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libgazebo_thrusters_gui.so&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;max_thrust&gt;</span>200<span class=\"nt\">&lt;/max_thrust&gt;</span>\n  <span class=\"nt\">&lt;min_thrust&gt;</span>-200<span class=\"nt\">&lt;/min_thrust&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>Backwards compatibility options:</p>\n<ol>\n<li>\n<p>@chapulina's <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/issues/93/change-the-sdf-spec-to-make-less-gazebo#comment-39929299\" rel=\"nofollow\">idea</a>: add <code>type</code> as an optional attribute. Gazebo will attempt to load plugins with no type, printing a warning that type should be more specific.</p>\n</li>\n<li>\n<p>Make <code>type</code> required and bump the <code>SDF</code> version. The conversion script from 1.6 will automatically add gazebo types to plugin blocks. Gazebo will only load plugins with its types.</p>\n</li>\n<li>\n<p>???</p>\n</li>\n</ol>\n<p>I mention bumping the <code>SDF</code> version because I think the <code>filename</code> attribute should be renamed to <code>location</code> if <code>type</code> is added. Another plugin loader may not use filenames. Maybe it expects a URI and will download the plugin?</p>", "type": "rendered"}, "created_on": "2017-11-29T17:21:49.291629+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 41513806}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/48740950.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-48740950"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Discussion in [`gazebo-yarp-plugins`](https://github.com/robotology/gazebo-yarp-plugins/issues/392#issuecomment-434851652) points out another possible use of `SDF <plugin>` when detached from a `gazebo plugin`.\n\nThe aim here is to add a custom `SDF Element` to a `<model>` (that will be then used to override an element of a plugin), but a custom element can be add only trough a `<plugin>`.  \nA possible solution is to create a dummy plugin (e.g. `gazebo_yarp_dummy.so`)  just to be able to define the custom elements inside the plugin:\n```\n<model name=\"myModelOverriden\">\n  <plugin name=\"plugin_override\" filename=\"gazebo_yarp_dummy.so\">\n    <yarpPluginConfigurationOverride plugin_name='overriden_plugin'> </yarpPluginConfigurationOverride>\n  </plugin>\n  <include>\n    <uri>model://myModel</uri>\n  </include>\n</model>\n```\n  \nMaking the attribute `filename` optional, it would avoid the use of a dummy plugin.", "markup": "markdown", "html": "<p>Discussion in <a data-is-external-link=\"true\" href=\"https://github.com/robotology/gazebo-yarp-plugins/issues/392#issuecomment-434851652\" rel=\"nofollow\"><code>gazebo-yarp-plugins</code></a> points out another possible use of <code>SDF &lt;plugin&gt;</code> when detached from a <code>gazebo plugin</code>.</p>\n<p>The aim here is to add a custom <code>SDF Element</code> to a <code>&lt;model&gt;</code> (that will be then used to override an element of a plugin), but a custom element can be add only trough a <code>&lt;plugin&gt;</code>.<br />\nA possible solution is to create a dummy plugin (e.g. <code>gazebo_yarp_dummy.so</code>)  just to be able to define the custom elements inside the plugin:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;myModelOverriden&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;plugin_override&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;gazebo_yarp_dummy.so&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;yarpPluginConfigurationOverride</span> <span class=\"na\">plugin_name=</span><span class=\"s\">&#39;overriden_plugin&#39;</span><span class=\"nt\">&gt;</span> <span class=\"nt\">&lt;/yarpPluginConfigurationOverride&gt;</span>\n  <span class=\"nt\">&lt;/plugin&gt;</span>\n  <span class=\"nt\">&lt;include&gt;</span>\n    <span class=\"nt\">&lt;uri&gt;</span>model://myModel<span class=\"nt\">&lt;/uri&gt;</span>\n  <span class=\"nt\">&lt;/include&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>Making the attribute <code>filename</code> optional, it would avoid the use of a dummy plugin.</p>", "type": "rendered"}, "created_on": "2018-11-05T11:44:22.068369+00:00", "user": {"display_name": "Lorenzo Rapetti", "uuid": "{163ad6dd-2725-4cbb-9d5f-7078d8891005}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B163ad6dd-2725-4cbb-9d5f-7078d8891005%7D"}, "html": {"href": "https://bitbucket.org/%7B163ad6dd-2725-4cbb-9d5f-7078d8891005%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a42e8a6e30920121a4955f5/eb43c756-42e6-493a-a268-482525c964d7/128"}}, "nickname": "lorrapetti", "type": "user", "account_id": "5a42e8a6e30920121a4955f5"}, "updated_on": "2018-11-05T14:06:41.001798+00:00", "type": "issue_comment", "id": 48740950}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93/comments/56308733.json"}, "html": {"href": "#!/osrf/sdformat/issues/93#comment-56308733"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}}, "type": "issue", "id": 93, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific"}, "content": {"raw": "Another aspect that is Gazebo-specific is the attribute `type` of the element `physics`, see a relevant discussion in [https://bitbucket.org/ignitionrobotics/ign-gazebo/pull-requests/541/find-custom-physics-engines/diff#comment-137379501](https://bitbucket.org/ignitionrobotics/ign-gazebo/pull-requests/541/find-custom-physics-engines/diff#comment-137379501) .", "markup": "markdown", "html": "<p>Another aspect that is Gazebo-specific is the attribute <code>type</code> of the element <code>physics</code>, see a relevant discussion in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-gazebo/pull-requests/541/find-custom-physics-engines/diff#comment-137379501\" rel=\"nofollow\">https://bitbucket.org/ignitionrobotics/ign-gazebo/pull-requests/541/find-custom-physics-engines/diff#comment-137379501</a> .</p>", "type": "rendered"}, "created_on": "2020-02-25T18:34:21.849368+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": null, "type": "issue_comment", "id": 56308733}], "page": 1, "size": 16}