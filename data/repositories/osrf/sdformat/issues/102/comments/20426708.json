{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/102/comments/20426708.json"}, "html": {"href": "#!/osrf/sdformat/issues/102#comment-20426708"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/102.json"}}, "type": "issue", "id": 102, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "sdformat-sdf 3.x package does not work well with libsdformat2"}, "content": {"raw": "I haven't tried to compile gazebo5 from source while using the combo: libsdformat2_2.3.2 + sdformat-sdf_3.0.0 but looking into the code, while the change to the Param.hh would include uint64_t into the supported types, I would say that [this piece that is inside Param.cc](#!/osrf/sdformat/pull-request/188/adding-iterations-to-state/diff#Lsrc/Param.ccT68) is needed no to fall into the `Unknown parameter type`. I could be wrong, but prefer not to risk.\n\nWe probably want to keep gazebo5 depending on sdformat2, so I'm afraid that recompile using sdformat-sdf_3.0.0 is not an option. If we count that gazebo5/sdformat2 is inside Ubuntu Vivid (and used in ROS), our margin to make new compatible versions is narrow.\n \nFor me, it makes sense to keep compatibility during the whole SDF 1.5 series (like having an API), which probably means not to add a breaking change and, if needed, push them into an SDF 1.6. I see the sdformat-sdf package as somewhat sdformat-sdf1.5.", "markup": "markdown", "html": "<p>I haven't tried to compile gazebo5 from source while using the combo: libsdformat2_2.3.2 + sdformat-sdf_3.0.0 but looking into the code, while the change to the Param.hh would include uint64_t into the supported types, I would say that <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/pull-request/188/adding-iterations-to-state/diff#Lsrc/Param.ccT68\" rel=\"nofollow\">this piece that is inside Param.cc</a> is needed no to fall into the <code>Unknown parameter type</code>. I could be wrong, but prefer not to risk.</p>\n<p>We probably want to keep gazebo5 depending on sdformat2, so I'm afraid that recompile using sdformat-sdf_3.0.0 is not an option. If we count that gazebo5/sdformat2 is inside Ubuntu Vivid (and used in ROS), our margin to make new compatible versions is narrow.</p>\n<p>For me, it makes sense to keep compatibility during the whole SDF 1.5 series (like having an API), which probably means not to add a breaking change and, if needed, push them into an SDF 1.6. I see the sdformat-sdf package as somewhat sdformat-sdf1.5.</p>", "type": "rendered"}, "created_on": "2015-07-23T17:59:39.559020+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 20426708}