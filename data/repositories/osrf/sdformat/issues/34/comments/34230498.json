{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/34/comments/34230498.json"}, "html": {"href": "#!/osrf/sdformat/issues/34#comment-34230498"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/34.json"}}, "type": "issue", "id": 34, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make SDFormat lighter weight, by removing boost."}, "content": {"raw": "So I've been going through this problem.  Here's what I know about boost use within SDFormat:\n\n1.  Boost regex is used\n2.  Boost lexical_casts are used\n3.  Boost filesystem is used\n4.  Boost::Any is used\n5.  Boost is used by the internal urdfdom copy\n\nA few days ago I opened a pull request to get rid of the boost regex dependency (1).  Once that is in, I have a pending pull request to remove most of the uses of lexical_cast (2).  That leaves the harder ones.  We can take care of (3) by removing the internal urdfdom implementation, which we plan to do, but will need some work as the API has changed.  Taking care of (4) means changing the external API, which we will have to do by deprecating the current Boost::Any API, adding a new API to replace it, waiting a release cycle, and then removing it completely.  Finally, taking care of (5) means that we have to have our own cross-platform filesystem implementations, which we can do, but will take some work.", "markup": "markdown", "html": "<p>So I've been going through this problem.  Here's what I know about boost use within SDFormat:</p>\n<ol>\n<li>Boost regex is used</li>\n<li>Boost lexical_casts are used</li>\n<li>Boost filesystem is used</li>\n<li>Boost::Any is used</li>\n<li>Boost is used by the internal urdfdom copy</li>\n</ol>\n<p>A few days ago I opened a pull request to get rid of the boost regex dependency (1).  Once that is in, I have a pending pull request to remove most of the uses of lexical_cast (2).  That leaves the harder ones.  We can take care of (3) by removing the internal urdfdom implementation, which we plan to do, but will need some work as the API has changed.  Taking care of (4) means changing the external API, which we will have to do by deprecating the current Boost::Any API, adding a new API to replace it, waiting a release cycle, and then removing it completely.  Finally, taking care of (5) means that we have to have our own cross-platform filesystem implementations, which we can do, but will take some work.</p>", "type": "rendered"}, "created_on": "2017-02-07T16:52:58.513047+00:00", "user": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "updated_on": null, "type": "issue_comment", "id": 34230498}