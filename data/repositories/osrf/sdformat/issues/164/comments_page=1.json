{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164/comments/38332190.json"}, "html": {"href": "#!/osrf/sdformat/issues/164#comment-38332190"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164.json"}}, "type": "issue", "id": 164, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "gz sdf segmentation fault 11 due to conflict between <sensor> and <collision> tags"}, "content": {"raw": "As a side note: there was no warning nor error message displayed on the terminal where Gazebo was launched from. We just got the application crash report on the Mac console.\nFor additional information (including the crash report) please refer to the issue raised on github https://github.com/robotology-playground/icub-model-generator/issues/54.", "markup": "markdown", "html": "<p>As a side note: there was no warning nor error message displayed on the terminal where Gazebo was launched from. We just got the application crash report on the Mac console.\nFor additional information (including the crash report) please refer to the issue raised on github <a href=\"https://github.com/robotology-playground/icub-model-generator/issues/54\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/robotology-playground/icub-model-generator/issues/54</a>.</p>", "type": "rendered"}, "created_on": "2017-07-19T14:02:48.353919+00:00", "user": {"display_name": "Nuno Guedelha", "uuid": "{5e1f6c72-9509-4dd5-93dc-91cc9fdc8c20}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5e1f6c72-9509-4dd5-93dc-91cc9fdc8c20%7D"}, "html": {"href": "https://bitbucket.org/%7B5e1f6c72-9509-4dd5-93dc-91cc9fdc8c20%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5ae8ca67c366d3973281c37037184af6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNG-3.png"}}, "nickname": "gnuno", "type": "user", "account_id": "557058:dbe09322-7d6f-4275-93ad-4add344f78ec"}, "updated_on": null, "type": "issue_comment", "id": 38332190}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164/comments/38516894.json"}, "html": {"href": "#!/osrf/sdformat/issues/164#comment-38516894"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164.json"}}, "type": "issue", "id": 164, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "gz sdf segmentation fault 11 due to conflict between <sensor> and <collision> tags"}, "content": {"raw": "It doesn't seg-fault for me, but I can confirm the parsing error that depends on the order of the `<gazebo>` tags.", "markup": "markdown", "html": "<p>It doesn't seg-fault for me, but I can confirm the parsing error that depends on the order of the <code>&lt;gazebo&gt;</code> tags.</p>", "type": "rendered"}, "created_on": "2017-07-25T19:06:00.965639+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38516894}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164/comments/38517089.json"}, "html": {"href": "#!/osrf/sdformat/issues/164#comment-38517089"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164.json"}}, "type": "issue", "id": 164, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "gz sdf segmentation fault 11 due to conflict between <sensor> and <collision> tags"}, "content": {"raw": "I think there is a bug in [InsertSDFExtensionCollision](#!/osrf/sdformat/src/654ab4c930e1abe28208df47d4a49d8cf7515e08/src/parser_urdf.cc?fileviewer=file-view-default#parser_urdf.cc-1478).", "markup": "markdown", "html": "<p>I think there is a bug in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/654ab4c930e1abe28208df47d4a49d8cf7515e08/src/parser_urdf.cc?fileviewer=file-view-default#parser_urdf.cc-1478\" rel=\"nofollow\">InsertSDFExtensionCollision</a>.</p>", "type": "rendered"}, "created_on": "2017-07-25T19:18:28.686140+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38517089}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164/comments/38517112.json"}, "html": {"href": "#!/osrf/sdformat/issues/164#comment-38517112"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164.json"}}, "type": "issue", "id": 164, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "gz sdf segmentation fault 11 due to conflict between <sensor> and <collision> tags"}, "content": {"raw": "~~~\n$ valgrind --tool=memcheck --verbose gz sdf -p singleLinkModel_V2.urdf\n...\n==32150== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)\n==32150== \n==32150== 1 errors in context 1 of 2:\n==32150== Invalid read of size 8\n==32150==    at 0xB0039C6: TiXmlNode::FirstChild(char const*) const (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB003BCD: TiXmlNode::FirstChildElement(char const*) const (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0x94F0DA4: FirstChildElement (tinyxml.h:676)\n==32150==    by 0x94F0DA4: FirstChildElement (tinyxml.h:681)\n==32150==    by 0x94F0DA4: AddKeyValue(TiXmlElement*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:1231)\n==32150==    by 0x94FB675: InsertSDFExtensionCollision(TiXmlElement*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:1880)\n==32150==    by 0x94FC379: CreateCollision(TiXmlElement*, boost::shared_ptr<urdf::Link const>, boost::shared_ptr<urdf::Collision>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:3357)\n==32150==    by 0x94FC6CC: CreateCollisions(TiXmlElement*, boost::shared_ptr<urdf::Link const>) (parser_urdf.cc:3013)\n==32150==    by 0x94FD2EF: CreateLink(TiXmlElement*, boost::shared_ptr<urdf::Link const>, ignition::math::Pose3<double>&) (parser_urdf.cc:2883)\n==32150==    by 0x94FDC1E: CreateSDF(TiXmlElement*, boost::shared_ptr<urdf::Link const>, ignition::math::Pose3<double> const&) (parser_urdf.cc:2817)\n==32150==    by 0x9505114: sdf::URDF2SDF::InitModelString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (parser_urdf.cc:3470)\n==32150==    by 0x9505607: sdf::URDF2SDF::InitModelDoc(TiXmlDocument*) (parser_urdf.cc:3500)\n==32150==    by 0x9505756: sdf::URDF2SDF::InitModelFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:3509)\n==32150==    by 0x94E1BBB: sdf::readFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<sdf::SDF>) (parser.cc:302)\n==32150==  Address 0x28 is not stack'd, malloc'd or (recently) free'd\n==32150== \n==32150== \n==32150== 1 errors in context 2 of 2:\n==32150== Invalid read of size 8\n==32150==    at 0x94FB65B: InsertSDFExtensionCollision(TiXmlElement*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:1879)\n==32150==    by 0x94FC379: CreateCollision(TiXmlElement*, boost::shared_ptr<urdf::Link const>, boost::shared_ptr<urdf::Collision>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:3357)\n==32150==    by 0x94FC6CC: CreateCollisions(TiXmlElement*, boost::shared_ptr<urdf::Link const>) (parser_urdf.cc:3013)\n==32150==    by 0x94FD2EF: CreateLink(TiXmlElement*, boost::shared_ptr<urdf::Link const>, ignition::math::Pose3<double>&) (parser_urdf.cc:2883)\n==32150==    by 0x94FDC1E: CreateSDF(TiXmlElement*, boost::shared_ptr<urdf::Link const>, ignition::math::Pose3<double> const&) (parser_urdf.cc:2817)\n==32150==    by 0x9505114: sdf::URDF2SDF::InitModelString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (parser_urdf.cc:3470)\n==32150==    by 0x9505607: sdf::URDF2SDF::InitModelDoc(TiXmlDocument*) (parser_urdf.cc:3500)\n==32150==    by 0x9505756: sdf::URDF2SDF::InitModelFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:3509)\n==32150==    by 0x94E1BBB: sdf::readFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<sdf::SDF>) (parser.cc:302)\n==32150==    by 0x41F8B4: ??? (in /usr/bin/gz-8.1.1)\n==32150==    by 0x41DB56: ??? (in /usr/bin/gz-8.1.1)\n==32150==    by 0x41AB57: ??? (in /usr/bin/gz-8.1.1)\n==32150==  Address 0x3f931060 is 0 bytes inside a block of size 216 free'd\n==32150==    at 0x4C2F24B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==32150==    by 0xB003901: TiXmlNode::Clear() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB005BD0: TiXmlElement::ClearThis() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB005C2B: TiXmlElement::~TiXmlElement() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB005C78: TiXmlElement::~TiXmlElement() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB003901: TiXmlNode::Clear() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB005BD0: TiXmlElement::ClearThis() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB005C2B: TiXmlElement::~TiXmlElement() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB005C78: TiXmlElement::~TiXmlElement() (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0xB003968: TiXmlNode::RemoveChild(TiXmlNode*) (in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2)\n==32150==    by 0x94FAC58: InsertSDFExtensionCollision(TiXmlElement*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:1728)\n==32150==    by 0x94FC379: CreateCollision(TiXmlElement*, boost::shared_ptr<urdf::Link const>, boost::shared_ptr<urdf::Collision>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:3357)\n==32150==  Block was alloc'd at\n==32150==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==32150==    by 0x94FBC6E: InsertSDFExtensionCollision(TiXmlElement*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:1861)\n==32150==    by 0x94FC379: CreateCollision(TiXmlElement*, boost::shared_ptr<urdf::Link const>, boost::shared_ptr<urdf::Collision>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:3357)\n==32150==    by 0x94FC6CC: CreateCollisions(TiXmlElement*, boost::shared_ptr<urdf::Link const>) (parser_urdf.cc:3013)\n==32150==    by 0x94FD2EF: CreateLink(TiXmlElement*, boost::shared_ptr<urdf::Link const>, ignition::math::Pose3<double>&) (parser_urdf.cc:2883)\n==32150==    by 0x94FDC1E: CreateSDF(TiXmlElement*, boost::shared_ptr<urdf::Link const>, ignition::math::Pose3<double> const&) (parser_urdf.cc:2817)\n==32150==    by 0x9505114: sdf::URDF2SDF::InitModelString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (parser_urdf.cc:3470)\n==32150==    by 0x9505607: sdf::URDF2SDF::InitModelDoc(TiXmlDocument*) (parser_urdf.cc:3500)\n==32150==    by 0x9505756: sdf::URDF2SDF::InitModelFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (parser_urdf.cc:3509)\n==32150==    by 0x94E1BBB: sdf::readFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<sdf::SDF>) (parser.cc:302)\n==32150==    by 0x41F8B4: ??? (in /usr/bin/gz-8.1.1)\n==32150==    by 0x41DB56: ??? (in /usr/bin/gz-8.1.1)\n==32150== \n==32150== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)\n~~~", "markup": "markdown", "html": "<div class=\"codehilite\"><pre><span></span>$ valgrind --tool<span class=\"o\">=</span>memcheck --verbose gz sdf -p singleLinkModel_V2.urdf\n...\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span> ERROR SUMMARY: <span class=\"m\">2</span> errors from <span class=\"m\">2</span> contexts <span class=\"o\">(</span>suppressed: <span class=\"m\">0</span> from <span class=\"m\">0</span><span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span> \n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span> <span class=\"m\">1</span> errors in context <span class=\"m\">1</span> of <span class=\"m\">2</span>:\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span> Invalid <span class=\"nb\">read</span> of size <span class=\"nv\">8</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    at 0xB0039C6: TiXmlNode::FirstChild<span class=\"o\">(</span>char const*<span class=\"o\">)</span> const <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB003BCD: TiXmlNode::FirstChildElement<span class=\"o\">(</span>char const*<span class=\"o\">)</span> const <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94F0DA4: FirstChildElement <span class=\"o\">(</span>tinyxml.h:676<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94F0DA4: FirstChildElement <span class=\"o\">(</span>tinyxml.h:681<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94F0DA4: AddKeyValue<span class=\"o\">(</span>TiXmlElement*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span>, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:1231<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FB675: InsertSDFExtensionCollision<span class=\"o\">(</span>TiXmlElement*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:1880<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FC379: CreateCollision<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, boost::shared_ptr&lt;urdf::Collision&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3357<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FC6CC: CreateCollisions<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;<span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3013<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FD2EF: CreateLink<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, ignition::math::Pose3&lt;double&gt;<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:2883<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FDC1E: CreateSDF<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, ignition::math::Pose3&lt;double&gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:2817<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x9505114: sdf::URDF2SDF::InitModelString<span class=\"o\">(</span>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span>, bool<span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3470<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x9505607: sdf::URDF2SDF::InitModelDoc<span class=\"o\">(</span>TiXmlDocument*<span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3500<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x9505756: sdf::URDF2SDF::InitModelFile<span class=\"o\">(</span>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3509<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94E1BBB: sdf::readFile<span class=\"o\">(</span>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span>, std::shared_ptr&lt;sdf::SDF&gt;<span class=\"o\">)</span> <span class=\"o\">(</span>parser.cc:302<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>  Address 0x28 is not stack<span class=\"s1\">&#39;d, malloc&#39;</span>d or <span class=\"o\">(</span>recently<span class=\"o\">)</span> free<span class=\"s1\">&#39;d</span>\n<span class=\"s1\">==32150== </span>\n<span class=\"s1\">==32150== </span>\n<span class=\"s1\">==32150== 1 errors in context 2 of 2:</span>\n<span class=\"s1\">==32150== Invalid read of size 8</span>\n<span class=\"s1\">==32150==    at 0x94FB65B: InsertSDFExtensionCollision(TiXmlElement*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (parser_urdf.cc:1879)</span>\n<span class=\"s1\">==32150==    by 0x94FC379: CreateCollision(TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, boost::shared_ptr&lt;urdf::Collision&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (parser_urdf.cc:3357)</span>\n<span class=\"s1\">==32150==    by 0x94FC6CC: CreateCollisions(TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;) (parser_urdf.cc:3013)</span>\n<span class=\"s1\">==32150==    by 0x94FD2EF: CreateLink(TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, ignition::math::Pose3&lt;double&gt;&amp;) (parser_urdf.cc:2883)</span>\n<span class=\"s1\">==32150==    by 0x94FDC1E: CreateSDF(TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, ignition::math::Pose3&lt;double&gt; const&amp;) (parser_urdf.cc:2817)</span>\n<span class=\"s1\">==32150==    by 0x9505114: sdf::URDF2SDF::InitModelString(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool) (parser_urdf.cc:3470)</span>\n<span class=\"s1\">==32150==    by 0x9505607: sdf::URDF2SDF::InitModelDoc(TiXmlDocument*) (parser_urdf.cc:3500)</span>\n<span class=\"s1\">==32150==    by 0x9505756: sdf::URDF2SDF::InitModelFile(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (parser_urdf.cc:3509)</span>\n<span class=\"s1\">==32150==    by 0x94E1BBB: sdf::readFile(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::shared_ptr&lt;sdf::SDF&gt;) (parser.cc:302)</span>\n<span class=\"s1\">==32150==    by 0x41F8B4: ??? (in /usr/bin/gz-8.1.1)</span>\n<span class=\"s1\">==32150==    by 0x41DB56: ??? (in /usr/bin/gz-8.1.1)</span>\n<span class=\"s1\">==32150==    by 0x41AB57: ??? (in /usr/bin/gz-8.1.1)</span>\n<span class=\"s1\">==32150==  Address 0x3f931060 is 0 bytes inside a block of size 216 free&#39;</span><span class=\"nv\">d</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    at 0x4C2F24B: operator delete<span class=\"o\">(</span>void*<span class=\"o\">)</span> <span class=\"o\">(</span>in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB003901: TiXmlNode::Clear<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB005BD0: TiXmlElement::ClearThis<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB005C2B: TiXmlElement::~TiXmlElement<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB005C78: TiXmlElement::~TiXmlElement<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB003901: TiXmlNode::Clear<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB005BD0: TiXmlElement::ClearThis<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB005C2B: TiXmlElement::~TiXmlElement<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB005C78: TiXmlElement::~TiXmlElement<span class=\"o\">()</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0xB003968: TiXmlNode::RemoveChild<span class=\"o\">(</span>TiXmlNode*<span class=\"o\">)</span> <span class=\"o\">(</span>in /usr/lib/x86_64-linux-gnu/libtinyxml.so.2.6.2<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FAC58: InsertSDFExtensionCollision<span class=\"o\">(</span>TiXmlElement*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:1728<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FC379: CreateCollision<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, boost::shared_ptr&lt;urdf::Collision&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3357<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>  Block was alloc<span class=\"err\">&#39;</span>d <span class=\"nv\">at</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    at 0x4C2E0EF: operator new<span class=\"o\">(</span>unsigned long<span class=\"o\">)</span> <span class=\"o\">(</span>in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FBC6E: InsertSDFExtensionCollision<span class=\"o\">(</span>TiXmlElement*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:1861<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FC379: CreateCollision<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, boost::shared_ptr&lt;urdf::Collision&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3357<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FC6CC: CreateCollisions<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;<span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3013<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FD2EF: CreateLink<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, ignition::math::Pose3&lt;double&gt;<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:2883<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94FDC1E: CreateSDF<span class=\"o\">(</span>TiXmlElement*, boost::shared_ptr&lt;urdf::Link const&gt;, ignition::math::Pose3&lt;double&gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:2817<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x9505114: sdf::URDF2SDF::InitModelString<span class=\"o\">(</span>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span>, bool<span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3470<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x9505607: sdf::URDF2SDF::InitModelDoc<span class=\"o\">(</span>TiXmlDocument*<span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3500<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x9505756: sdf::URDF2SDF::InitModelFile<span class=\"o\">(</span>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span><span class=\"o\">)</span> <span class=\"o\">(</span>parser_urdf.cc:3509<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x94E1BBB: sdf::readFile<span class=\"o\">(</span>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const<span class=\"p\">&amp;</span>, std::shared_ptr&lt;sdf::SDF&gt;<span class=\"o\">)</span> <span class=\"o\">(</span>parser.cc:302<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x41F8B4: ??? <span class=\"o\">(</span>in /usr/bin/gz-8.1.1<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span>    by 0x41DB56: ??? <span class=\"o\">(</span>in /usr/bin/gz-8.1.1<span class=\"o\">)</span>\n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span> \n<span class=\"o\">==</span><span class=\"nv\">32150</span><span class=\"o\">==</span> ERROR SUMMARY: <span class=\"m\">2</span> errors from <span class=\"m\">2</span> contexts <span class=\"o\">(</span>suppressed: <span class=\"m\">0</span> from <span class=\"m\">0</span><span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-25T19:19:33.073884+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38517112}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164/comments/38517123.json"}, "html": {"href": "#!/osrf/sdformat/issues/164#comment-38517123"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/164.json"}}, "type": "issue", "id": 164, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "gz sdf segmentation fault 11 due to conflict between <sensor> and <collision> tags"}, "content": {"raw": "I don't have time to fix this right now, but these may be some good clues about the source of the problem.", "markup": "markdown", "html": "<p>I don't have time to fix this right now, but these may be some good clues about the source of the problem.</p>", "type": "rendered"}, "created_on": "2017-07-25T19:20:00.836358+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38517123}], "page": 1, "size": 5}