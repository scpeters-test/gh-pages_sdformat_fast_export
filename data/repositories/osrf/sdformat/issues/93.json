{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/93/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/93.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/93/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/93/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/93/change-the-sdf-spec-to-make-less-gazebo"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/93/vote"}}, "reporter": {"display_name": "sylvainjoyeux", "uuid": "{11579fb5-6368-4ec9-a820-10579e368fe7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D"}, "html": {"href": "https://bitbucket.org/%7B11579fb5-6368-4ec9-a820-10579e368fe7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ab99fe65b45016b2db44dddbfdf55664d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-4.png"}}, "nickname": "sylvainjoyeux", "type": "user", "account_id": "557058:b2449296-2ccf-409f-99e3-05df6003cede"}, "title": "Change the SDF spec to make <plugin> less gazebo-specific", "component": null, "votes": 2, "watches": 4, "content": {"raw": "I am sorry if this is not the right place. I [asked on answers.gazebo.org about where to create a proposal to change the SDF spec](http://answers.gazebosim.org/question/8586/where-can-i-suggest-changes-to-the-sdf-spec) and someone suggested here. Since it seemed to be as good a suggestion as any, here I am.\r\n\r\nThe current <plugin> tag requires that a library name is given, and that library name must be a gazebo plugin. Plugin tags without a valid gazebo plugin generate an error.\r\n\r\nI'm in a situation where we use SDF as an overall scene/world/robot description format in a robot framework (Rock, http://rock-robotics.org). We naturally started creating gazebo plugins for things that were missing (e.g. underwater thursters) but also wanted to add \"plugins\" for dealing externally with some things (for reasons that are beyond this proposal, we for instance want to simulate cameras outside of gazebo). We even had cases (the thrusters) where some parts of the infrastructure need to load plugins of their own, and need to know about the parameters given to the gazebo plugin.\r\n\r\nIn any case, to me, this is a matter of making SDF less gazebo-specific and more a general-purpose format, something it is already pretty good at. What I want to propose is to remove the 'file' attribute and instead define reserved tags within the <plugin> element:\r\n\r\n```\r\n<plugin name='thrusters'>\r\n   <gazebo>libgazebo_thrusters.so</gazebo>\r\n   <!-- name of the Rock task that can export this plugin to the outside world -->\r\n   <rock>gazebo_thrusters::Task</rock>\r\n</plugin>\r\n\r\n```\r\n\r\nA software environment would simply ignore a plugin tag which does not have the required inside tag (i.e. gazebo would ignore plugin elements that do not have a <gazebo> element and so on).", "markup": "markdown", "html": "<p>I am sorry if this is not the right place. I <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/8586/where-can-i-suggest-changes-to-the-sdf-spec\" rel=\"nofollow\">asked on answers.gazebo.org about where to create a proposal to change the SDF spec</a> and someone suggested here. Since it seemed to be as good a suggestion as any, here I am.</p>\n<p>The current &lt;plugin&gt; tag requires that a library name is given, and that library name must be a gazebo plugin. Plugin tags without a valid gazebo plugin generate an error.</p>\n<p>I'm in a situation where we use SDF as an overall scene/world/robot description format in a robot framework (Rock, <a href=\"http://rock-robotics.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://rock-robotics.org</a>). We naturally started creating gazebo plugins for things that were missing (e.g. underwater thursters) but also wanted to add \"plugins\" for dealing externally with some things (for reasons that are beyond this proposal, we for instance want to simulate cameras outside of gazebo). We even had cases (the thrusters) where some parts of the infrastructure need to load plugins of their own, and need to know about the parameters given to the gazebo plugin.</p>\n<p>In any case, to me, this is a matter of making SDF less gazebo-specific and more a general-purpose format, something it is already pretty good at. What I want to propose is to remove the 'file' attribute and instead define reserved tags within the &lt;plugin&gt; element:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&#39;thrusters&#39;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;gazebo&gt;</span>libgazebo_thrusters.so<span class=\"nt\">&lt;/gazebo&gt;</span>\n   <span class=\"c\">&lt;!-- name of the Rock task that can export this plugin to the outside world --&gt;</span>\n   <span class=\"nt\">&lt;rock&gt;</span>gazebo_thrusters::Task<span class=\"nt\">&lt;/rock&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>A software environment would simply ignore a plugin tag which does not have the required inside tag (i.e. gazebo would ignore plugin elements that do not have a &lt;gazebo&gt; element and so on).</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-04-27T12:46:10.528440+00:00", "milestone": null, "updated_on": "2020-02-25T18:34:21.863393+00:00", "type": "issue", "id": 93}