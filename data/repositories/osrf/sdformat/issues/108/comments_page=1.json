{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108/comments/23791289.json"}, "html": {"href": "#!/osrf/sdformat/issues/108#comment-23791289"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108.json"}}, "type": "issue", "id": 108, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "UNIT_Param_TEST failures on ubuntu wily"}, "content": {"raw": "The was tested with `gcc (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010`", "markup": "markdown", "html": "<p>The was tested with <code>gcc (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010</code></p>", "type": "rendered"}, "created_on": "2015-12-03T21:44:23.450171+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 23791289}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108/comments/23938830.json"}, "html": {"href": "#!/osrf/sdformat/issues/108#comment-23938830"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108.json"}}, "type": "issue", "id": 108, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "UNIT_Param_TEST failures on ubuntu wily"}, "content": {"raw": "I'm seeing the same thing on Fedora trying to upgrade to sdformat 3.6.0. gtest output:\n```\n$ ./src/UNIT_Param_TEST \n[==========] Running 7 tests from 2 test cases.\n[----------] Global test environment set-up.\n[----------] 6 tests from Param\n[ RUN      ] Param.Bool\n[       OK ] Param.Bool (0 ms)\n[ RUN      ] Param.HexInt\nError [Param.cc:445] Out of range. Unable to set value [0xffffffffffffffffffffffffffffffffff ] for key[key].\n[       OK ] Param.HexInt (0 ms)\n[ RUN      ] Param.HexUInt\nError [Param.cc:445] Out of range. Unable to set value [0xffffffffffffffffffffffffffffffffff ] for key[key].\n[       OK ] Param.HexUInt (1 ms)\n[ RUN      ] Param.HexFloat\nError [Param.cc:462] Unable to set value [0x01] for key[key]\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:154: Failure\nValue of: floatParam.SetFromString(\"0x01\")\n  Actual: false\nExpected: true\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:156: Failure\nValue of: 1.0f\n  Actual: 1\nExpected: value\nWhich is: 0\nError [Param.cc:445] Out of range. Unable to set value [1.0e100 ] for key[key].\n[  FAILED  ] Param.HexFloat (0 ms)\n[ RUN      ] Param.HexDouble\nError [Param.cc:462] Unable to set value [0x01] for key[key]\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:188: Failure\nValue of: doubleParam.SetFromString(\"0x01\")\n  Actual: false\nExpected: true\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:190: Failure\nValue of: 1.0\n  Actual: 1\nExpected: value\nWhich is: 0\nError [Param.cc:445] Out of range. Unable to set value [1.0e1000 ] for key[key].\n[  FAILED  ] Param.HexDouble (1 ms)\n[ RUN      ] Param.uint64t\n[       OK ] Param.uint64t (0 ms)\n[----------] 6 tests from Param (2 ms total)\n\n[----------] 1 test from SetFromString\n[ RUN      ] SetFromString.Decimals\n[       OK ] SetFromString.Decimals (0 ms)\n[----------] 1 test from SetFromString (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 7 tests from 2 test cases ran. (3 ms total)\n[  PASSED  ] 5 tests.\n[  FAILED  ] 2 tests, listed below:\n[  FAILED  ] Param.HexFloat\n[  FAILED  ] Param.HexDouble\n```\n\nIn the HexInt/HexUint case, std::stoi is throwing an out_of_range exception for the 0xffffffffffffffffffffffffffffffffff input, presumably because the input overflows the int datatype.\n\nThe HexFloat/HexDouble 0x01 is throwing a bad_lexical_cast exception - it appears boost doesn't like casting hex numbers to floats?\n\nThe HexFloat/HexDouble 1eAlot cases are throwing out_of_range exceptions, again presumably because the datatypes being used can't store numbers that big.\n\nI'm not sure why this started happening now, maybe it has to do with gcc or libstdc++ updates?  For the record, I'm using gcc-5.1.1-4.fc23.x86_64\n\n", "markup": "markdown", "html": "<p>I'm seeing the same thing on Fedora trying to upgrade to sdformat 3.6.0. gtest output:</p>\n<div class=\"codehilite\"><pre><span></span>$ ./src/UNIT_Param_TEST \n<span class=\"o\">[==========]</span> Running <span class=\"m\">7</span> tests from <span class=\"m\">2</span> <span class=\"nb\">test</span> cases.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">6</span> tests from Param\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> Param.Bool\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> Param.Bool <span class=\"o\">(</span><span class=\"m\">0</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> Param.HexInt\nError <span class=\"o\">[</span>Param.cc:445<span class=\"o\">]</span> Out of range. Unable to <span class=\"nb\">set</span> value <span class=\"o\">[</span>0xffffffffffffffffffffffffffffffffff <span class=\"o\">]</span> <span class=\"k\">for</span> key<span class=\"o\">[</span>key<span class=\"o\">]</span>.\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> Param.HexInt <span class=\"o\">(</span><span class=\"m\">0</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> Param.HexUInt\nError <span class=\"o\">[</span>Param.cc:445<span class=\"o\">]</span> Out of range. Unable to <span class=\"nb\">set</span> value <span class=\"o\">[</span>0xffffffffffffffffffffffffffffffffff <span class=\"o\">]</span> <span class=\"k\">for</span> key<span class=\"o\">[</span>key<span class=\"o\">]</span>.\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> Param.HexUInt <span class=\"o\">(</span><span class=\"m\">1</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> Param.HexFloat\nError <span class=\"o\">[</span>Param.cc:462<span class=\"o\">]</span> Unable to <span class=\"nb\">set</span> value <span class=\"o\">[</span>0x01<span class=\"o\">]</span> <span class=\"k\">for</span> key<span class=\"o\">[</span>key<span class=\"o\">]</span>\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:154: Failure\nValue of: floatParam.SetFromString<span class=\"o\">(</span><span class=\"s2\">&quot;0x01&quot;</span><span class=\"o\">)</span>\n  Actual: <span class=\"nb\">false</span>\nExpected: <span class=\"nb\">true</span>\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:156: Failure\nValue of: <span class=\"m\">1</span>.0f\n  Actual: <span class=\"m\">1</span>\nExpected: value\nWhich is: <span class=\"m\">0</span>\nError <span class=\"o\">[</span>Param.cc:445<span class=\"o\">]</span> Out of range. Unable to <span class=\"nb\">set</span> value <span class=\"o\">[</span><span class=\"m\">1</span>.0e100 <span class=\"o\">]</span> <span class=\"k\">for</span> key<span class=\"o\">[</span>key<span class=\"o\">]</span>.\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> Param.HexFloat <span class=\"o\">(</span><span class=\"m\">0</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> Param.HexDouble\nError <span class=\"o\">[</span>Param.cc:462<span class=\"o\">]</span> Unable to <span class=\"nb\">set</span> value <span class=\"o\">[</span>0x01<span class=\"o\">]</span> <span class=\"k\">for</span> key<span class=\"o\">[</span>key<span class=\"o\">]</span>\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:188: Failure\nValue of: doubleParam.SetFromString<span class=\"o\">(</span><span class=\"s2\">&quot;0x01&quot;</span><span class=\"o\">)</span>\n  Actual: <span class=\"nb\">false</span>\nExpected: <span class=\"nb\">true</span>\n/home/rich/Source/sdformat-3.6.0/src/Param_TEST.cc:190: Failure\nValue of: <span class=\"m\">1</span>.0\n  Actual: <span class=\"m\">1</span>\nExpected: value\nWhich is: <span class=\"m\">0</span>\nError <span class=\"o\">[</span>Param.cc:445<span class=\"o\">]</span> Out of range. Unable to <span class=\"nb\">set</span> value <span class=\"o\">[</span><span class=\"m\">1</span>.0e1000 <span class=\"o\">]</span> <span class=\"k\">for</span> key<span class=\"o\">[</span>key<span class=\"o\">]</span>.\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> Param.HexDouble <span class=\"o\">(</span><span class=\"m\">1</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> Param.uint64t\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> Param.uint64t <span class=\"o\">(</span><span class=\"m\">0</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">6</span> tests from Param <span class=\"o\">(</span><span class=\"m\">2</span> ms total<span class=\"o\">)</span>\n\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">1</span> <span class=\"nb\">test</span> from SetFromString\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> SetFromString.Decimals\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> SetFromString.Decimals <span class=\"o\">(</span><span class=\"m\">0</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">1</span> <span class=\"nb\">test</span> from SetFromString <span class=\"o\">(</span><span class=\"m\">0</span> ms total<span class=\"o\">)</span>\n\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment tear-down\n<span class=\"o\">[==========]</span> <span class=\"m\">7</span> tests from <span class=\"m\">2</span> <span class=\"nb\">test</span> cases ran. <span class=\"o\">(</span><span class=\"m\">3</span> ms total<span class=\"o\">)</span>\n<span class=\"o\">[</span>  PASSED  <span class=\"o\">]</span> <span class=\"m\">5</span> tests.\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> <span class=\"m\">2</span> tests, listed below:\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> Param.HexFloat\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> Param.HexDouble\n</pre></div>\n\n\n<p>In the HexInt/HexUint case, std::stoi is throwing an out_of_range exception for the 0xffffffffffffffffffffffffffffffffff input, presumably because the input overflows the int datatype.</p>\n<p>The HexFloat/HexDouble 0x01 is throwing a bad_lexical_cast exception - it appears boost doesn't like casting hex numbers to floats?</p>\n<p>The HexFloat/HexDouble 1eAlot cases are throwing out_of_range exceptions, again presumably because the datatypes being used can't store numbers that big.</p>\n<p>I'm not sure why this started happening now, maybe it has to do with gcc or libstdc++ updates?  For the record, I'm using gcc-5.1.1-4.fc23.x86_64</p>", "type": "rendered"}, "created_on": "2015-12-10T04:45:32.450743+00:00", "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "updated_on": null, "type": "issue_comment", "id": 23938830}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108/comments/24474502.json"}, "html": {"href": "#!/osrf/sdformat/issues/108#comment-24474502"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108.json"}}, "type": "issue", "id": 108, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "UNIT_Param_TEST failures on ubuntu wily"}, "content": {"raw": "The HexFloat/HexDouble cases can be solved by using c++11 stof and stod in the isHex case for float and double params respectively.  According to [cppreference](http://en.cppreference.com/w/cpp/string/basic_string/stof), the stof family of functions will detect strings starting with 0x and interpret them as a hex significand with optional exponent.  Adding code to this effect appears to work with the 0x01 inputs in the unit test, other inputs could also be checked.\n\nI take back my comments on the other tests.  They're passing as expected - I was looking at the error output and not the gtest result output (all of which are OK).", "markup": "markdown", "html": "<p>The HexFloat/HexDouble cases can be solved by using c++11 stof and stod in the isHex case for float and double params respectively.  According to <a data-is-external-link=\"true\" href=\"http://en.cppreference.com/w/cpp/string/basic_string/stof\" rel=\"nofollow\">cppreference</a>, the stof family of functions will detect strings starting with 0x and interpret them as a hex significand with optional exponent.  Adding code to this effect appears to work with the 0x01 inputs in the unit test, other inputs could also be checked.</p>\n<p>I take back my comments on the other tests.  They're passing as expected - I was looking at the error output and not the gtest result output (all of which are OK).</p>", "type": "rendered"}, "created_on": "2016-01-05T01:21:15.551600+00:00", "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "updated_on": null, "type": "issue_comment", "id": 24474502}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108/comments/24474870.json"}, "html": {"href": "#!/osrf/sdformat/issues/108#comment-24474870"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108.json"}}, "type": "issue", "id": 108, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "UNIT_Param_TEST failures on ubuntu wily"}, "content": {"raw": "Opened pull request #250 with fixes I mentioned in the previous comment.", "markup": "markdown", "html": "<p>Opened <a href=\"#!/osrf/sdformat/pull-requests/250/use-stof-functions-to-parse-hex-strings-as\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #250</a> with fixes I mentioned in the previous comment.</p>", "type": "rendered"}, "created_on": "2016-01-05T02:02:34.567421+00:00", "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "updated_on": null, "type": "issue_comment", "id": 24474870}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108/comments/34469382.json"}, "html": {"href": "#!/osrf/sdformat/issues/108#comment-34469382"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108.json"}}, "type": "issue", "id": 108, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "UNIT_Param_TEST failures on ubuntu wily"}, "content": {"raw": "It looks like this was resolved a long time ago, so closing out the issue.", "markup": "markdown", "html": "<p>It looks like this was resolved a long time ago, so closing out the issue.</p>", "type": "rendered"}, "created_on": "2017-02-16T22:05:02.992393+00:00", "user": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "updated_on": null, "type": "issue_comment", "id": 34469382}], "page": 1, "size": 5}