{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108/comments/24474502.json"}, "html": {"href": "#!/osrf/sdformat/issues/108#comment-24474502"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/108.json"}}, "type": "issue", "id": 108, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "UNIT_Param_TEST failures on ubuntu wily"}, "content": {"raw": "The HexFloat/HexDouble cases can be solved by using c++11 stof and stod in the isHex case for float and double params respectively.  According to [cppreference](http://en.cppreference.com/w/cpp/string/basic_string/stof), the stof family of functions will detect strings starting with 0x and interpret them as a hex significand with optional exponent.  Adding code to this effect appears to work with the 0x01 inputs in the unit test, other inputs could also be checked.\n\nI take back my comments on the other tests.  They're passing as expected - I was looking at the error output and not the gtest result output (all of which are OK).", "markup": "markdown", "html": "<p>The HexFloat/HexDouble cases can be solved by using c++11 stof and stod in the isHex case for float and double params respectively.  According to <a data-is-external-link=\"true\" href=\"http://en.cppreference.com/w/cpp/string/basic_string/stof\" rel=\"nofollow\">cppreference</a>, the stof family of functions will detect strings starting with 0x and interpret them as a hex significand with optional exponent.  Adding code to this effect appears to work with the 0x01 inputs in the unit test, other inputs could also be checked.</p>\n<p>I take back my comments on the other tests.  They're passing as expected - I was looking at the error output and not the gtest result output (all of which are OK).</p>", "type": "rendered"}, "created_on": "2016-01-05T01:21:15.551600+00:00", "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "updated_on": null, "type": "issue_comment", "id": 24474502}