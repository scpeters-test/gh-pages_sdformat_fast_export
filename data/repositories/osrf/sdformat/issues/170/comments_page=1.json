{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40977649.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40977649"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "1. Yes, `use_parent_model_frame=true` means the immediate parent `<model>`'s frame (not a grandparent `<model>` for example)\n1. `use_parent_model_frame=false` means the joint's child link frame\n\nRegarding the \"joint frame on the parent body\", two details might make this clearer:\n\n1. [The joint pose only defines the position of the constraint the moment the joint is created](http://answers.gazebosim.org/question/15931/why-joints-have-only-one-pose/)\n1. [SDF defines a graph, not a tree](#!/osrf/sdformat/issues/124/make-link-reference-frame-relative-to#comment-28431974)\n\nI think we lost a lot of documentation details since we [started including](#!/osrf/sdformat/pull-requests/237/support-frame-specification-in-sdf/diff) `pose.sdf` into files.", "markup": "markdown", "html": "<ol>\n<li>Yes, <code>use_parent_model_frame=true</code> means the immediate parent <code>&lt;model&gt;</code>'s frame (not a grandparent <code>&lt;model&gt;</code> for example)</li>\n<li><code>use_parent_model_frame=false</code> means the joint's child link frame</li>\n</ol>\n<p>Regarding the \"joint frame on the parent body\", two details might make this clearer:</p>\n<ol>\n<li><a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/15931/why-joints-have-only-one-pose/\" rel=\"nofollow\">The joint pose only defines the position of the constraint the moment the joint is created</a></li>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/issues/124/make-link-reference-frame-relative-to#comment-28431974\" rel=\"nofollow\">SDF defines a graph, not a tree</a></li>\n</ol>\n<p>I think we lost a lot of documentation details since we <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/pull-requests/237/support-frame-specification-in-sdf/diff\" rel=\"nofollow\">started including</a> <code>pose.sdf</code> into files.</p>", "type": "rendered"}, "created_on": "2017-11-02T21:05:36.184893+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 40977649}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40978397.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40978397"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Let me ellaborate on the kind of documentation we'd like so see with a schematic I put together. Generally, the model we are developing in [Drake](https://github.com/RobotLocomotion/drake) is predicated on the schematic I show below (yes, I need to upload that into master sometime soon!). In that schematic I show two bodies; a parent body with frame P (not necessarily at its center of mass) and a child body with a frame C (not necessarily either at its center of mass). In SDF terms, the \"inertial\" frames are Pcm and Ccm respectively, not necessarily (as said before) located at the body's frame's origins nor aligned with them.\nNow, if we place a joint between those two frames, generally we define a frame Jp rigidly attached on body P (that is, pose X_PJp of frame Jp in P is fixed) and a frame Jc rigidly attached on body C (that is, pose X_CJc is of frame Jc in C fixed). That joint has a state, here represented with `q`, and the pose of frame Jc in Jp, `X_JpJc(q)` is a function of that state. Since Jp is fixed in P and Jc is fixed in C, this in turns defines the pose of C in P.\n\nSpecial cases:\n1. Frame C \"is\" coincident with frame Jc (this is the typical case in urdf)\n2. Frame P (or C) is coincident with Pcm (or Ccm).\n\nHopefully that'll help aid the discussion. Now, we'd like to know exactly how the sdf format defines its frames and its defaults values so that we can, unambiguously, map to our representation. We hope this can be done by expanding the documentation now provided and that this documentation can also help others. Thoughts? \n\n\n![joint_frames.png](data/bitbucket.org/repo/ak8x4z/images/193284283-joint_frames.png)", "markup": "markdown", "html": "<p>Let me ellaborate on the kind of documentation we'd like so see with a schematic I put together. Generally, the model we are developing in <a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake\" rel=\"nofollow\">Drake</a> is predicated on the schematic I show below (yes, I need to upload that into master sometime soon!). In that schematic I show two bodies; a parent body with frame P (not necessarily at its center of mass) and a child body with a frame C (not necessarily either at its center of mass). In SDF terms, the \"inertial\" frames are Pcm and Ccm respectively, not necessarily (as said before) located at the body's frame's origins nor aligned with them.\nNow, if we place a joint between those two frames, generally we define a frame Jp rigidly attached on body P (that is, pose X_PJp of frame Jp in P is fixed) and a frame Jc rigidly attached on body C (that is, pose X_CJc is of frame Jc in C fixed). That joint has a state, here represented with <code>q</code>, and the pose of frame Jc in Jp, <code>X_JpJc(q)</code> is a function of that state. Since Jp is fixed in P and Jc is fixed in C, this in turns defines the pose of C in P.</p>\n<p>Special cases:\n1. Frame C \"is\" coincident with frame Jc (this is the typical case in urdf)\n2. Frame P (or C) is coincident with Pcm (or Ccm).</p>\n<p>Hopefully that'll help aid the discussion. Now, we'd like to know exactly how the sdf format defines its frames and its defaults values so that we can, unambiguously, map to our representation. We hope this can be done by expanding the documentation now provided and that this documentation can also help others. Thoughts? </p>\n<p><img alt=\"joint_frames.png\" src=\"data/bitbucket.org/repo/ak8x4z/images/193284283-joint_frames.png\" /></p>", "type": "rendered"}, "created_on": "2017-11-02T21:55:48.411739+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "updated_on": null, "type": "issue_comment", "id": 40978397}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40978558.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40978558"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Ah, I hadn't refreshed my browser yet buy when I made the second comment. Thank you for your reply @chapulina, does the schematic help understand what we are asking for?", "markup": "markdown", "html": "<p>Ah, I hadn't refreshed my browser yet buy when I made the second comment. Thank you for your reply @chapulina, does the schematic help understand what we are asking for?</p>", "type": "rendered"}, "created_on": "2017-11-02T22:10:12.672242+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "updated_on": null, "type": "issue_comment", "id": 40978558}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40979104.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40979104"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Yes, I can see where you're coming from.\n\nA world SDF description is meant to describe the simulation's initial state. Updates to the state are given by `<state>` tags. \n\nOne single pose is enough to define a joint's (constraint) initial location. By convention, that was chosen to be the pose with respect to the child link.\n\nSo it seems to me that in your use case, you should interpret the joint pose as `Jc` and mathematically deduce `Jp` to store it in your internal representation. As far as SDF is concerned, the joint can't be broken, that is, the joint pose can't change with time with respect to any of the links.\n\nHere's an example playing with Gazebo's model editor. The box is the parent link and the sphere is the child link. The large axes represent the joint frame. The joint is revolute, and the revolute axis is represented by a yellow circle. You can see how the joint pose is described with respect to the child, and since you know both link poses, you could deduce the joint pose in the parent link frame.\n\n![jointcreation.gif](data/bitbucket.org/repo/ak8x4z/images/2430386394-jointcreation.gif)", "markup": "markdown", "html": "<p>Yes, I can see where you're coming from.</p>\n<p>A world SDF description is meant to describe the simulation's initial state. Updates to the state are given by <code>&lt;state&gt;</code> tags. </p>\n<p>One single pose is enough to define a joint's (constraint) initial location. By convention, that was chosen to be the pose with respect to the child link.</p>\n<p>So it seems to me that in your use case, you should interpret the joint pose as <code>Jc</code> and mathematically deduce <code>Jp</code> to store it in your internal representation. As far as SDF is concerned, the joint can't be broken, that is, the joint pose can't change with time with respect to any of the links.</p>\n<p>Here's an example playing with Gazebo's model editor. The box is the parent link and the sphere is the child link. The large axes represent the joint frame. The joint is revolute, and the revolute axis is represented by a yellow circle. You can see how the joint pose is described with respect to the child, and since you know both link poses, you could deduce the joint pose in the parent link frame.</p>\n<p><img alt=\"jointcreation.gif\" src=\"data/bitbucket.org/repo/ak8x4z/images/2430386394-jointcreation.gif\" /></p>", "type": "rendered"}, "created_on": "2017-11-02T22:55:28.965126+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 40979104}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40979312.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40979312"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "When John Hsu and I were working on incorporating Simbody into Gazebo, John extended sdf to optionally allow specification of both the parent joint frame (Jp in Alejandro's diagram) and the child joint frame (Jc). I'm not sure that every made it into the official sdf schema though. Being able to specify both is very useful when building a non-tree system because placing every link so that joint constraints are satisfied is very difficult in that case. In any case it would be great if the documentation could show the general case for an unassembled joint (as in Alejandro's picture), and then explains how sdf's input maps into those frames.", "markup": "markdown", "html": "<p>When John Hsu and I were working on incorporating Simbody into Gazebo, John extended sdf to optionally allow specification of both the parent joint frame (Jp in Alejandro's diagram) and the child joint frame (Jc). I'm not sure that every made it into the official sdf schema though. Being able to specify both is very useful when building a non-tree system because placing every link so that joint constraints are satisfied is very difficult in that case. In any case it would be great if the documentation could show the general case for an unassembled joint (as in Alejandro's picture), and then explains how sdf's input maps into those frames.</p>", "type": "rendered"}, "created_on": "2017-11-02T23:27:57.046106+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": null, "type": "issue_comment", "id": 40979312}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40979470.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40979470"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "As far as I can tell, it has never been possible to describe an unassembled joint on SDF, so my guess is that it never made it into the schema. \n\nA more recent development added an optional frame of reference to every pose (pull request #237), so that any element could be defined with respect to any other element. This would hopefully make it easier to place links and joints. Note that [Gazebo doesn't use](https://bitbucket.org/osrf/gazebo/issues/1982/parse-sdf-frame-elements-and-attributes) that frame information yet, so there isn't a \"reference implementation\" of exactly how they should be used, and the documentation is probably vague.", "markup": "markdown", "html": "<p>As far as I can tell, it has never been possible to describe an unassembled joint on SDF, so my guess is that it never made it into the schema. </p>\n<p>A more recent development added an optional frame of reference to every pose (<a href=\"#!/osrf/sdformat/pull-requests/237/support-frame-specification-in-sdf\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #237</a>), so that any element could be defined with respect to any other element. This would hopefully make it easier to place links and joints. Note that <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/1982/parse-sdf-frame-elements-and-attributes\" rel=\"nofollow\">Gazebo doesn't use</a> that frame information yet, so there isn't a \"reference implementation\" of exactly how they should be used, and the documentation is probably vague.</p>", "type": "rendered"}, "created_on": "2017-11-02T23:46:02.697152+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 40979470}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40990958.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40990958"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Thank you so much for your help @chapulina. It'd seem the sdf format gives us a number of different options to specify frames and to specify in what frame a particular quantity (say a joint axis) is specified in. So far, we found ourselves resolving what combinations are allowed not by going to the documentation, but by essentially loading a particular SDF in Gazebo. If it loads, good and if not, well, we assume that is not allowed. You can see one of these iterations in [Drake here](https://github.com/RobotLocomotion/drake/pull/4615).\n\n**This issue is not about asking for a new feature** not even about modifying an existing one. This issue is essentially about formally dumping in [the official SDF documentation](http://sdformat.org/spec) all this valuable information that experienced developers like you, how have worked with this format for a long time, know about but that of course, most users don't. Probably a schematic similar to what I show above (though of course with whichever SDF's notation prefers) would be best to define frames.\n\n**Remark I**:  In the one [issue #124](#!/osrf/sdformat/issues/124/make-link-reference-frame-relative-to#comment-28431974) you directed me above, the reporter also thought, erroneously, that `use_parent_model_frame` was about specifying the joint in the parent line frame . I think that could also be clarified in the documentation. \n\n**Remark II**: `Jp`, `Jc` are do not denote **poses** but they denote **frames**, the actual physical objects. These can exist in our physical world even before we decide to make any measurements of their position in other frame. We denote **poses** (others call them transforms and see them as a little 4x4 homogeneous transform matrix) as the position and orientation of given frame in another frame (so you need two frames to specify a pose). We denote those with a capital `X` with superscripts denoting the frames. For instance, a position vector expressed in a frame A can be transformed to be expressed in frame B using `p_B = \u1d2eX\u1d2c * p_A` (sorry for the bad mix of Latex and unicode).", "markup": "markdown", "html": "<p>Thank you so much for your help @chapulina. It'd seem the sdf format gives us a number of different options to specify frames and to specify in what frame a particular quantity (say a joint axis) is specified in. So far, we found ourselves resolving what combinations are allowed not by going to the documentation, but by essentially loading a particular SDF in Gazebo. If it loads, good and if not, well, we assume that is not allowed. You can see one of these iterations in <a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake/pull/4615\" rel=\"nofollow\">Drake here</a>.</p>\n<p><strong>This issue is not about asking for a new feature</strong> not even about modifying an existing one. This issue is essentially about formally dumping in <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec\" rel=\"nofollow\">the official SDF documentation</a> all this valuable information that experienced developers like you, how have worked with this format for a long time, know about but that of course, most users don't. Probably a schematic similar to what I show above (though of course with whichever SDF's notation prefers) would be best to define frames.</p>\n<p><strong>Remark I</strong>:  In the one <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/issues/124/make-link-reference-frame-relative-to#comment-28431974\" rel=\"nofollow\">issue #124</a> you directed me above, the reporter also thought, erroneously, that <code>use_parent_model_frame</code> was about specifying the joint in the parent line frame . I think that could also be clarified in the documentation. </p>\n<p><strong>Remark II</strong>: <code>Jp</code>, <code>Jc</code> are do not denote <strong>poses</strong> but they denote <strong>frames</strong>, the actual physical objects. These can exist in our physical world even before we decide to make any measurements of their position in other frame. We denote <strong>poses</strong> (others call them transforms and see them as a little 4x4 homogeneous transform matrix) as the position and orientation of given frame in another frame (so you need two frames to specify a pose). We denote those with a capital <code>X</code> with superscripts denoting the frames. For instance, a position vector expressed in a frame A can be transformed to be expressed in frame B using <code>p_B = \u1d2eX\u1d2c * p_A</code> (sorry for the bad mix of Latex and unicode).</p>", "type": "rendered"}, "created_on": "2017-11-03T13:51:19.730052+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "updated_on": "2017-11-03T13:55:14.168609+00:00", "type": "issue_comment", "id": 40990958}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40990972.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40990972"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2017-11-03T13:51:51.045183+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "updated_on": null, "type": "issue_comment", "id": 40990972}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/41264529.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-41264529"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Update: pull request #383 should fix the absence of some of the default values (original issue #101).", "markup": "markdown", "html": "<p>Update: <a href=\"#!/osrf/sdformat/pull-requests/383/fix-issue-101-no-type-or-default-values\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #383</a> should fix the absence of some of the default values (original issue <a href=\"#!/osrf/sdformat/issues/101/default-and-type-dont-show-on-spec-website\" rel=\"nofollow\" title=\"Default and type don&#39;t show on spec website\" class=\"ap-connect-link\"><s>#101</s></a>).</p>", "type": "rendered"}, "created_on": "2017-11-17T01:03:11.223846+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2017-11-17T01:04:04.283608+00:00", "type": "issue_comment", "id": 41264529}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/41283744.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-41283744"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Thanks! I added a comment in #171 which I believe also apply to this issue.", "markup": "markdown", "html": "<p>Thanks! I added a comment in <a href=\"#!/osrf/sdformat/issues/171/update-documentation-on-link-frames\" rel=\"nofollow\" title=\"Update documentation on link&#39; frames specifying defaults and conventions\" class=\"ap-connect-link\">#171</a> which I believe also apply to this issue.</p>", "type": "rendered"}, "created_on": "2017-11-17T17:04:15.898158+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "updated_on": null, "type": "issue_comment", "id": 41283744}], "page": 1, "size": 10}