{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40979104.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40979104"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Yes, I can see where you're coming from.\n\nA world SDF description is meant to describe the simulation's initial state. Updates to the state are given by `<state>` tags. \n\nOne single pose is enough to define a joint's (constraint) initial location. By convention, that was chosen to be the pose with respect to the child link.\n\nSo it seems to me that in your use case, you should interpret the joint pose as `Jc` and mathematically deduce `Jp` to store it in your internal representation. As far as SDF is concerned, the joint can't be broken, that is, the joint pose can't change with time with respect to any of the links.\n\nHere's an example playing with Gazebo's model editor. The box is the parent link and the sphere is the child link. The large axes represent the joint frame. The joint is revolute, and the revolute axis is represented by a yellow circle. You can see how the joint pose is described with respect to the child, and since you know both link poses, you could deduce the joint pose in the parent link frame.\n\n![jointcreation.gif](data/bitbucket.org/repo/ak8x4z/images/2430386394-jointcreation.gif)", "markup": "markdown", "html": "<p>Yes, I can see where you're coming from.</p>\n<p>A world SDF description is meant to describe the simulation's initial state. Updates to the state are given by <code>&lt;state&gt;</code> tags. </p>\n<p>One single pose is enough to define a joint's (constraint) initial location. By convention, that was chosen to be the pose with respect to the child link.</p>\n<p>So it seems to me that in your use case, you should interpret the joint pose as <code>Jc</code> and mathematically deduce <code>Jp</code> to store it in your internal representation. As far as SDF is concerned, the joint can't be broken, that is, the joint pose can't change with time with respect to any of the links.</p>\n<p>Here's an example playing with Gazebo's model editor. The box is the parent link and the sphere is the child link. The large axes represent the joint frame. The joint is revolute, and the revolute axis is represented by a yellow circle. You can see how the joint pose is described with respect to the child, and since you know both link poses, you could deduce the joint pose in the parent link frame.</p>\n<p><img alt=\"jointcreation.gif\" src=\"data/bitbucket.org/repo/ak8x4z/images/2430386394-jointcreation.gif\" /></p>", "type": "rendered"}, "created_on": "2017-11-02T22:55:28.965126+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 40979104}