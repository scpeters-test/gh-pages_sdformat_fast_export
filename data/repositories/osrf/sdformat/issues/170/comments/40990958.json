{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40990958.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40990958"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Thank you so much for your help @chapulina. It'd seem the sdf format gives us a number of different options to specify frames and to specify in what frame a particular quantity (say a joint axis) is specified in. So far, we found ourselves resolving what combinations are allowed not by going to the documentation, but by essentially loading a particular SDF in Gazebo. If it loads, good and if not, well, we assume that is not allowed. You can see one of these iterations in [Drake here](https://github.com/RobotLocomotion/drake/pull/4615).\n\n**This issue is not about asking for a new feature** not even about modifying an existing one. This issue is essentially about formally dumping in [the official SDF documentation](http://sdformat.org/spec) all this valuable information that experienced developers like you, how have worked with this format for a long time, know about but that of course, most users don't. Probably a schematic similar to what I show above (though of course with whichever SDF's notation prefers) would be best to define frames.\n\n**Remark I**:  In the one [issue #124](#!/osrf/sdformat/issues/124/make-link-reference-frame-relative-to#comment-28431974) you directed me above, the reporter also thought, erroneously, that `use_parent_model_frame` was about specifying the joint in the parent line frame . I think that could also be clarified in the documentation. \n\n**Remark II**: `Jp`, `Jc` are do not denote **poses** but they denote **frames**, the actual physical objects. These can exist in our physical world even before we decide to make any measurements of their position in other frame. We denote **poses** (others call them transforms and see them as a little 4x4 homogeneous transform matrix) as the position and orientation of given frame in another frame (so you need two frames to specify a pose). We denote those with a capital `X` with superscripts denoting the frames. For instance, a position vector expressed in a frame A can be transformed to be expressed in frame B using `p_B = \u1d2eX\u1d2c * p_A` (sorry for the bad mix of Latex and unicode).", "markup": "markdown", "html": "<p>Thank you so much for your help @chapulina. It'd seem the sdf format gives us a number of different options to specify frames and to specify in what frame a particular quantity (say a joint axis) is specified in. So far, we found ourselves resolving what combinations are allowed not by going to the documentation, but by essentially loading a particular SDF in Gazebo. If it loads, good and if not, well, we assume that is not allowed. You can see one of these iterations in <a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake/pull/4615\" rel=\"nofollow\">Drake here</a>.</p>\n<p><strong>This issue is not about asking for a new feature</strong> not even about modifying an existing one. This issue is essentially about formally dumping in <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec\" rel=\"nofollow\">the official SDF documentation</a> all this valuable information that experienced developers like you, how have worked with this format for a long time, know about but that of course, most users don't. Probably a schematic similar to what I show above (though of course with whichever SDF's notation prefers) would be best to define frames.</p>\n<p><strong>Remark I</strong>:  In the one <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/issues/124/make-link-reference-frame-relative-to#comment-28431974\" rel=\"nofollow\">issue #124</a> you directed me above, the reporter also thought, erroneously, that <code>use_parent_model_frame</code> was about specifying the joint in the parent line frame . I think that could also be clarified in the documentation. </p>\n<p><strong>Remark II</strong>: <code>Jp</code>, <code>Jc</code> are do not denote <strong>poses</strong> but they denote <strong>frames</strong>, the actual physical objects. These can exist in our physical world even before we decide to make any measurements of their position in other frame. We denote <strong>poses</strong> (others call them transforms and see them as a little 4x4 homogeneous transform matrix) as the position and orientation of given frame in another frame (so you need two frames to specify a pose). We denote those with a capital <code>X</code> with superscripts denoting the frames. For instance, a position vector expressed in a frame A can be transformed to be expressed in frame B using <code>p_B = \u1d2eX\u1d2c * p_A</code> (sorry for the bad mix of Latex and unicode).</p>", "type": "rendered"}, "created_on": "2017-11-03T13:51:19.730052+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "updated_on": "2017-11-03T13:55:14.168609+00:00", "type": "issue_comment", "id": 40990958}