{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170/comments/40978397.json"}, "html": {"href": "#!/osrf/sdformat/issues/170#comment-40978397"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}}, "type": "issue", "id": 170, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Update documentation on joints' frames specifying defaults and conventions"}, "content": {"raw": "Let me ellaborate on the kind of documentation we'd like so see with a schematic I put together. Generally, the model we are developing in [Drake](https://github.com/RobotLocomotion/drake) is predicated on the schematic I show below (yes, I need to upload that into master sometime soon!). In that schematic I show two bodies; a parent body with frame P (not necessarily at its center of mass) and a child body with a frame C (not necessarily either at its center of mass). In SDF terms, the \"inertial\" frames are Pcm and Ccm respectively, not necessarily (as said before) located at the body's frame's origins nor aligned with them.\nNow, if we place a joint between those two frames, generally we define a frame Jp rigidly attached on body P (that is, pose X_PJp of frame Jp in P is fixed) and a frame Jc rigidly attached on body C (that is, pose X_CJc is of frame Jc in C fixed). That joint has a state, here represented with `q`, and the pose of frame Jc in Jp, `X_JpJc(q)` is a function of that state. Since Jp is fixed in P and Jc is fixed in C, this in turns defines the pose of C in P.\n\nSpecial cases:\n1. Frame C \"is\" coincident with frame Jc (this is the typical case in urdf)\n2. Frame P (or C) is coincident with Pcm (or Ccm).\n\nHopefully that'll help aid the discussion. Now, we'd like to know exactly how the sdf format defines its frames and its defaults values so that we can, unambiguously, map to our representation. We hope this can be done by expanding the documentation now provided and that this documentation can also help others. Thoughts? \n\n\n![joint_frames.png](data/bitbucket.org/repo/ak8x4z/images/193284283-joint_frames.png)", "markup": "markdown", "html": "<p>Let me ellaborate on the kind of documentation we'd like so see with a schematic I put together. Generally, the model we are developing in <a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake\" rel=\"nofollow\">Drake</a> is predicated on the schematic I show below (yes, I need to upload that into master sometime soon!). In that schematic I show two bodies; a parent body with frame P (not necessarily at its center of mass) and a child body with a frame C (not necessarily either at its center of mass). In SDF terms, the \"inertial\" frames are Pcm and Ccm respectively, not necessarily (as said before) located at the body's frame's origins nor aligned with them.\nNow, if we place a joint between those two frames, generally we define a frame Jp rigidly attached on body P (that is, pose X_PJp of frame Jp in P is fixed) and a frame Jc rigidly attached on body C (that is, pose X_CJc is of frame Jc in C fixed). That joint has a state, here represented with <code>q</code>, and the pose of frame Jc in Jp, <code>X_JpJc(q)</code> is a function of that state. Since Jp is fixed in P and Jc is fixed in C, this in turns defines the pose of C in P.</p>\n<p>Special cases:\n1. Frame C \"is\" coincident with frame Jc (this is the typical case in urdf)\n2. Frame P (or C) is coincident with Pcm (or Ccm).</p>\n<p>Hopefully that'll help aid the discussion. Now, we'd like to know exactly how the sdf format defines its frames and its defaults values so that we can, unambiguously, map to our representation. We hope this can be done by expanding the documentation now provided and that this documentation can also help others. Thoughts? </p>\n<p><img alt=\"joint_frames.png\" src=\"data/bitbucket.org/repo/ak8x4z/images/193284283-joint_frames.png\" /></p>", "type": "rendered"}, "created_on": "2017-11-02T21:55:48.411739+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "updated_on": null, "type": "issue_comment", "id": 40978397}