{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28430651.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28430651"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "Note that `<use_parent_model_frame>` is actually using the model's frame, not the link's.\n\nAlso note that reference frames are already supported in SDF, but they're not being parsed by Gazebo yet. I believe the idea is to make link and joint origins directly reference-able by others without the need to create an extra frame.", "markup": "markdown", "html": "<p>Note that <code>&lt;use_parent_model_frame&gt;</code> is actually using the model's frame, not the link's.</p>\n<p>Also note that reference frames are already supported in SDF, but they're not being parsed by Gazebo yet. I believe the idea is to make link and joint origins directly reference-able by others without the need to create an extra frame.</p>", "type": "rendered"}, "created_on": "2016-06-10T22:11:20.287945+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 28430651}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28431213.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28431213"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "Could you please tell me if this is true:\n\nWithout using the <frame> tags, the only way to specify a serial chain manipulator is as follows:\n\nLet the robot kinematics be: world -> joint0 -> link0 -> joint1 -> link1 -> joint2 -> link2\nLet all links be 1 meter long\nLet all links have an x-axis joint at either end\nLet all link origins be at the parent joint\n\nlink0:  <pose>0 0 0 0 0 0</pose>, this is by default relative to the global origin frame\njoint0: <pose>0 0 0 0 0 0</pose>, this is by default relative to link0, so therefore at global origin\nlink1:  <pose>0 0 1 0 0 0</pose>, this is by default relative to the global origin frame\njoint1: <pose>0 0 0 0 0 0</pose>, this is by default relative to link1\nlink2:  <pose>0 0 2 0 0 0</pose>, this is by default relative to the global origin frame\njoint2: <pose>0 0 0 0 0 0</pose>, this is by default relative to link2\nlink3:  <pose>0 0 3 0 0 0</pose>, this is by default relative to the global origin frame\n\nIt is strange that the pose of links is relative to the global origin, but the pose of joints is relative to the links. But when gazebo interprets the SDF, the format above effectively results in a <pose>0 0 0 0 0 0</pose> relative to the parent joint. It's very non-intuitive, especially compared to URDF where the link is directly specified relative to the parent joint to begin with.\n\nAm I using SDF incorrectly?\n\n\n\n\n\n", "markup": "markdown", "html": "<p>Could you please tell me if this is true:</p>\n<p>Without using the &lt;frame&gt; tags, the only way to specify a serial chain manipulator is as follows:</p>\n<p>Let the robot kinematics be: world -&gt; joint0 -&gt; link0 -&gt; joint1 -&gt; link1 -&gt; joint2 -&gt; link2\nLet all links be 1 meter long\nLet all links have an x-axis joint at either end\nLet all link origins be at the parent joint</p>\n<p>link0:  &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame\njoint0: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link0, so therefore at global origin\nlink1:  &lt;pose&gt;0 0 1 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame\njoint1: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link1\nlink2:  &lt;pose&gt;0 0 2 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame\njoint2: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link2\nlink3:  &lt;pose&gt;0 0 3 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame</p>\n<p>It is strange that the pose of links is relative to the global origin, but the pose of joints is relative to the links. But when gazebo interprets the SDF, the format above effectively results in a &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt; relative to the parent joint. It's very non-intuitive, especially compared to URDF where the link is directly specified relative to the parent joint to begin with.</p>\n<p>Am I using SDF incorrectly?</p>", "type": "rendered"}, "created_on": "2016-06-10T23:38:41.516772+00:00", "user": {"display_name": "brian soe", "uuid": "{1304c393-d2c2-4bcf-b6f5-a6bcaf67335e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D"}, "html": {"href": "https://bitbucket.org/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b14bae67ccc0a2fc9514a6786af49460d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBS-4.png"}}, "nickname": "bsoe", "type": "user", "account_id": "557058:51a227ab-88a4-46f1-98ed-310ba4ac1d33"}, "updated_on": null, "type": "issue_comment", "id": 28431213}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28431242.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28431242"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "Reformatted:\n\nCould you please tell me if this is true:\n\nWithout using the <frame> tags, the only way to specify a serial chain manipulator is as follows:\n\nLet the robot kinematics be:  world -> joint0 -> link0 -> joint1 -> link1 -> joint2 -> link2 \n\n* Let all links be 1 meter long \n* Let all links have an x-axis joint at either end \n* Let all link origins be at the parent joint\n\nlink0: <pose>0 0 0 0 0 0</pose>, this is by default relative to the global origin frame \n\nlink1: <pose>0 0 1 0 0 0</pose>, this is by default relative to the global origin frame \n\nlink2: <pose>0 0 2 0 0 0</pose>, this is by default relative to the global origin frame \n\nlink3: <pose>0 0 3 0 0 0</pose>, this is by default relative to the global origin frame\n\njoint0: <pose>0 0 0 0 0 0</pose>, this is by default relative to link0, so therefore at global origin \n\njoint1: <pose>0 0 0 0 0 0</pose>, this is by default relative to link1 \n\njoint2: <pose>0 0 0 0 0 0</pose>, this is by default relative to link2 \n\n\n\n\n\nIt is strange that the pose of links is relative to the global origin, but the pose of joints is relative to the links. But when gazebo interprets the SDF, the format above effectively results in a <pose>0 0 0 0 0 0</pose> relative to the parent joint. It's very non-intuitive, especially compared to URDF where the link is directly specified relative to the parent joint to begin with.\n\nAm I using SDF incorrectly?", "markup": "markdown", "html": "<p>Reformatted:</p>\n<p>Could you please tell me if this is true:</p>\n<p>Without using the &lt;frame&gt; tags, the only way to specify a serial chain manipulator is as follows:</p>\n<p>Let the robot kinematics be:  world -&gt; joint0 -&gt; link0 -&gt; joint1 -&gt; link1 -&gt; joint2 -&gt; link2 </p>\n<ul>\n<li>Let all links be 1 meter long </li>\n<li>Let all links have an x-axis joint at either end </li>\n<li>Let all link origins be at the parent joint</li>\n</ul>\n<p>link0: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame </p>\n<p>link1: &lt;pose&gt;0 0 1 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame </p>\n<p>link2: &lt;pose&gt;0 0 2 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame </p>\n<p>link3: &lt;pose&gt;0 0 3 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame</p>\n<p>joint0: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link0, so therefore at global origin </p>\n<p>joint1: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link1 </p>\n<p>joint2: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link2 </p>\n<p>It is strange that the pose of links is relative to the global origin, but the pose of joints is relative to the links. But when gazebo interprets the SDF, the format above effectively results in a &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt; relative to the parent joint. It's very non-intuitive, especially compared to URDF where the link is directly specified relative to the parent joint to begin with.</p>\n<p>Am I using SDF incorrectly?</p>", "type": "rendered"}, "created_on": "2016-06-10T23:42:38.145154+00:00", "user": {"display_name": "brian soe", "uuid": "{1304c393-d2c2-4bcf-b6f5-a6bcaf67335e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D"}, "html": {"href": "https://bitbucket.org/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b14bae67ccc0a2fc9514a6786af49460d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBS-4.png"}}, "nickname": "bsoe", "type": "user", "account_id": "557058:51a227ab-88a4-46f1-98ed-310ba4ac1d33"}, "updated_on": null, "type": "issue_comment", "id": 28431242}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28431429.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28431429"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "SDF and URDF have different coordinate frame interpretations. We are in the process of extending SDF to support definitions similar to URDF through use of the `frame` attribute, but that is not yet finished.\n\nAlso, note that the `use_parent_model_frame` is a legacy fix for a bug in gazebo, which was interpreting joint frames in a manner inconsistent with the SDF convention. (see #43 and [gazebo issue 494](https://bitbucket.org/osrf/gazebo/issue/494/make-joint-axis-reference-frame-relative)).", "markup": "markdown", "html": "<p>SDF and URDF have different coordinate frame interpretations. We are in the process of extending SDF to support definitions similar to URDF through use of the <code>frame</code> attribute, but that is not yet finished.</p>\n<p>Also, note that the <code>use_parent_model_frame</code> is a legacy fix for a bug in gazebo, which was interpreting joint frames in a manner inconsistent with the SDF convention. (see <a href=\"#!/osrf/sdformat/issues/43/make-joint-axis-reference-frame-relative\" rel=\"nofollow\" title=\"Make joint axis reference frame relative to child link (gazebo 494)\" class=\"ap-connect-link\"><s>#43</s></a> and <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issue/494/make-joint-axis-reference-frame-relative\" rel=\"nofollow\">gazebo issue 494</a>).</p>", "type": "rendered"}, "created_on": "2016-06-11T00:14:18.688254+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 28431429}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28431974.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28431974"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "URDF has a hierarchical topology (aka tree), while SDF, without frames, has an extended star topology:\n\n![network-topology.jpg](data/bitbucket.org/repo/ak8x4z/images/2435264139-network-topology.jpg)\n\nOnce frames are fully implemented, SDF will be something like a mesh, where everyone can be described on anyone else's frames.\n\nFor now, SDF has many **models** expressed in the `world frame`, each model having many **links** expressed in the `model frame`. Models can be nested, so that there can be many **models** within a model, all expressed in the `parent model's frame`. **Joints** are always expressed in the `child link frame` (`use_parent_model_frame` is more of a backwards compatibility trick not to break deprecated behaviour than a feature).\n\nI am closing this issue, as I don't think the issue described is something missing in SDF, but the lack of a Gazebo implementation of frames. I created [Gazebo issue 1982](https://bitbucket.org/osrf/gazebo/issues/1982/parse-sdf-frame-elements-and-attributes) for that.  Please direct any further questions on how to use SDF to [Gazebo Answers](http://answers.gazebosim.org/questions/).\n", "markup": "markdown", "html": "<p>URDF has a hierarchical topology (aka tree), while SDF, without frames, has an extended star topology:</p>\n<p><img alt=\"network-topology.jpg\" src=\"data/bitbucket.org/repo/ak8x4z/images/2435264139-network-topology.jpg\" /></p>\n<p>Once frames are fully implemented, SDF will be something like a mesh, where everyone can be described on anyone else's frames.</p>\n<p>For now, SDF has many <strong>models</strong> expressed in the <code>world frame</code>, each model having many <strong>links</strong> expressed in the <code>model frame</code>. Models can be nested, so that there can be many <strong>models</strong> within a model, all expressed in the <code>parent model's frame</code>. <strong>Joints</strong> are always expressed in the <code>child link frame</code> (<code>use_parent_model_frame</code> is more of a backwards compatibility trick not to break deprecated behaviour than a feature).</p>\n<p>I am closing this issue, as I don't think the issue described is something missing in SDF, but the lack of a Gazebo implementation of frames. I created <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/1982/parse-sdf-frame-elements-and-attributes\" rel=\"nofollow\">Gazebo issue 1982</a> for that.  Please direct any further questions on how to use SDF to <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/questions/\" rel=\"nofollow\">Gazebo Answers</a>.</p>", "type": "rendered"}, "created_on": "2016-06-11T02:02:49.858188+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 28431974}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28431980.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28431980"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "Just saw @scpeters's answer :smile: ", "markup": "markdown", "html": "<p>Just saw @scpeters's answer <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f604.png\" alt=\"\ud83d\ude04\" title=\":smile:\" data-emoji-short-name=\":smile:\" /> </p>", "type": "rendered"}, "created_on": "2016-06-11T02:04:07.304182+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 28431980}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28431981.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28431981"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "Moved to Gazebo issue 1982\nhttps://bitbucket.org/osrf/gazebo/issues/1982/parse-sdf-frame-elements-and-attributes", "markup": "markdown", "html": "<p>Moved to Gazebo issue 1982\n<a href=\"https://bitbucket.org/osrf/gazebo/issues/1982/parse-sdf-frame-elements-and-attributes\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issues/1982/parse-sdf-frame-elements-and-attributes</a></p>", "type": "rendered"}, "created_on": "2016-06-11T02:04:31.551611+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 28431981}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28432250.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28432250"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "Thank you for the detailed reply, it was very helpful in clarifying the the intent of the SDF format.", "markup": "markdown", "html": "<p>Thank you for the detailed reply, it was very helpful in clarifying the the intent of the SDF format.</p>", "type": "rendered"}, "created_on": "2016-06-11T03:23:02.276998+00:00", "user": {"display_name": "brian soe", "uuid": "{1304c393-d2c2-4bcf-b6f5-a6bcaf67335e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D"}, "html": {"href": "https://bitbucket.org/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b14bae67ccc0a2fc9514a6786af49460d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBS-4.png"}}, "nickname": "bsoe", "type": "user", "account_id": "557058:51a227ab-88a4-46f1-98ed-310ba4ac1d33"}, "updated_on": null, "type": "issue_comment", "id": 28432250}], "page": 1, "size": 8}