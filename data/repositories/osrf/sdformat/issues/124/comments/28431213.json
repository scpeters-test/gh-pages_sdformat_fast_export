{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124/comments/28431213.json"}, "html": {"href": "#!/osrf/sdformat/issues/124#comment-28431213"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}}, "type": "issue", "id": 124, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Make link reference frame relative to child joint"}, "content": {"raw": "Could you please tell me if this is true:\n\nWithout using the <frame> tags, the only way to specify a serial chain manipulator is as follows:\n\nLet the robot kinematics be: world -> joint0 -> link0 -> joint1 -> link1 -> joint2 -> link2\nLet all links be 1 meter long\nLet all links have an x-axis joint at either end\nLet all link origins be at the parent joint\n\nlink0:  <pose>0 0 0 0 0 0</pose>, this is by default relative to the global origin frame\njoint0: <pose>0 0 0 0 0 0</pose>, this is by default relative to link0, so therefore at global origin\nlink1:  <pose>0 0 1 0 0 0</pose>, this is by default relative to the global origin frame\njoint1: <pose>0 0 0 0 0 0</pose>, this is by default relative to link1\nlink2:  <pose>0 0 2 0 0 0</pose>, this is by default relative to the global origin frame\njoint2: <pose>0 0 0 0 0 0</pose>, this is by default relative to link2\nlink3:  <pose>0 0 3 0 0 0</pose>, this is by default relative to the global origin frame\n\nIt is strange that the pose of links is relative to the global origin, but the pose of joints is relative to the links. But when gazebo interprets the SDF, the format above effectively results in a <pose>0 0 0 0 0 0</pose> relative to the parent joint. It's very non-intuitive, especially compared to URDF where the link is directly specified relative to the parent joint to begin with.\n\nAm I using SDF incorrectly?\n\n\n\n\n\n", "markup": "markdown", "html": "<p>Could you please tell me if this is true:</p>\n<p>Without using the &lt;frame&gt; tags, the only way to specify a serial chain manipulator is as follows:</p>\n<p>Let the robot kinematics be: world -&gt; joint0 -&gt; link0 -&gt; joint1 -&gt; link1 -&gt; joint2 -&gt; link2\nLet all links be 1 meter long\nLet all links have an x-axis joint at either end\nLet all link origins be at the parent joint</p>\n<p>link0:  &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame\njoint0: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link0, so therefore at global origin\nlink1:  &lt;pose&gt;0 0 1 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame\njoint1: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link1\nlink2:  &lt;pose&gt;0 0 2 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame\njoint2: &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt;, this is by default relative to link2\nlink3:  &lt;pose&gt;0 0 3 0 0 0&lt;/pose&gt;, this is by default relative to the global origin frame</p>\n<p>It is strange that the pose of links is relative to the global origin, but the pose of joints is relative to the links. But when gazebo interprets the SDF, the format above effectively results in a &lt;pose&gt;0 0 0 0 0 0&lt;/pose&gt; relative to the parent joint. It's very non-intuitive, especially compared to URDF where the link is directly specified relative to the parent joint to begin with.</p>\n<p>Am I using SDF incorrectly?</p>", "type": "rendered"}, "created_on": "2016-06-10T23:38:41.516772+00:00", "user": {"display_name": "brian soe", "uuid": "{1304c393-d2c2-4bcf-b6f5-a6bcaf67335e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D"}, "html": {"href": "https://bitbucket.org/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b14bae67ccc0a2fc9514a6786af49460d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBS-4.png"}}, "nickname": "bsoe", "type": "user", "account_id": "557058:51a227ab-88a4-46f1-98ed-310ba4ac1d33"}, "updated_on": null, "type": "issue_comment", "id": 28431213}