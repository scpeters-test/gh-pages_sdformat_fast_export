{"changes": {"content": {"new": "As discussed with @caguero - it would be great to have a couple of introductory tutorials on the [web site](http://sdformat.org/tutorials) that demonstrate how to build an sdf and then parse it with the c++ api.", "old": "As discussed with @caguero - it would be great to have a couple of introductory tutorials on the [web site](http://sdformat.org/tutorials) that demonstrate how to build an sdf and then parse it with the c++ api. Ideas that would be at least useful to us,"}}, "links": {"self": {"href": "data/repositories/osrf/sdformat/issues/159/changes/37179406.json"}, "html": {"href": "#!/osrf/sdformat/issues/159#comment-37179406"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/159.json"}}, "type": "issue", "id": 159, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "A first/second tutorial"}, "created_on": "2017-05-26T13:51:13.782877+00:00", "user": {"display_name": "stonier-tri", "uuid": "{df147a71-ec31-411c-b3b7-3bace0b40d64}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D"}, "html": {"href": "https://bitbucket.org/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f217cbf9d792ec7a44402d608e607bead=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-6.png"}}, "nickname": "stonier-tri", "type": "user", "account_id": "557058:05412d5e-1422-4161-b075-e8cdfb723072"}, "message": {"raw": "Ideas that would be at least useful to us, and probably to all and sundry:\r\n\r\n1. Build a non-trivial, but not too complex sdf - double pendulum is a meaningful example (e.g. [urdf](https://github.com/RobotLocomotion/drake/blob/master/drake/multibody/benchmarks/acrobot/double_pendulum.urdf).\r\n2. Write a simple program (or use one) that loads and validates the sdf from 1 (e.g. using [this api](#!/osrf/sdformat/issues/157/validating-an-sdf-from-the-c-api)).\r\n3. Write a simple program that loads and parses the sdf with the c++ api, pretty printing some details to the screen.", "markup": "markdown", "html": "<p>Ideas that would be at least useful to us, and probably to all and sundry:</p>\n<ol>\n<li>Build a non-trivial, but not too complex sdf - double pendulum is a meaningful example (e.g. <a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake/blob/master/drake/multibody/benchmarks/acrobot/double_pendulum.urdf\" rel=\"nofollow\">urdf</a>.</li>\n<li>Write a simple program (or use one) that loads and validates the sdf from 1 (e.g. using <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/issues/157/validating-an-sdf-from-the-c-api\" rel=\"nofollow\">this api</a>).</li>\n<li>Write a simple program that loads and parses the sdf with the c++ api, pretty printing some details to the screen.</li>\n</ol>", "type": "rendered"}, "type": "issue_change", "id": 37179406}