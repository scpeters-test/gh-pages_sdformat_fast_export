{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/100/comments/20919083.json"}, "html": {"href": "#!/osrf/sdformat/issues/100#comment-20919083"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/100.json"}}, "type": "issue", "id": 100, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "Gearbox joints violently explode when turned more then +-90 degrees about an axis other than the rotation axis"}, "content": {"raw": "at first glance, prime suspect looks like the [angles computation](https://bitbucket.org/osrf/gazebo/src/d5b03a8150fb0f730565bcc41fd9b916dd3e174c/deps/opende/src/joints/gearbox.cpp?at=default#gearbox.cpp-69) relative to `refBody` is failing due to *something* not being rotated with the system.  The problem is indeed `qrel1` and `qrel2` are not being updated. Patch below fixes the issue:\n\n~~~\ndiff -r c09d0f15d8d7 deps/opende/src/joints/gearbox.cpp\n--- a/deps/opende/src/joints/gearbox.cpp\tMon Aug 10 12:02:30 2015 -0700\n+++ b/deps/opende/src/joints/gearbox.cpp\tFri Aug 14 06:53:16 2015 -0700\n@@ -66,14 +66,18 @@\n     dBodyVectorToWorld(node[0].body, axis1[0], axis1[1], axis1[2], globalAxis1);\n     dBodyVectorToWorld(node[1].body, axis2[0], axis2[1], axis2[2], globalAxis2);\n \n+    dJointSetGearboxReferenceBody1(this, refBody1);\n+    dJointSetGearboxReferenceBody2(this, refBody2);\n+\n     double ang1 = getHingeAngle(refBody1,node[0].body,globalAxis1,qrel1);\n     double ang2 = getHingeAngle(refBody2,node[1].body,globalAxis2,qrel2);\n-    // printf(\"a1(%f) a10(%f) a2(%f) a20(%f)\\n\",\n-    //   ang1, cumulative_angle1, ang2, cumulative_angle2);\n \n     cumulative_angle1 = dShortestAngularDistanceUpdate(cumulative_angle1,ang1);\n     cumulative_angle2 = dShortestAngularDistanceUpdate(cumulative_angle2,ang2);\n \n+    // printf(\"a1(%f) a1c(%f) a2(%f) a2c(%f)\\n\",\n+    //   ang1, cumulative_angle1, ang2, cumulative_angle2);\n+\n     double err = dShortestAngularDistance(\n      cumulative_angle1, -ratio * cumulative_angle2);\n \n~~~", "markup": "markdown", "html": "<p>at first glance, prime suspect looks like the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/d5b03a8150fb0f730565bcc41fd9b916dd3e174c/deps/opende/src/joints/gearbox.cpp?at=default#gearbox.cpp-69\" rel=\"nofollow\">angles computation</a> relative to <code>refBody</code> is failing due to <em>something</em> not being rotated with the system.  The problem is indeed <code>qrel1</code> and <code>qrel2</code> are not being updated. Patch below fixes the issue:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r c09d0f15d8d7 deps/opende/src/joints/gearbox.cpp</span>\n<span class=\"gd\">--- a/deps/opende/src/joints/gearbox.cpp    Mon Aug 10 12:02:30 2015 -0700</span>\n<span class=\"gi\">+++ b/deps/opende/src/joints/gearbox.cpp    Fri Aug 14 06:53:16 2015 -0700</span>\n<span class=\"gu\">@@ -66,14 +66,18 @@</span>\n     dBodyVectorToWorld(node[0].body, axis1[0], axis1[1], axis1[2], globalAxis1);\n     dBodyVectorToWorld(node[1].body, axis2[0], axis2[1], axis2[2], globalAxis2);\n\n<span class=\"gi\">+    dJointSetGearboxReferenceBody1(this, refBody1);</span>\n<span class=\"gi\">+    dJointSetGearboxReferenceBody2(this, refBody2);</span>\n<span class=\"gi\">+</span>\n     double ang1 = getHingeAngle(refBody1,node[0].body,globalAxis1,qrel1);\n     double ang2 = getHingeAngle(refBody2,node[1].body,globalAxis2,qrel2);\n<span class=\"gd\">-    // printf(&quot;a1(%f) a10(%f) a2(%f) a20(%f)\\n&quot;,</span>\n<span class=\"gd\">-    //   ang1, cumulative_angle1, ang2, cumulative_angle2);</span>\n\n     cumulative_angle1 = dShortestAngularDistanceUpdate(cumulative_angle1,ang1);\n     cumulative_angle2 = dShortestAngularDistanceUpdate(cumulative_angle2,ang2);\n\n<span class=\"gi\">+    // printf(&quot;a1(%f) a1c(%f) a2(%f) a2c(%f)\\n&quot;,</span>\n<span class=\"gi\">+    //   ang1, cumulative_angle1, ang2, cumulative_angle2);</span>\n<span class=\"gi\">+</span>\n     double err = dShortestAngularDistance(\n      cumulative_angle1, -ratio * cumulative_angle2);\n</pre></div>", "type": "rendered"}, "created_on": "2015-08-14T13:53:20.148765+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": null, "type": "issue_comment", "id": 20919083}