{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/74/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/74.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/74/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/74/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/74/urdf-parsing-seg-fault-on-osx-108"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/74/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "URDF parsing seg-fault on OSX 10.8", "component": null, "votes": 0, "watches": 2, "content": {"raw": "It's really weird; I'm only able reproduce this on my laptop running OSX 10.8.5. With the home-brew versions or urdfdom and console_bridge installed, and building the `sdf_2.0` branch with `-DUSE_EXTERNAL_URDF=True`.\r\n\r\nI observe seg-faulting of the `INTEGRATION_fixed_joint_reduction` and `PERFORMANCE_parser_urdf` tests.\r\n\r\nFrom some extensive debugging, I've seen that the parser is unable to properly cast some of the URDF data types. For example, the cast from `urdf::Geometry` to `urdf::Box` in [sdf::CreateGeometry](#!/osrf/sdformat/src/sdf_2.0/src/parser_urdf.cc#cl-1673) is unsuccessful, which causes the seg-faults. The following is a workaround that prevents the seg-faults:\r\n~~~\r\ndiff -r e874d482d50e src/parser_urdf.cc\r\n--- a/src/parser_urdf.cc\tFri Sep 12 11:13:09 2014 -0700\r\n+++ b/src/parser_urdf.cc\tWed Oct 01 14:31:48 2014 -0700\r\n@@ -1673,9 +1673,19 @@\r\n         box = boost::dynamic_pointer_cast< const urdf::Box >(_geom);\r\n         int sizeCount = 3;\r\n         double sizeVals[3];\r\n-        sizeVals[0] = box->dim.x;\r\n-        sizeVals[1] = box->dim.y;\r\n-        sizeVals[2] = box->dim.z;\r\n+        if (box)\r\n+        {\r\n+          sizeVals[0] = box->dim.x;\r\n+          sizeVals[1] = box->dim.y;\r\n+          sizeVals[2] = box->dim.z;\r\n+        }\r\n+        else\r\n+        {\r\n+          std::cerr << \"Failed to cast to urdf::BoxPtr\" << std::endl;\r\n+          sizeVals[0] = 1.0;\r\n+          sizeVals[1] = 1.0;\r\n+          sizeVals[2] = 1.0;\r\n+        }\r\n         geometryType = new TiXmlElement(type);\r\n         AddKeyValue(geometryType, \"size\",\r\n             Values2str(sizeCount, sizeVals));\r\n~~~\r\nThis is really weird.", "markup": "markdown", "html": "<p>It's really weird; I'm only able reproduce this on my laptop running OSX 10.8.5. With the home-brew versions or urdfdom and console_bridge installed, and building the <code>sdf_2.0</code> branch with <code>-DUSE_EXTERNAL_URDF=True</code>.</p>\n<p>I observe seg-faulting of the <code>INTEGRATION_fixed_joint_reduction</code> and <code>PERFORMANCE_parser_urdf</code> tests.</p>\n<p>From some extensive debugging, I've seen that the parser is unable to properly cast some of the URDF data types. For example, the cast from <code>urdf::Geometry</code> to <code>urdf::Box</code> in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/sdf_2.0/src/parser_urdf.cc#cl-1673\" rel=\"nofollow\">sdf::CreateGeometry</a> is unsuccessful, which causes the seg-faults. The following is a workaround that prevents the seg-faults:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r e874d482d50e src/parser_urdf.cc</span>\n<span class=\"gd\">--- a/src/parser_urdf.cc    Fri Sep 12 11:13:09 2014 -0700</span>\n<span class=\"gi\">+++ b/src/parser_urdf.cc    Wed Oct 01 14:31:48 2014 -0700</span>\n<span class=\"gu\">@@ -1673,9 +1673,19 @@</span>\n         box = boost::dynamic_pointer_cast&lt; const urdf::Box &gt;(_geom);\n         int sizeCount = 3;\n         double sizeVals[3];\n<span class=\"gd\">-        sizeVals[0] = box-&gt;dim.x;</span>\n<span class=\"gd\">-        sizeVals[1] = box-&gt;dim.y;</span>\n<span class=\"gd\">-        sizeVals[2] = box-&gt;dim.z;</span>\n<span class=\"gi\">+        if (box)</span>\n<span class=\"gi\">+        {</span>\n<span class=\"gi\">+          sizeVals[0] = box-&gt;dim.x;</span>\n<span class=\"gi\">+          sizeVals[1] = box-&gt;dim.y;</span>\n<span class=\"gi\">+          sizeVals[2] = box-&gt;dim.z;</span>\n<span class=\"gi\">+        }</span>\n<span class=\"gi\">+        else</span>\n<span class=\"gi\">+        {</span>\n<span class=\"gi\">+          std::cerr &lt;&lt; &quot;Failed to cast to urdf::BoxPtr&quot; &lt;&lt; std::endl;</span>\n<span class=\"gi\">+          sizeVals[0] = 1.0;</span>\n<span class=\"gi\">+          sizeVals[1] = 1.0;</span>\n<span class=\"gi\">+          sizeVals[2] = 1.0;</span>\n<span class=\"gi\">+        }</span>\n         geometryType = new TiXmlElement(type);\n         AddKeyValue(geometryType, &quot;size&quot;,\n             Values2str(sizeCount, sizeVals));\n</pre></div>\n\n\n<p>This is really weird.</p>", "type": "rendered"}, "assignee": null, "state": "on hold", "version": null, "edited_on": null, "created_on": "2014-10-01T21:35:47.355319+00:00", "milestone": null, "updated_on": "2015-02-03T21:52:05.819118+00:00", "type": "issue", "id": 74}