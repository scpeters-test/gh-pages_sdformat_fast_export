{"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/122/comments/28199610.json"}, "html": {"href": "#!/osrf/sdformat/issues/122#comment-28199610"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/sdformat/issues/122.json"}}, "type": "issue", "id": 122, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "title": "cmake or nmake not producing package config"}, "content": {"raw": "..\\configure (implicit Release build) also failed.\n\nAfter a few hours of clumsily feeling my way through the cmake documentation I was able to fix the problem at least as far as getting the cmake command to run without errors, I'm yet to test the Visual Studio build. \n\nThe problem was this block of cmake script from .\\gazebo\\sdformat\\build\\install\\Debug\\lib\\cmake\\sdformat\\SDFormatConfigVersion.cmake\n\n```\n#!cmake\n\n# if the installed or the using project don't have CMAKE_SIZEOF_VOID_P set, ignore it:\nif(\"${CMAKE_SIZEOF_VOID_P}\" STREQUAL \"\" OR \"8\" STREQUAL \"\")\n   return()\nendif()\n\n# check that the installed version has the same 32/64bit-ness as the one which is currently searching:\nif(NOT CMAKE_SIZEOF_VOID_P STREQUAL \"8\")\n  math(EXPR installedBits \"8 * 8\")\n  set(PACKAGE_VERSION \"${PACKAGE_VERSION} (${installedBits}bit)\")\n  set(PACKAGE_VERSION_UNSUITABLE TRUE)\nendif()\n```\nOn my Windows 10 x64 machine CMAKE_SIZEOF_VOID_P == 4 so the check for sdformat always bombed out.\n\nMy fix was to put a return() statement above that block. I know I built sdformat as x64 which is also what I'm building gazebo as.\n", "markup": "markdown", "html": "<p>..\\configure (implicit Release build) also failed.</p>\n<p>After a few hours of clumsily feeling my way through the cmake documentation I was able to fix the problem at least as far as getting the cmake command to run without errors, I'm yet to test the Visual Studio build. </p>\n<p>The problem was this block of cmake script from .\\gazebo\\sdformat\\build\\install\\Debug\\lib\\cmake\\sdformat\\SDFormatConfigVersion.cmake</p>\n<div class=\"codehilite language-cmake\"><pre><span></span><span class=\"c\"># if the installed or the using project don&#39;t have CMAKE_SIZEOF_VOID_P set, ignore it:</span>\n<span class=\"nb\">if</span><span class=\"p\">(</span><span class=\"s2\">&quot;${CMAKE_SIZEOF_VOID_P}&quot;</span> <span class=\"s\">STREQUAL</span> <span class=\"s2\">&quot;&quot;</span> <span class=\"s\">OR</span> <span class=\"s2\">&quot;8&quot;</span> <span class=\"s\">STREQUAL</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n   <span class=\"nb\">return</span><span class=\"p\">()</span>\n<span class=\"nb\">endif</span><span class=\"p\">()</span>\n\n<span class=\"c\"># check that the installed version has the same 32/64bit-ness as the one which is currently searching:</span>\n<span class=\"nb\">if</span><span class=\"p\">(</span><span class=\"s\">NOT</span> <span class=\"s\">CMAKE_SIZEOF_VOID_P</span> <span class=\"s\">STREQUAL</span> <span class=\"s2\">&quot;8&quot;</span><span class=\"p\">)</span>\n  <span class=\"nb\">math</span><span class=\"p\">(</span><span class=\"s\">EXPR</span> <span class=\"s\">installedBits</span> <span class=\"s2\">&quot;8 * 8&quot;</span><span class=\"p\">)</span>\n  <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"s\">PACKAGE_VERSION</span> <span class=\"s2\">&quot;${PACKAGE_VERSION} (${installedBits}bit)&quot;</span><span class=\"p\">)</span>\n  <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"s\">PACKAGE_VERSION_UNSUITABLE</span> <span class=\"s\">TRUE</span><span class=\"p\">)</span>\n<span class=\"nb\">endif</span><span class=\"p\">()</span>\n</pre></div>\n\n\n<p>On my Windows 10 x64 machine CMAKE_SIZEOF_VOID_P == 4 so the check for sdformat always bombed out.</p>\n<p>My fix was to put a return() statement above that block. I know I built sdformat as x64 which is also what I'm building gazebo as.</p>", "type": "rendered"}, "created_on": "2016-06-01T13:05:31.308353+00:00", "user": {"display_name": "Aaron Clauson", "uuid": "{80d9ee60-d587-47a9-baa5-5005304756a7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D"}, "html": {"href": "https://bitbucket.org/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a91a9c7849303cad7efa3423f1feba30d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-5.png"}}, "nickname": "azaclauson", "type": "user", "account_id": "557058:c389a3f4-daff-47aa-8c04-b81dd4520568"}, "updated_on": null, "type": "issue_comment", "id": 28199610}