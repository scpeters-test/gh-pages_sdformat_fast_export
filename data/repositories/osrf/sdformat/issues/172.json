{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/172/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/172.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/172/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/172/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/172/allow-parsing-sdf-from-std-istream"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/172/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Allow parsing SDF from `std::istream`", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Currently the API for parsing SDF has two methods `readFile` and `readString`. Reading from an `std::istream` would give users more options in where the SDF content comes from.\r\n\r\nThe implementations of `readFile` and `readString` could be replaced with a call to the `std::istream` version. `readFile` would pass in an open `std:ifstream` while the `readString` would pass in `std::stringstream`.", "markup": "markdown", "html": "<p>Currently the API for parsing SDF has two methods <code>readFile</code> and <code>readString</code>. Reading from an <code>std::istream</code> would give users more options in where the SDF content comes from.</p>\n<p>The implementations of <code>readFile</code> and <code>readString</code> could be replaced with a call to the <code>std::istream</code> version. <code>readFile</code> would pass in an open <code>std:ifstream</code> while the <code>readString</code> would pass in <code>std::stringstream</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-12-13T17:37:01.007033+00:00", "milestone": null, "updated_on": "2017-12-13T17:37:01.007033+00:00", "type": "issue", "id": 172}