{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/220/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/220.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/220/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/220/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/220/provide-api-for-loading-sdf-file-without"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/220/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Provide API for loading SDF file without converting it to latest supported version", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThe `sdf::readFile` and `sdf::readString` functions in [parser.hh](#!/osrf/sdformat/src/default/include/sdf/parser.hh) convert file to the latest SDF version. It would be nice to provide an API that loads the file at its current version without conversion.\r\n\r\n# Motivation\r\n\r\nIt would allow 3rd parties that use the sdformat parser time to migrate from an older version of the spec to the newest one.\r\n\r\n# Describe alternatives you've considered\r\n\r\nTell users to read the `/sdf[@version]` attribute and pass it to `sdf::convertFile` to load the file at the specific version. Providing a dedicated API would simplify this process.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>The <code>sdf::readFile</code> and <code>sdf::readString</code> functions in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/default/include/sdf/parser.hh\" rel=\"nofollow\">parser.hh</a> convert file to the latest SDF version. It would be nice to provide an API that loads the file at its current version without conversion.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>It would allow 3rd parties that use the sdformat parser time to migrate from an older version of the spec to the newest one.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Tell users to read the <code>/sdf[@version]</code> attribute and pass it to <code>sdf::convertFile</code> to load the file at the specific version. Providing a dedicated API would simplify this process.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-16T21:44:05.292807+00:00", "milestone": null, "updated_on": "2020-01-17T06:03:57.500418+00:00", "type": "issue", "id": 220}