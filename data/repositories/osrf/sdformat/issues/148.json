{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/148/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/148.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/148/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/148/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/148/treat-boolean-strings-case-insensitive"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/148/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "Treat \"boolean strings\" case insensitive?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I've just found out that the following\r\n\r\n    <param>True</param>\r\n\r\nreturns 0 when called as `element->Get<bool>()`.\r\n\r\nOn the other hand,\r\n\r\n    <param>true</param>\r\n\r\nreturns 1.\r\n\r\nI'm writing these tags inside a Gazebo plugin tag, where any tags are allowed, and the data format cannot be specified in advance, so the `<param>` tag is treated like a string type.\r\n\r\nI've looked into `Param_TEST.cc`, and neither the camelcase, nor the uppercase case is  covered for the bool type. \r\n\r\nWhat is the expected behavior according to you? For me, it'd be treating all cases of true/True/TRUE as true.", "markup": "markdown", "html": "<p>I've just found out that the following</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;param&gt;</span>True<span class=\"nt\">&lt;/param&gt;</span>\n</pre></div>\n\n\n<p>returns 0 when called as <code>element-&gt;Get&lt;bool&gt;()</code>.</p>\n<p>On the other hand,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;param&gt;</span>true<span class=\"nt\">&lt;/param&gt;</span>\n</pre></div>\n\n\n<p>returns 1.</p>\n<p>I'm writing these tags inside a Gazebo plugin tag, where any tags are allowed, and the data format cannot be specified in advance, so the <code>&lt;param&gt;</code> tag is treated like a string type.</p>\n<p>I've looked into <code>Param_TEST.cc</code>, and neither the camelcase, nor the uppercase case is  covered for the bool type. </p>\n<p>What is the expected behavior according to you? For me, it'd be treating all cases of true/True/TRUE as true.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-02-27T00:34:02.363245+00:00", "milestone": null, "updated_on": "2017-05-06T00:16:56.943130+00:00", "type": "issue", "id": 148}