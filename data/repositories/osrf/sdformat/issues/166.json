{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/166/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/166.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/166/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/166/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/166/lacks-a-way-to-specify-the-vertical-field"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/166/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "<camera> lacks a way to specify the vertical field of view", "component": null, "votes": 0, "watches": 1, "content": {"raw": "sdf spec 1.6\r\n\r\nThe `<camera>` allows specifying the horizontal field of view, image width, and image height, but not the vertical field of view. Gazebo calculates the vertical field of view using  ` vfov = 2.0 * atan(tan(hfov / 2.0) / ratio)` where `ratio = width / height`.\r\n\r\nThe vertical field of view of a simulated camera doesn't have to obey that formula. For example Ogre allows changing the vertical field of view [directly](http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_camera.html#aa6f83f76980139d6a9c36abf635e0c75) or by [setting an aspect ratio](http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_frustum.html#a3235cda8bbc2ae127082e191ae11bcb0). The `<camera>` tag could have an `<aspect_ratio>` or `<vertical_fov>` so it could be specified in SDF. I have not checked if there are real cameras that would require this setting to be simulated correctly.", "markup": "markdown", "html": "<p>sdf spec 1.6</p>\n<p>The <code>&lt;camera&gt;</code> allows specifying the horizontal field of view, image width, and image height, but not the vertical field of view. Gazebo calculates the vertical field of view using  <code>vfov = 2.0 * atan(tan(hfov / 2.0) / ratio)</code> where <code>ratio = width / height</code>.</p>\n<p>The vertical field of view of a simulated camera doesn't have to obey that formula. For example Ogre allows changing the vertical field of view <a data-is-external-link=\"true\" href=\"http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_camera.html#aa6f83f76980139d6a9c36abf635e0c75\" rel=\"nofollow\">directly</a> or by <a data-is-external-link=\"true\" href=\"http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_frustum.html#a3235cda8bbc2ae127082e191ae11bcb0\" rel=\"nofollow\">setting an aspect ratio</a>. The <code>&lt;camera&gt;</code> tag could have an <code>&lt;aspect_ratio&gt;</code> or <code>&lt;vertical_fov&gt;</code> so it could be specified in SDF. I have not checked if there are real cameras that would require this setting to be simulated correctly.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-29T22:29:00.354188+00:00", "milestone": null, "updated_on": "2017-08-29T22:31:30.741816+00:00", "type": "issue", "id": 166}