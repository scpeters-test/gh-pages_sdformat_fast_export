{"next": "data/repositories/osrf/sdformat/issues_page=3.json", "values": [{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/101/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/101.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/101/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/101/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/101/default-and-type-dont-show-on-spec-website"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/101/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Default and type don't show on spec website", "component": null, "votes": 1, "watches": 3, "content": {"raw": "![default.png](data/bitbucket.org/repo/ak8x4z/images/2771061987-default.png)", "markup": "markdown", "html": "<p><img alt=\"default.png\" src=\"data/bitbucket.org/repo/ak8x4z/images/2771061987-default.png\" /></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-07-15T19:06:38.442564+00:00", "milestone": null, "updated_on": "2017-11-17T00:30:38.127649+00:00", "type": "issue", "id": 101}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/102/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/102.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/102/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/102/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/102/sdformat-sdf-3x-package-does-not-work-well"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/102/vote"}}, "reporter": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "title": "sdformat-sdf 3.x package does not work well with libsdformat2", "component": null, "votes": 0, "watches": 3, "content": {"raw": "I made a quick test modifying our sdformat-sdf_3.0.7 prerelease version to use the stable names and use it to upgrade sdformat-sdf 2.3.2. \r\n\r\nTo test:\r\n```\r\nsudo apt-get install gazebo5\r\nwget https://www.dropbox.com/s/9w10damxre59c5g/sdformat-sdf_3.0.7-1~vivid_all.deb?dl=0\r\nsudo dpkg -i sdformat-sdf.*\r\ngazebo --verbose\r\n```\r\nResult:\r\n```\r\njrivero@nium ~ $ gazebo --verbose\r\nGazebo multi-robot simulator, version 5.1.0\r\nCopyright (C) 2012-2015 Open Source Robotics Foundation.\r\nReleased under the Apache 2 License.\r\nhttp://gazebosim.org\r\n\r\nGazebo multi-robot simulator, version 5.1.0\r\nCopyright (C) 2012-2015 Open Source Robotics Foundation.\r\nReleased under the Apache 2 License.\r\nhttp://gazebosim.org\r\n\r\n[Msg] Waiting for master.\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 192.168.1.100\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 192.168.1.100\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\nError [Param.cc:102] Unknown parameter type[uint64_t]\r\n...\r\n```\r\n", "markup": "markdown", "html": "<p>I made a quick test modifying our sdformat-sdf_3.0.7 prerelease version to use the stable names and use it to upgrade sdformat-sdf 2.3.2. </p>\n<p>To test:</p>\n<div class=\"codehilite\"><pre><span></span>sudo apt-get install gazebo5\nwget https://www.dropbox.com/s/9w10damxre59c5g/sdformat-sdf_3.0.7-1~vivid_all.deb?dl=0\nsudo dpkg -i sdformat-sdf.*\ngazebo --verbose\n</pre></div>\n\n\n<p>Result:</p>\n<div class=\"codehilite\"><pre><span></span>jrivero@nium ~ $ gazebo --verbose\nGazebo multi-robot simulator, version 5.1.0\nCopyright (C) 2012-2015 Open Source Robotics Foundation.\nReleased under the Apache 2 License.\nhttp://gazebosim.org\n\nGazebo multi-robot simulator, version 5.1.0\nCopyright (C) 2012-2015 Open Source Robotics Foundation.\nReleased under the Apache 2 License.\nhttp://gazebosim.org\n\n[Msg] Waiting for master.\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 192.168.1.100\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 192.168.1.100\nError [Param.cc:102] Unknown parameter type[uint64_t]\nError [Param.cc:102] Unknown parameter type[uint64_t]\nError [Param.cc:102] Unknown parameter type[uint64_t]\nError [Param.cc:102] Unknown parameter type[uint64_t]\nError [Param.cc:102] Unknown parameter type[uint64_t]\nError [Param.cc:102] Unknown parameter type[uint64_t]\nError [Param.cc:102] Unknown parameter type[uint64_t]\nError [Param.cc:102] Unknown parameter type[uint64_t]\n...\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-07-23T02:04:54.473902+00:00", "milestone": null, "updated_on": "2015-08-02T20:29:03.425206+00:00", "type": "issue", "id": 102}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/103/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/103.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/103/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/103/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/103/precision-error-when-getting-double-value"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/103/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Precision error when getting double value from sdf element", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Values are stored as strings in sdf elements which probably resulted in the cropping of decimals during the double to string cast operation.\r\n\r\nAdded test in [double_precision](#!/osrf/sdformat/commits/bda619ad70b6730a3bd476f8dff36adc53b209b4)\r\n branch\r\n\r\nThe test shows that decimals get cropped and the double comparison fails", "markup": "markdown", "html": "<p>Values are stored as strings in sdf elements which probably resulted in the cropping of decimals during the double to string cast operation.</p>\n<p>Added test in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/commits/bda619ad70b6730a3bd476f8dff36adc53b209b4\" rel=\"nofollow\">double_precision</a>\n branch</p>\n<p>The test shows that decimals get cropped and the double comparison fails</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-07-31T17:24:06.411619+00:00", "milestone": null, "updated_on": "2015-07-31T17:24:06.411619+00:00", "type": "issue", "id": 103}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/104/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/104.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/104/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/104/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/104/memory-leak-in-element"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/104/vote"}}, "reporter": {"display_name": "Elte Hupkes", "uuid": "{f23aa1a9-ae57-493f-8169-fbb59b3eae43}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D"}, "html": {"href": "https://bitbucket.org/%7Bf23aa1a9-ae57-493f-8169-fbb59b3eae43%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8560ee94d50ba277c411499a45b3d732d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsEH-5.png"}}, "nickname": "ElteHupkes", "type": "user", "account_id": "557058:b758f523-bdaa-4718-964c-03b825bdea8d"}, "title": "Memory leak in `Element`", "component": null, "votes": 0, "watches": 3, "content": {"raw": "Because `this->Reset()` is commented out in `Element::~Element()`, SDF elements that contain any children whatsoever now have a memory leak. This is quite straightforward to show using the following program:\r\n\r\n```\r\n#!c++\r\n\r\n#include <iostream>\r\n#include <sdf/sdf.hh>\r\n\r\nint main()\r\n{\r\n\tfor (unsigned int i = 0; i < 1000; ++i) {\r\n\t\tsdf::SDF modelSDF;\r\n\t\tmodelSDF.SetFromString(\"<?xml version=\\\"1.0\\\"?>\\n\"\r\n\t\t\t\t\t\t\t\t\t   \"<sdf version=\\\"1.5\\\">\\n\"\r\n\t\t\t\t\t\t\t\t\t   \"    <model name=\\\"break_bot\\\">\\n\"\r\n\t\t\t\t\t\t\t\t\t   \"        <link name=\\\"root-link\\\">\\n\"\r\n\t\t\t\t\t\t\t\t\t   \"           <sensor type=\\\"gps\\\" name=\\\"mysensor\\\" />\"\r\n\t\t\t\t\t\t\t\t\t   \"        </link>\\n\"\r\n\t\t\t\t\t\t\t\t\t   \"    </model>\\n\"\r\n\t\t\t\t\t\t\t\t\t   \"</sdf>\");\r\n\r\n\t\t// Uncomment this line to make the memory leak disappear\r\n//\t\tmodelSDF.Root()->Reset();\r\n\r\n\t\tstd::cout << \"Iteration \" << i << std::endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\nCompile, run `top` in one terminal, this program in the other and see the memory usage move up quickly, even though `modelSDF` goes out of scope and should be deleted in its entirety every iteration. Uncomment the `Reset()` line and memory usage stays constant.\r\n\r\n`Element::~Element()` only clears the smart pointers of its direct descendants. However, these descendants hold circular parent/child references to each other, meaning their reference counters do not actually go to zero and their memory is never freed. I believe `Element::Reset()` is supposed to take care of that, but is never called unless this is done manually.", "markup": "markdown", "html": "<p>Because <code>this-&gt;Reset()</code> is commented out in <code>Element::~Element()</code>, SDF elements that contain any children whatsoever now have a memory leak. This is quite straightforward to show using the following program:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;sdf/sdf.hh&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">unsigned</span> <span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1000</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDF</span> <span class=\"n\">modelSDF</span><span class=\"p\">;</span>\n        <span class=\"n\">modelSDF</span><span class=\"p\">.</span><span class=\"n\">SetFromString</span><span class=\"p\">(</span><span class=\"s\">&quot;&lt;?xml version=</span><span class=\"se\">\\&quot;</span><span class=\"s\">1.0</span><span class=\"se\">\\&quot;</span><span class=\"s\">?&gt;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span>\n                                       <span class=\"s\">&quot;&lt;sdf version=</span><span class=\"se\">\\&quot;</span><span class=\"s\">1.5</span><span class=\"se\">\\&quot;</span><span class=\"s\">&gt;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span>\n                                       <span class=\"s\">&quot;    &lt;model name=</span><span class=\"se\">\\&quot;</span><span class=\"s\">break_bot</span><span class=\"se\">\\&quot;</span><span class=\"s\">&gt;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span>\n                                       <span class=\"s\">&quot;        &lt;link name=</span><span class=\"se\">\\&quot;</span><span class=\"s\">root-link</span><span class=\"se\">\\&quot;</span><span class=\"s\">&gt;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span>\n                                       <span class=\"s\">&quot;           &lt;sensor type=</span><span class=\"se\">\\&quot;</span><span class=\"s\">gps</span><span class=\"se\">\\&quot;</span><span class=\"s\"> name=</span><span class=\"se\">\\&quot;</span><span class=\"s\">mysensor</span><span class=\"se\">\\&quot;</span><span class=\"s\"> /&gt;&quot;</span>\n                                       <span class=\"s\">&quot;        &lt;/link&gt;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span>\n                                       <span class=\"s\">&quot;    &lt;/model&gt;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span>\n                                       <span class=\"s\">&quot;&lt;/sdf&gt;&quot;</span><span class=\"p\">);</span>\n\n        <span class=\"c1\">// Uncomment this line to make the memory leak disappear</span>\n<span class=\"c1\">//      modelSDF.Root()-&gt;Reset();</span>\n\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Iteration &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Compile, run <code>top</code> in one terminal, this program in the other and see the memory usage move up quickly, even though <code>modelSDF</code> goes out of scope and should be deleted in its entirety every iteration. Uncomment the <code>Reset()</code> line and memory usage stays constant.</p>\n<p><code>Element::~Element()</code> only clears the smart pointers of its direct descendants. However, these descendants hold circular parent/child references to each other, meaning their reference counters do not actually go to zero and their memory is never freed. I believe <code>Element::Reset()</code> is supposed to take care of that, but is never called unless this is done manually.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-08-23T13:42:07.033274+00:00", "milestone": null, "updated_on": "2015-10-06T20:20:17.572941+00:00", "type": "issue", "id": 104}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/105/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/105.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/105/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/105/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/105/urdf-parser-fails-if-two-consecutive-fixed"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/105/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "URDF parser fails if two consecutive fixed joints are present in the model.", "component": null, "votes": 2, "watches": 2, "content": {"raw": "If two  consecutive fixed joints are present in a URDF model, and both joints have a massless child, the conversion to SDF is broken. In particular the COM of the resulting link is reset to zero (observed in Linux) or set to NaN (observed on OS X). \r\n\r\nTo reproduce the issue, call the `gz sdf -p` program in the attached urdf files:\r\n\r\nWorking model, with a single fixed joint:\r\n~~~\r\npegua@pareto:~$ cat singleFixed.urdf \r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<robot name=\"exampleRobot\">\r\n\t<link name=\"link1\">\r\n\t\t<inertial>\r\n\t\t\t<mass value=\"25.49\"/>\r\n\t\t\t<origin xyz=\"10.0 20.0 30.0\" rpy=\"0 -0 0\"/>\r\n\t\t\t<inertia ixx=\"0.50297\" ixy=\"0\" ixz=\"0\" iyy=\"0.332368\" iyz=\"0\" izz=\"0.479884\"/>\r\n\t\t</inertial>\r\n\t</link>\r\n\t<joint name=\"joint1\" type=\"fixed\">\r\n\t\t<origin xyz=\"0 0 0\" rpy=\"0 -0 0\"/>\r\n\t\t<axis xyz=\"0 0 1\"/>\r\n\t\t<parent link=\"link1\"/>\r\n\t\t<child link=\"link2\"/>\r\n\t\t<limit effort=\"-1\" velocity=\"-1\" lower=\"0\" upper=\"0\"/>\r\n\t</joint>\r\n    <link name=\"link2\">\r\n\t\t<inertial>\r\n\t\t\t<mass value=\"0.0\"/>\r\n\t\t\t<origin xyz=\"0 0 0\" rpy=\"0 -0 0\"/>\r\n\t\t\t<inertia ixx=\"0.0\" ixy=\"0\" ixz=\"0\" iyy=\"0.0\" iyz=\"0\" izz=\"0.0\"/>\r\n\t\t</inertial>\r\n\t</link>\r\n    <!--\r\n    <joint name=\"joint2\" type=\"fixed\">\r\n\t\t<origin xyz=\"0 0 0\" rpy=\"1.57079637 -8.74227766e-08 3.14159274\"/>\r\n\t\t<axis xyz=\"0 0 1\"/>\r\n\t\t<parent link=\"link2\"/>\r\n\t\t<child link=\"link3\"/>\r\n\t\t<limit effort=\"-1\" velocity=\"-1\" lower=\"0\" upper=\"0\"/>\r\n\t</joint>\r\n    <link name=\"link3\">\r\n\t\t<inertial>\r\n\t\t\t<mass value=\"0.0\"/>\r\n\t\t\t<origin xyz=\"0 0 0\" rpy=\"0 -0 0\"/>\r\n\t\t\t<inertia ixx=\"0.0\" ixy=\"0\" ixz=\"0\" iyy=\"0.0\" iyz=\"0\" izz=\"0.0\"/>\r\n\t\t</inertial>\r\n\t</link>\r\n    -->\r\n</robot>\r\npegua@pareto:~$ gz sdf -p singleFixed.urdf \r\n<sdf version='1.5'>\r\n  <model name='exampleRobot'>\r\n    <link name='link1'>\r\n      <pose>0 0 0 0 -0 0</pose>\r\n      <inertial>\r\n        <pose>10 20 30 0 -0 0</pose>\r\n        <mass>25.49</mass>\r\n        <inertia>\r\n          <ixx>0.50297</ixx>\r\n          <ixy>0</ixy>\r\n          <ixz>0</ixz>\r\n          <iyy>0.332368</iyy>\r\n          <iyz>0</iyz>\r\n          <izz>0.479884</izz>\r\n        </inertia>\r\n      </inertial>\r\n    </link>\r\n  </model>\r\n</sdf>\r\n~~~\r\n\r\nBroken model, with two fixed joints (note the COM pose):\r\n~~~\r\npegua@pareto:~$ cat doubleFixed.urdf \r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<robot name=\"exampleRobot\">\r\n\t<link name=\"link1\">\r\n\t\t<inertial>\r\n\t\t\t<mass value=\"25.49\"/>\r\n\t\t\t<origin xyz=\"10.0 20.0 30.0\" rpy=\"0 -0 0\"/>\r\n\t\t\t<inertia ixx=\"0.50297\" ixy=\"0\" ixz=\"0\" iyy=\"0.332368\" iyz=\"0\" izz=\"0.479884\"/>\r\n\t\t</inertial>\r\n\t</link>\r\n\t<joint name=\"joint1\" type=\"fixed\">\r\n\t\t<origin xyz=\"0 0 0\" rpy=\"0 -0 0\"/>\r\n\t\t<axis xyz=\"0 0 1\"/>\r\n\t\t<parent link=\"link1\"/>\r\n\t\t<child link=\"link2\"/>\r\n\t\t<limit effort=\"-1\" velocity=\"-1\" lower=\"0\" upper=\"0\"/>\r\n\t</joint>\r\n    <link name=\"link2\">\r\n\t\t<inertial>\r\n\t\t\t<mass value=\"0.0\"/>\r\n\t\t\t<origin xyz=\"0 0 0\" rpy=\"0 -0 0\"/>\r\n\t\t\t<inertia ixx=\"0.0\" ixy=\"0\" ixz=\"0\" iyy=\"0.0\" iyz=\"0\" izz=\"0.0\"/>\r\n\t\t</inertial>\r\n\t</link>\r\n    <joint name=\"joint2\" type=\"fixed\">\r\n\t\t<origin xyz=\"0 0 0\" rpy=\"1.57079637 -8.74227766e-08 3.14159274\"/>\r\n\t\t<axis xyz=\"0 0 1\"/>\r\n\t\t<parent link=\"link2\"/>\r\n\t\t<child link=\"link3\"/>\r\n\t\t<limit effort=\"-1\" velocity=\"-1\" lower=\"0\" upper=\"0\"/>\r\n\t</joint>\r\n    <link name=\"link3\">\r\n\t\t<inertial>\r\n\t\t\t<mass value=\"0.0\"/>\r\n\t\t\t<origin xyz=\"0 0 0\" rpy=\"0 -0 0\"/>\r\n\t\t\t<inertia ixx=\"0.0\" ixy=\"0\" ixz=\"0\" iyy=\"0.0\" iyz=\"0\" izz=\"0.0\"/>\r\n\t\t</inertial>\r\n\t</link>\r\n</robot>\r\npegua@pareto:~$ gz sdf -p doubleFixed.urdf\r\nError [Param.cc:462] Unable to set value [-nan -nan -nan 0 -0 0] for key[pose]\r\n<sdf version='1.5'>\r\n  <model name='exampleRobot'>\r\n    <link name='link1'>\r\n      <pose>0 0 0 0 -0 0</pose>\r\n      <inertial>\r\n        <pose>0 0 0 0 -0 0</pose>\r\n        <mass>25.49</mass>\r\n        <inertia>\r\n          <ixx>nan</ixx>\r\n          <ixy>nan</ixy>\r\n          <ixz>nan</ixz>\r\n          <iyy>nan</iyy>\r\n          <iyz>nan</iyz>\r\n          <izz>nan</izz>\r\n        </inertia>\r\n      </inertial>\r\n    </link>\r\n  </model>\r\n</sdf>\r\n~~~\r\n\r\n", "markup": "markdown", "html": "<p>If two  consecutive fixed joints are present in a URDF model, and both joints have a massless child, the conversion to SDF is broken. In particular the COM of the resulting link is reset to zero (observed in Linux) or set to NaN (observed on OS X). </p>\n<p>To reproduce the issue, call the <code>gz sdf -p</code> program in the attached urdf files:</p>\n<p>Working model, with a single fixed joint:</p>\n<div class=\"codehilite\"><pre><span></span>pegua@pareto:~$ cat singleFixed.urdf \n<span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;robot</span> <span class=\"na\">name=</span><span class=\"s\">&quot;exampleRobot&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n            <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;25.49&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;10.0 20.0 30.0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 -0 0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;0.50297&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;0.332368&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;0.479884&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint1&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;fixed&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 -0 0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;axis</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 1&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;parent</span> <span class=\"na\">link=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;child</span> <span class=\"na\">link=</span><span class=\"s\">&quot;link2&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;limit</span> <span class=\"na\">effort=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"na\">velocity=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"na\">lower=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">upper=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/joint&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link2&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n            <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 -0 0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;0.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"c\">&lt;!--</span>\n<span class=\"c\">    &lt;joint name=&quot;joint2&quot; type=&quot;fixed&quot;&gt;</span>\n<span class=\"c\">        &lt;origin xyz=&quot;0 0 0&quot; rpy=&quot;1.57079637 -8.74227766e-08 3.14159274&quot;/&gt;</span>\n<span class=\"c\">        &lt;axis xyz=&quot;0 0 1&quot;/&gt;</span>\n<span class=\"c\">        &lt;parent link=&quot;link2&quot;/&gt;</span>\n<span class=\"c\">        &lt;child link=&quot;link3&quot;/&gt;</span>\n<span class=\"c\">        &lt;limit effort=&quot;-1&quot; velocity=&quot;-1&quot; lower=&quot;0&quot; upper=&quot;0&quot;/&gt;</span>\n<span class=\"c\">    &lt;/joint&gt;</span>\n<span class=\"c\">    &lt;link name=&quot;link3&quot;&gt;</span>\n<span class=\"c\">        &lt;inertial&gt;</span>\n<span class=\"c\">            &lt;mass value=&quot;0.0&quot;/&gt;</span>\n<span class=\"c\">            &lt;origin xyz=&quot;0 0 0&quot; rpy=&quot;0 -0 0&quot;/&gt;</span>\n<span class=\"c\">            &lt;inertia ixx=&quot;0.0&quot; ixy=&quot;0&quot; ixz=&quot;0&quot; iyy=&quot;0.0&quot; iyz=&quot;0&quot; izz=&quot;0.0&quot;/&gt;</span>\n<span class=\"c\">        &lt;/inertial&gt;</span>\n<span class=\"c\">    &lt;/link&gt;</span>\n<span class=\"c\">    --&gt;</span>\n<span class=\"nt\">&lt;/robot&gt;</span>\npegua@pareto:~$ gz sdf -p singleFixed.urdf \n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&#39;1.5&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&#39;exampleRobot&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&#39;link1&#39;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;inertial&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>10 20 30 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;mass&gt;</span>25.49<span class=\"nt\">&lt;/mass&gt;</span>\n        <span class=\"nt\">&lt;inertia&gt;</span>\n          <span class=\"nt\">&lt;ixx&gt;</span>0.50297<span class=\"nt\">&lt;/ixx&gt;</span>\n          <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n          <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n          <span class=\"nt\">&lt;iyy&gt;</span>0.332368<span class=\"nt\">&lt;/iyy&gt;</span>\n          <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;izz&gt;</span>0.479884<span class=\"nt\">&lt;/izz&gt;</span>\n        <span class=\"nt\">&lt;/inertia&gt;</span>\n      <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>Broken model, with two fixed joints (note the COM pose):</p>\n<div class=\"codehilite\"><pre><span></span>pegua@pareto:~$ cat doubleFixed.urdf \n<span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;robot</span> <span class=\"na\">name=</span><span class=\"s\">&quot;exampleRobot&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n            <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;25.49&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;10.0 20.0 30.0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 -0 0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;0.50297&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;0.332368&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;0.479884&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint1&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;fixed&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 -0 0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;axis</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 1&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;parent</span> <span class=\"na\">link=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;child</span> <span class=\"na\">link=</span><span class=\"s\">&quot;link2&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;limit</span> <span class=\"na\">effort=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"na\">velocity=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"na\">lower=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">upper=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/joint&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link2&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n            <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 -0 0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;0.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n    <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint2&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;fixed&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;1.57079637 -8.74227766e-08 3.14159274&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;axis</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 1&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;parent</span> <span class=\"na\">link=</span><span class=\"s\">&quot;link2&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;child</span> <span class=\"na\">link=</span><span class=\"s\">&quot;link3&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;limit</span> <span class=\"na\">effort=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"na\">velocity=</span><span class=\"s\">&quot;-1&quot;</span> <span class=\"na\">lower=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">upper=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/joint&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link3&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;inertial&gt;</span>\n            <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;origin</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 -0 0&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;0.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/robot&gt;</span>\npegua@pareto:~$ gz sdf -p doubleFixed.urdf\nError [Param.cc:462] Unable to set value [-nan -nan -nan 0 -0 0] for key[pose]\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&#39;1.5&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&#39;exampleRobot&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&#39;link1&#39;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;inertial&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;mass&gt;</span>25.49<span class=\"nt\">&lt;/mass&gt;</span>\n        <span class=\"nt\">&lt;inertia&gt;</span>\n          <span class=\"nt\">&lt;ixx&gt;</span>nan<span class=\"nt\">&lt;/ixx&gt;</span>\n          <span class=\"nt\">&lt;ixy&gt;</span>nan<span class=\"nt\">&lt;/ixy&gt;</span>\n          <span class=\"nt\">&lt;ixz&gt;</span>nan<span class=\"nt\">&lt;/ixz&gt;</span>\n          <span class=\"nt\">&lt;iyy&gt;</span>nan<span class=\"nt\">&lt;/iyy&gt;</span>\n          <span class=\"nt\">&lt;iyz&gt;</span>nan<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;izz&gt;</span>nan<span class=\"nt\">&lt;/izz&gt;</span>\n        <span class=\"nt\">&lt;/inertia&gt;</span>\n      <span class=\"nt\">&lt;/inertial&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "state": "new", "version": null, "edited_on": null, "created_on": "2015-09-22T12:42:21.032128+00:00", "milestone": null, "updated_on": "2018-09-24T14:17:25.571954+00:00", "type": "issue", "id": 105}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/106/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/106.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/106/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/106/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/106/gripper-tag-has-no-documentation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/106/vote"}}, "reporter": {"display_name": "thenerd247", "uuid": "{6f6f8307-41cf-416d-9a3f-d2eabc0936bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6f6f8307-41cf-416d-9a3f-d2eabc0936bf%7D"}, "html": {"href": "https://bitbucket.org/%7B6f6f8307-41cf-416d-9a3f-d2eabc0936bf%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fbfa0ea38b7467fa403dbbf3f6ed3403d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsT-2.png"}}, "nickname": "thenerd247", "type": "user", "account_id": "557058:e76a085b-ff1d-4701-88d3-81edeaa4fe1d"}, "title": "Gripper Tag Has no Documentation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The gripper tag documentation for the model tag has no descriptions on the documentation [website][1]. \r\n\r\n[1]: http://sdformat.org/spec?ver=1.5&elem=model#model_gripper", "markup": "markdown", "html": "<p>The gripper tag documentation for the model tag has no descriptions on the documentation <a href=\"http://sdformat.org/spec?ver=1.5&amp;elem=model#model_gripper\">website</a>. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-11-17T19:25:12.439177+00:00", "milestone": null, "updated_on": "2015-11-30T22:15:02.116124+00:00", "type": "issue", "id": 106}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/107/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/107.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/107/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/107/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/107/check-conversion-scripts"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/107/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Check conversion scripts.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Write test to check the conversion scripts.\r\n\r\nSee [here](#!/osrf/sdformat/pull-requests/244/fix-16-converter/diff#comment-12347249) for more info.", "markup": "markdown", "html": "<p>Write test to check the conversion scripts.</p>\n<p>See <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/pull-requests/244/fix-16-converter/diff#comment-12347249\" rel=\"nofollow\">here</a> for more info.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2015-12-01T22:42:41.541471+00:00", "milestone": null, "updated_on": "2015-12-01T22:48:53.943527+00:00", "type": "issue", "id": 107}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/108/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/108.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/108/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/108/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/108/unit_param_test-failures-on-ubuntu-wily"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/108/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "UNIT_Param_TEST failures on ubuntu wily", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Two parts of `UNIT_Param_TEST` are failing on ubuntu wily. They are related to parsing hexadecimal strings as floating point numbers.\r\n\r\n* http://build.osrfoundation.org/job/sdformat-ci-default-wily-amd64/7/testReport/junit/%28root%29/Param/HexFloat/\r\n* http://build.osrfoundation.org/job/sdformat-ci-default-wily-amd64/7/testReport/junit/%28root%29/Param/HexDouble/\r\n\r\nThere is a [comment](#!/osrf/sdformat/src/e720a29dc3df958af3101297f9fb72c27f4bd62e/src/Param_TEST.cc?at=default&fileviewer=file-view-default#Param_TEST.cc-150) that says boost 1.58 is required (it works on osx with boost 1.58), and wily is using boost 1.58, but the test still fails.", "markup": "markdown", "html": "<p>Two parts of <code>UNIT_Param_TEST</code> are failing on ubuntu wily. They are related to parsing hexadecimal strings as floating point numbers.</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/sdformat-ci-default-wily-amd64/7/testReport/junit/%28root%29/Param/HexFloat/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/sdformat-ci-default-wily-amd64/7/testReport/junit/%28root%29/Param/HexFloat/</a></li>\n<li><a href=\"http://build.osrfoundation.org/job/sdformat-ci-default-wily-amd64/7/testReport/junit/%28root%29/Param/HexDouble/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/sdformat-ci-default-wily-amd64/7/testReport/junit/%28root%29/Param/HexDouble/</a></li>\n</ul>\n<p>There is a <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/e720a29dc3df958af3101297f9fb72c27f4bd62e/src/Param_TEST.cc?at=default&amp;fileviewer=file-view-default#Param_TEST.cc-150\" rel=\"nofollow\">comment</a> that says boost 1.58 is required (it works on osx with boost 1.58), and wily is using boost 1.58, but the test still fails.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-12-03T21:43:44.843880+00:00", "milestone": null, "updated_on": "2017-02-16T22:05:02.959051+00:00", "type": "issue", "id": 108}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/109/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/109.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/109/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/109/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/109/integration_nested_model-failure-on-fedora"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/109/vote"}}, "reporter": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "title": "INTEGRATION_nested_model failure on Fedora 23", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I'm trying to build sdformat-3.6.0 on Fedora 23, and I noticed the INTEGRATION_nested_model test is failing.  gtest output:\r\n\r\n```\r\n$ ./test/integration/INTEGRATION_nested_model\r\nRunning main() from gtest_main.cc\r\n[==========] Running 2 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 2 tests from NestedModel\r\n[ RUN      ] NestedModel.NestedModel\r\nWarning [parser.cc:766] XML Element[model], child of element[model] not defined in SDF. Ignoring[model]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.\r\n/home/rich/Source/sdformat-3.6.0/test/integration/nested_model.cc:71: Failure\r\nValue of: modelElem->HasElement(\"model\")\r\n  Actual: false\r\nExpected: true\r\nError [Element.cc:683] Missing element description for [model]\r\nINTEGRATION_nested_model: /usr/include/boost/smart_ptr/shared_ptr.hpp:648: typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = sdf::Element; typename boost::detail::sp_member_access<T>::type = sdf::Element*]: Assertion `px != 0' failed.\r\nAborted (core dumped)\r\n```\r\n\r\nIt looks like sdf/1.5/model.sdf contains a description for nested models, so I'm not sure what's going on here.", "markup": "markdown", "html": "<p>I'm trying to build sdformat-3.6.0 on Fedora 23, and I noticed the INTEGRATION_nested_model test is failing.  gtest output:</p>\n<div class=\"codehilite\"><pre><span></span>$ ./test/integration/INTEGRATION_nested_model\nRunning main<span class=\"o\">()</span> from gtest_main.cc\n<span class=\"o\">[==========]</span> Running <span class=\"m\">2</span> tests from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">2</span> tests from NestedModel\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> NestedModel.NestedModel\nWarning <span class=\"o\">[</span>parser.cc:766<span class=\"o\">]</span> XML Element<span class=\"o\">[</span>model<span class=\"o\">]</span>, child of element<span class=\"o\">[</span>model<span class=\"o\">]</span> not defined in SDF. Ignoring<span class=\"o\">[</span>model<span class=\"o\">]</span>. You may have an incorrect SDF file, or an sdformat version that doesn<span class=\"s1\">&#39;t support this element.</span>\n<span class=\"s1\">/home/rich/Source/sdformat-3.6.0/test/integration/nested_model.cc:71: Failure</span>\n<span class=\"s1\">Value of: modelElem-&gt;HasElement(&quot;model&quot;)</span>\n<span class=\"s1\">  Actual: false</span>\n<span class=\"s1\">Expected: true</span>\n<span class=\"s1\">Error [Element.cc:683] Missing element description for [model]</span>\n<span class=\"s1\">INTEGRATION_nested_model: /usr/include/boost/smart_ptr/shared_ptr.hpp:648: typename boost::detail::sp_member_access&lt;T&gt;::type boost::shared_ptr&lt;T&gt;::operator-&gt;() const [with T = sdf::Element; typename boost::detail::sp_member_access&lt;T&gt;::type = sdf::Element*]: Assertion `px != 0&#39;</span> failed.\nAborted <span class=\"o\">(</span>core dumped<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>It looks like sdf/1.5/model.sdf contains a description for nested models, so I'm not sure what's going on here.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-12-10T05:10:16.197827+00:00", "milestone": null, "updated_on": "2016-01-05T01:58:21.765448+00:00", "type": "issue", "id": 109}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/110/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/110.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/110/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/110/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/110/update-to-urdfdom-04"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/110/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Update to urdfdom 0.4", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Update to urdfdom 0.4 once it is released.", "markup": "markdown", "html": "<p>Update to urdfdom 0.4 once it is released.</p>", "type": "rendered"}, "assignee": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "state": "new", "version": null, "edited_on": null, "created_on": "2016-01-15T00:48:25.411090+00:00", "milestone": null, "updated_on": "2017-03-01T15:06:44.481579+00:00", "type": "issue", "id": 110}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/111/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/111.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/111/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/111/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/111/possible-null-de-reference-in-parser_urdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/111/vote"}}, "reporter": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "title": "Possible null de-reference in parser_urdf", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I was playing with clang's scan-build, and it turned up a situation where a null pointer could be derefenced and cause a segfault.\r\n\r\nIn ```\turdf::Vector3 ParseVector3(TiXmlNode *_key, double _scale)```, if _key is null, the first ```if``` statement is skipped, and the function jumps to the following line which tries to call Value() from the null pointer:\r\n\r\n``` sdferr << \"key[\" << _key->Value() << \"] does not contain a Vector3\\n\";```", "markup": "markdown", "html": "<p>I was playing with clang's scan-build, and it turned up a situation where a null pointer could be derefenced and cause a segfault.</p>\n<p>In <code>urdf::Vector3 ParseVector3(TiXmlNode *_key, double _scale)</code>, if _key is null, the first <code>if</code> statement is skipped, and the function jumps to the following line which tries to call Value() from the null pointer:</p>\n<p><code>sdferr &lt;&lt; \"key[\" &lt;&lt; _key-&gt;Value() &lt;&lt; \"] does not contain a Vector3\\n\";</code></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-01-30T15:45:30.575317+00:00", "milestone": null, "updated_on": "2017-02-16T22:23:29.262076+00:00", "type": "issue", "id": 111}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/112/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/112.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/112/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/112/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/112/map-elements-under-urdf-extension-directly"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/112/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "map elements under urdf extension <gazebo> directly under <model>", "component": null, "votes": 1, "watches": 2, "content": {"raw": "inspired by [this issue](http://answers.gazebosim.org/question/12611/urdf-to-gazebo-differs-from-urdf-to-sdf-to-gazebo/).  For example, following `pose` block in urdf:\r\n\r\n~~~\r\n<gazebo>\r\n  <!-- robot model offset -->\r\n  <pose>0 0 0.5 0 0 0</pose>\r\n</gazebo>\r\n~~~\r\n\r\nwill go directly under SDF model as:\r\n\r\n~~~\r\n<model name=\"...\">\r\n  <!-- robot model offset -->\r\n  <pose>0 0 0.5 0 0 0</pose>\r\n</model>\r\n~~~", "markup": "markdown", "html": "<p>inspired by <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/12611/urdf-to-gazebo-differs-from-urdf-to-sdf-to-gazebo/\" rel=\"nofollow\">this issue</a>.  For example, following <code>pose</code> block in urdf:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;gazebo&gt;</span>\n  <span class=\"c\">&lt;!-- robot model offset --&gt;</span>\n  <span class=\"nt\">&lt;pose&gt;</span>0 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n<span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>will go directly under SDF model as:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;...&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"c\">&lt;!-- robot model offset --&gt;</span>\n  <span class=\"nt\">&lt;pose&gt;</span>0 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-02-18T08:27:42.973822+00:00", "milestone": null, "updated_on": "2016-02-18T08:29:22.910336+00:00", "type": "issue", "id": 112}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/113/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/113.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/113/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/113/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/113/parsing-from-urdf-to-sdf-does-not-handle"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/113/vote"}}, "reporter": {"display_name": "Alessandro Tondo", "uuid": "{e784db86-294e-4d04-9625-965cd9f37dbb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be784db86-294e-4d04-9625-965cd9f37dbb%7D"}, "html": {"href": "https://bitbucket.org/%7Be784db86-294e-4d04-9625-965cd9f37dbb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:b35dbee2-c8ba-4f9f-b5bd-5e4843679c8a/23129b89-cd7e-4b5c-af4b-4d251e300dcf/128"}}, "nickname": "alextoind", "type": "user", "account_id": "557058:b35dbee2-c8ba-4f9f-b5bd-5e4843679c8a"}, "title": "Parsing from URDF to SDF does not handle elements under <visual> or <collision> tags", "component": null, "votes": 4, "watches": 5, "content": {"raw": "I have created a simple package to show a strange behaviour when parsing from URDF to SDF with Gazebo6 or Gazebo7 and ROS Jade (no problem with Gazebo5).\r\n\r\nThis is the example with a full description: https://bitbucket.org/alextoind/a_buggy_robot.\r\n\r\nIt seems that the problem affects only those URDF elements under `<gazebo>` tags which would end under the `<visual>` or `<collision>` SDF elements.", "markup": "markdown", "html": "<p>I have created a simple package to show a strange behaviour when parsing from URDF to SDF with Gazebo6 or Gazebo7 and ROS Jade (no problem with Gazebo5).</p>\n<p>This is the example with a full description: <a href=\"https://bitbucket.org/alextoind/a_buggy_robot\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/alextoind/a_buggy_robot</a>.</p>\n<p>It seems that the problem affects only those URDF elements under <code>&lt;gazebo&gt;</code> tags which would end under the <code>&lt;visual&gt;</code> or <code>&lt;collision&gt;</code> SDF elements.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-03-08T16:59:39.844852+00:00", "milestone": null, "updated_on": "2017-03-08T14:55:06.366758+00:00", "type": "issue", "id": 113}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/114/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/114.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/114/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/114/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/114/windows-does-not-parse-hex-values"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/114/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Windows does not parse hex values", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It seems that `std::stof(0x01)`  and other similar uses of `std::stof` will always return zero.\r\n\r\nSee pull request #261 for disabled tests.", "markup": "markdown", "html": "<p>It seems that <code>std::stof(0x01)</code>  and other similar uses of <code>std::stof</code> will always return zero.</p>\n<p>See <a href=\"#!/osrf/sdformat/pull-requests/261/windows-tests\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #261</a> for disabled tests.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-03-16T18:18:24.318249+00:00", "milestone": null, "updated_on": "2016-03-16T18:18:24.318249+00:00", "type": "issue", "id": 114}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/115/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/115.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/115/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/115/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/115/find-ign-math-package-fails-in-windows"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/115/vote"}}, "reporter": {"display_name": "XB32Z", "uuid": "{256c5193-3bf3-4409-936c-3dd8b397ede3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B256c5193-3bf3-4409-936c-3dd8b397ede3%7D"}, "html": {"href": "https://bitbucket.org/%7B256c5193-3bf3-4409-936c-3dd8b397ede3%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/8feaac46b6e59fd8b5553b0a08b1a555d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsX-3.png"}}, "nickname": "XB32Z", "type": "user", "account_id": "557058:5cdc187a-ac66-4d49-a809-fc8d5c36b512"}, "title": "Find ign math package fails in windows", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi, \r\nUsing windows, when including SDFormat in a project (gazebo), cmake uses the SDFormatConfig.cmake file. line 25 it is written ignition-math which fails because the config.cmake file of ignition math is called ignition-math2.\r\nI would change that line to:\r\nfind_package(ignition-math2)\r\n\r\nThank you,", "markup": "markdown", "html": "<p>Hi, \nUsing windows, when including SDFormat in a project (gazebo), cmake uses the SDFormatConfig.cmake file. line 25 it is written ignition-math which fails because the config.cmake file of ignition math is called ignition-math2.\nI would change that line to:\nfind_package(ignition-math2)</p>\n<p>Thank you,</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2016-03-21T10:19:07.482091+00:00", "milestone": null, "updated_on": "2016-03-21T19:40:36.009982+00:00", "type": "issue", "id": 115}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/116/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/116.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/116/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/116/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/116/windows-test-failures-in-jenkins-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/116/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Windows test failures in jenkins when writing console messages", "component": null, "votes": 0, "watches": 1, "content": {"raw": "pull request #261 has fixed many windows tests, but there are still quite a few failing with the following message:\r\n\r\n~~~\r\nunknown file\r\nC++ exception with description \"device or resource busy: device or resource busy\" thrown in the test body.\r\n~~~\r\n\r\n* http://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/63/testReport/\r\n\r\nOne of the failing tests is the console test:\r\n\r\n* http://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/62/testReport/%28root%29/Console/Messages/\r\n\r\nI'm guessing that all the test failures are related to the failure of the console message test.", "markup": "markdown", "html": "<p><a href=\"#!/osrf/sdformat/pull-requests/261/windows-tests\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #261</a> has fixed many windows tests, but there are still quite a few failing with the following message:</p>\n<div class=\"codehilite\"><pre><span></span>unknown file\nC++ exception with description &quot;device or resource busy: device or resource busy&quot; thrown in the test body.\n</pre></div>\n\n\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/63/testReport/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/63/testReport/</a></li>\n</ul>\n<p>One of the failing tests is the console test:</p>\n<ul>\n<li><a href=\"http://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/62/testReport/%28root%29/Console/Messages/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/62/testReport/%28root%29/Console/Messages/</a></li>\n</ul>\n<p>I'm guessing that all the test failures are related to the failure of the console message test.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-04-01T18:36:00.411110+00:00", "milestone": null, "updated_on": "2016-06-17T06:34:54.377708+00:00", "type": "issue", "id": 116}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/117/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/117.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/117/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/117/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/117/update-changelog-for-410"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/117/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Update changelog for 4.1.0", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Version 4.1.0 was released and the changelog doesn't reflect all the pull requests:\r\n\r\n#!/osrf/sdformat/branches/compare/sdformat4_4.1.0%0Dsdformat4_4.0.0#pull-requests\r\n\r\n#!/osrf/sdformat/src/sdformat4_4.1.0/Changelog.md", "markup": "markdown", "html": "<p>Version 4.1.0 was released and the changelog doesn't reflect all the pull requests:</p>\n<p><a href=\"#!/osrf/sdformat/branches/compare/sdformat4_4.1.0%0Dsdformat4_4.0.0#pull-requests\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/branches/compare/sdformat4_4.1.0%0Dsdformat4_4.0.0#pull-requests</a></p>\n<p><a href=\"#!/osrf/sdformat/src/sdformat4_4.1.0/Changelog.md\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/sdformat4_4.1.0/Changelog.md</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-04-01T19:54:11.044614+00:00", "milestone": null, "updated_on": "2016-04-01T19:54:11.044614+00:00", "type": "issue", "id": 117}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/118/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/118.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/118/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/118/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/118/rfc-convert-xmlschemarb-to-c"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/118/vote"}}, "reporter": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "title": "RFC: Convert xmlschema.rb to c++", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I had some spare time a few months ago and managed to convert xmlschema.rb to c++ using tinyxml.  I was wondering if there's any interest from you guys in supporting such a switch.\r\n\r\nThe tinyxml-based C++ xmlschema is basically a line-for-line port of the existing ruby script to C++.  It provides the following:\r\n\r\nBenefits:\r\n\r\n* No build-time dependency on ruby (might be nice for Windows)\r\n* Runs faster than the ruby schema generator\r\n\r\nDrawbacks:\r\n\r\n* Lose dynamic features ruby provides\r\n* Whitespace in CDATA (descriptions) isn't preserved when converting from .sdf files\r\n\r\nThe lossy treatment of whitespace seems to be a [well-known](http://stackoverflow.com/questions/11450442/multiple-whitespaces-removed-from-xml-when-they-should-not-be) attribute of tinyxml, and they recommend that tinyxml2 should be used instead (in general, and also because of the whitespace handling.)\r\n\r\nI ended up making a second version of xmlschema using tinyxml2, and was able to get identical output to the ruby scripts.  It wasn't terribly difficult to go from tinyxml->tinyxml2, but using a different version of tinyxml than sdformat uses seemed to be kind of silly, and I didn't have enough time to try to port sdformat to tinyxml2.\r\n\r\nIf there's interest in either or both versions of the code I'll clean it up and create PRs, otherwise you can go ahead and close this bug.", "markup": "markdown", "html": "<p>I had some spare time a few months ago and managed to convert xmlschema.rb to c++ using tinyxml.  I was wondering if there's any interest from you guys in supporting such a switch.</p>\n<p>The tinyxml-based C++ xmlschema is basically a line-for-line port of the existing ruby script to C++.  It provides the following:</p>\n<p>Benefits:</p>\n<ul>\n<li>No build-time dependency on ruby (might be nice for Windows)</li>\n<li>Runs faster than the ruby schema generator</li>\n</ul>\n<p>Drawbacks:</p>\n<ul>\n<li>Lose dynamic features ruby provides</li>\n<li>Whitespace in CDATA (descriptions) isn't preserved when converting from .sdf files</li>\n</ul>\n<p>The lossy treatment of whitespace seems to be a <a data-is-external-link=\"true\" href=\"http://stackoverflow.com/questions/11450442/multiple-whitespaces-removed-from-xml-when-they-should-not-be\" rel=\"nofollow\">well-known</a> attribute of tinyxml, and they recommend that tinyxml2 should be used instead (in general, and also because of the whitespace handling.)</p>\n<p>I ended up making a second version of xmlschema using tinyxml2, and was able to get identical output to the ruby scripts.  It wasn't terribly difficult to go from tinyxml-&gt;tinyxml2, but using a different version of tinyxml than sdformat uses seemed to be kind of silly, and I didn't have enough time to try to port sdformat to tinyxml2.</p>\n<p>If there's interest in either or both versions of the code I'll clean it up and create PRs, otherwise you can go ahead and close this bug.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-04-03T23:09:07.603777+00:00", "milestone": null, "updated_on": "2016-04-06T00:06:35.982049+00:00", "type": "issue", "id": 118}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/119/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/119.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/119/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/119/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/119/default-values-do-not-show-up-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/119/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "default values do not show up on sdformat.org", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Not sure where to issue this, but for example, see\r\n\r\nhttp://www.sdformat.org/spec?ver=1.6&elem=link\r\n\r\ndefault values are empty for all fields.\r\n\r\nCurrently, users have to look at [sdf code](#!/osrf/sdformat/src/1fa2189b5cf1ae8fe382fa3f0b5b2ce9d778782f/sdf/1.6/link.sdf?at=default&fileviewer=file-view-default) to see what default values are.", "markup": "markdown", "html": "<p>Not sure where to issue this, but for example, see</p>\n<p><a href=\"http://www.sdformat.org/spec?ver=1.6&amp;elem=link\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.sdformat.org/spec?ver=1.6&amp;elem=link</a></p>\n<p>default values are empty for all fields.</p>\n<p>Currently, users have to look at <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/1fa2189b5cf1ae8fe382fa3f0b5b2ce9d778782f/sdf/1.6/link.sdf?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">sdf code</a> to see what default values are.</p>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": null, "edited_on": null, "created_on": "2016-04-06T18:51:55.659004+00:00", "milestone": null, "updated_on": "2016-04-07T05:17:41.836773+00:00", "type": "issue", "id": 119}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/120/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/120.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/120/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/120/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/120/extension-reference-name-checking-only"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/120/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "extension reference name checking only checks alliteration", "component": null, "votes": 0, "watches": 1, "content": {"raw": "#!/osrf/sdformat/src/1fa2189b5cf1ae8fe382fa3f0b5b2ce9d778782f/src/parser_urdf.cc?at=default&fileviewer=file-view-default#parser_urdf.cc-1336\r\n\r\n~~~\r\n<gazebo reference=\"link_\">\r\n  ...\r\n</gazebo>\r\n~~~\r\n\r\nwill match any link names that begin with `link_`.\r\n\r\nThis has sort of become a undocumented **feature**, but we should deprecated this behavior and do more strict checks. ", "markup": "markdown", "html": "<p><a href=\"#!/osrf/sdformat/src/1fa2189b5cf1ae8fe382fa3f0b5b2ce9d778782f/src/parser_urdf.cc?at=default&amp;fileviewer=file-view-default#parser_urdf.cc-1336\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/1fa2189b5cf1ae8fe382fa3f0b5b2ce9d778782f/src/parser_urdf.cc?at=default&amp;fileviewer=file-view-default#parser_urdf.cc-1336</a></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;link_&quot;</span><span class=\"nt\">&gt;</span>\n  ...\n<span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>will match any link names that begin with <code>link_</code>.</p>\n<p>This has sort of become a undocumented <strong>feature</strong>, but we should deprecated this behavior and do more strict checks. </p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-04-14T19:37:31.679881+00:00", "milestone": null, "updated_on": "2016-04-14T19:37:31.679881+00:00", "type": "issue", "id": 120}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/121/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/121.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/121/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/121/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/121/fix-for-double-precision-error"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/121/vote"}}, "reporter": {"display_name": "Robin Vanhove", "uuid": "{f5719cd7-c74d-4dfe-9b59-fdf8d822bf09}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf5719cd7-c74d-4dfe-9b59-fdf8d822bf09%7D"}, "html": {"href": "https://bitbucket.org/%7Bf5719cd7-c74d-4dfe-9b59-fdf8d822bf09%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21de1dc6238aaed19734cb9f74d1da1fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRV-4.png"}}, "nickname": "r0b1n", "type": "user", "account_id": "557058:0260d5b0-bd41-42ff-ac9d-6732c6bfe42a"}, "title": "Fix for double precision error", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hello,\r\n\r\nThe method sdf::Param::Get() doesn't work correctly.\r\n\r\nFor example if in a gazebo world file I enter this coordinate : \r\n```\r\n#!xml\r\n\r\n<spherical_coordinates>\r\n  <latitude_deg>43.105064510</latitude_deg>\r\n</spherical_coordinates>\r\n```\r\nthe method std::Param::Get<double>() returns *43.105100* ; that represents an error of roughly a meter !\r\n\r\n\r\nThe problem comes from the line ( include/sdf/Param.hh : 293 ), where boost::lexical_cast converts a variant (of type double) to a string, then converts it back to a double :\r\n\r\n```\r\n#!c++\r\n\r\n_value = boost::lexical_cast<T>(this->dataPtr->value);\r\n```\r\n\r\nThis [commit](https://bitbucket.org/r0b1n/sdformat/commits/d277dfbb10c1a9ac477f399d2b588f0406dea0ea) proposes a fix + unit test for the problem.\r\n\r\n\r\nThanks,\r\nRobin", "markup": "markdown", "html": "<p>Hello,</p>\n<p>The method sdf::Param::Get() doesn't work correctly.</p>\n<p>For example if in a gazebo world file I enter this coordinate : </p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;spherical_coordinates&gt;</span>\n  <span class=\"nt\">&lt;latitude_deg&gt;</span>43.105064510<span class=\"nt\">&lt;/latitude_deg&gt;</span>\n<span class=\"nt\">&lt;/spherical_coordinates&gt;</span>\n</pre></div>\n\n\n<p>the method std::Param::Get&lt;double&gt;() returns <em>43.105100</em> ; that represents an error of roughly a meter !</p>\n<p>The problem comes from the line ( include/sdf/Param.hh : 293 ), where boost::lexical_cast converts a variant (of type double) to a string, then converts it back to a double :</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">_value</span> <span class=\"o\">=</span> <span class=\"n\">boost</span><span class=\"o\">::</span><span class=\"n\">lexical_cast</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">value</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>This <a data-is-external-link=\"true\" href=\"https://bitbucket.org/r0b1n/sdformat/commits/d277dfbb10c1a9ac477f399d2b588f0406dea0ea\" rel=\"nofollow\">commit</a> proposes a fix + unit test for the problem.</p>\n<p>Thanks,\nRobin</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-05-02T18:09:32.397633+00:00", "milestone": null, "updated_on": "2016-05-19T18:10:31.321820+00:00", "type": "issue", "id": 121}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/122/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/122.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/122/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/122/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/122/cmake-or-nmake-not-producing-package"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/122/vote"}}, "reporter": {"display_name": "Aaron Clauson", "uuid": "{80d9ee60-d587-47a9-baa5-5005304756a7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D"}, "html": {"href": "https://bitbucket.org/%7B80d9ee60-d587-47a9-baa5-5005304756a7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a91a9c7849303cad7efa3423f1feba30d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-5.png"}}, "nickname": "azaclauson", "type": "user", "account_id": "557058:c389a3f4-daff-47aa-8c04-b81dd4520568"}, "title": "cmake or nmake not producing package config", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I'm mucking around with building ign-math, sdformat and gazebo on Windows. I'm using cmake 3.5 and the visual studio 2013 x64 tool chain. I've pulled the latest changes for ign-math, sdformat and gazebo.\r\n\r\nThe issue I've got is that after successfully running through the configure Debug, nmake & nmake install steps for each of ign-math and sdformat the \"..\\configure Debug\" in the gazebo build directory always fails with a cmake error of:\r\n\r\n\"Missing: SDF version >=4.1.0. Required for reading and writing SDF files.\"\r\n\r\nUnfortunately I'm not skilled enough in cmake to work out why the package resolution for sdf is failing. The sdf build is actually good and if I manually specify the library and include directories in the gazebo configure.bat file it will work.\r\n\r\nOne thing I did spot is that there is a cmake direcrtory in ign-math\\build\\install\\Debug\\CMake which looks like it is holding the package resolution files cmake is after. There is no sdformat\\build\\install\\Debug\\CMake directory so perhaps there is a step missing in the sdformat make?", "markup": "markdown", "html": "<p>I'm mucking around with building ign-math, sdformat and gazebo on Windows. I'm using cmake 3.5 and the visual studio 2013 x64 tool chain. I've pulled the latest changes for ign-math, sdformat and gazebo.</p>\n<p>The issue I've got is that after successfully running through the configure Debug, nmake &amp; nmake install steps for each of ign-math and sdformat the \"..\\configure Debug\" in the gazebo build directory always fails with a cmake error of:</p>\n<p>\"Missing: SDF version &gt;=4.1.0. Required for reading and writing SDF files.\"</p>\n<p>Unfortunately I'm not skilled enough in cmake to work out why the package resolution for sdf is failing. The sdf build is actually good and if I manually specify the library and include directories in the gazebo configure.bat file it will work.</p>\n<p>One thing I did spot is that there is a cmake direcrtory in ign-math\\build\\install\\Debug\\CMake which looks like it is holding the package resolution files cmake is after. There is no sdformat\\build\\install\\Debug\\CMake directory so perhaps there is a step missing in the sdformat make?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2016-05-31T12:53:06.376264+00:00", "milestone": null, "updated_on": "2019-08-08T19:48:48.957381+00:00", "type": "issue", "id": 122}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/123/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/123.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/123/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/123/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/123/choosing-models-with-more-recent-sdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/123/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Choosing models with more recent sdf version", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There is logic in [parser.cc](#!/osrf/sdformat/src/0202c921b3ba182dd604b8339ddfb29ff114d932/src/parser.cc?fileviewer=file-view-default#parser.cc-630) for choosing which sdf version of a model to use when a model is specified with the `<include><uri>model://` syntax. There is similar logic in gazebo that was updated in [gazebo pull request 2207](https://bitbucket.org/osrf/gazebo/pull-requests/2207/semantic_version_7/diff#Lgazebo/common/ModelDatabase.ccF623T626) and should be propagated to sdformat.", "markup": "markdown", "html": "<p>There is logic in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/0202c921b3ba182dd604b8339ddfb29ff114d932/src/parser.cc?fileviewer=file-view-default#parser.cc-630\" rel=\"nofollow\">parser.cc</a> for choosing which sdf version of a model to use when a model is specified with the <code>&lt;include&gt;&lt;uri&gt;model://</code> syntax. There is similar logic in gazebo that was updated in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2207/semantic_version_7/diff#Lgazebo/common/ModelDatabase.ccF623T626\" rel=\"nofollow\">gazebo pull request 2207</a> and should be propagated to sdformat.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-03T01:09:13.636533+00:00", "milestone": null, "updated_on": "2017-03-16T17:35:06.217771+00:00", "type": "issue", "id": 123}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/124/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/124.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/124/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/124/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/124/make-link-reference-frame-relative-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/124/vote"}}, "reporter": {"display_name": "brian soe", "uuid": "{1304c393-d2c2-4bcf-b6f5-a6bcaf67335e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D"}, "html": {"href": "https://bitbucket.org/%7B1304c393-d2c2-4bcf-b6f5-a6bcaf67335e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b14bae67ccc0a2fc9514a6786af49460d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsBS-4.png"}}, "nickname": "bsoe", "type": "user", "account_id": "557058:51a227ab-88a4-46f1-98ed-310ba4ac1d33"}, "title": "Make link reference frame relative to child joint", "component": null, "votes": 1, "watches": 3, "content": {"raw": "Joint's can be defined relative to the parent link, with <use_parent_model_frame>.\r\nIt would be convenient to add a similar tag to the links, so the link pose can be defined relative to the parent joint. This would mirror the format of URDF.\r\n\r\nRight, now to get this behavior, a frame must be added to every link and joint to propagate the reference frames, which is a bit messy and prone to user mistakes.", "markup": "markdown", "html": "<p>Joint's can be defined relative to the parent link, with &lt;use_parent_model_frame&gt;.\nIt would be convenient to add a similar tag to the links, so the link pose can be defined relative to the parent joint. This would mirror the format of URDF.</p>\n<p>Right, now to get this behavior, a frame must be added to every link and joint to propagate the reference frames, which is a bit messy and prone to user mistakes.</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": null, "edited_on": null, "created_on": "2016-06-10T21:35:40.698799+00:00", "milestone": null, "updated_on": "2016-06-11T03:23:02.282738+00:00", "type": "issue", "id": 124}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/125/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/125.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/125/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/125/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/125/loss-of-precision-when-converting-sdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/125/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Loss of precision when converting sdf files", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We recently noticed some losses of precision when converting sdf files, and the cause may be that [ignition math stream operators have limited precision](https://bitbucket.org/ignitionrobotics/ign-math/issues/47/stream-operators-have-low-precision). This is not a problem when stream operators are only used for printing to the screen, but sdformat is using the stream operators for lexical casting, which causes much precision to be lost when converting sdf files.", "markup": "markdown", "html": "<p>We recently noticed some losses of precision when converting sdf files, and the cause may be that <a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-math/issues/47/stream-operators-have-low-precision\" rel=\"nofollow\">ignition math stream operators have limited precision</a>. This is not a problem when stream operators are only used for printing to the screen, but sdformat is using the stream operators for lexical casting, which causes much precision to be lost when converting sdf files.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-10T22:42:17.855881+00:00", "milestone": null, "updated_on": "2016-06-10T22:42:17.855881+00:00", "type": "issue", "id": 125}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/126/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/126.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/126/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/126/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/126/unresolved-symbols-when-compiling-with-qts"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/126/vote"}}, "reporter": {"display_name": "Federico Ferri", "uuid": "{477cc526-91b3-4ba1-aa68-153314ae0d06}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B477cc526-91b3-4ba1-aa68-153314ae0d06%7D"}, "html": {"href": "https://bitbucket.org/%7B477cc526-91b3-4ba1-aa68-153314ae0d06%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/70c26ef03afcef7dd3f3418097b38d80d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsFF-6.png"}}, "nickname": "f_ferri", "type": "user", "account_id": "557058:ce22a76d-9e46-4e79-a421-5813d1d651af"}, "title": "unresolved symbols when compiling with Qt's qmake", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I get undefined symbols:\r\n\r\n* sdf::readFile(std::string const&, boost::shared_ptr<sdf::SDF>)\r\n* sdf::Element::HasElement(std::string const&) const\r\n\r\nwith this minimal testcase:\r\n\r\n    #include <sdf/sdf.hh>\r\n    int main(int argc, char **argv)\r\n    {\r\n        sdf::SDFPtr sdfParsed(new sdf::SDF);\r\n        sdf::init(sdfParsed);\r\n        if(sdf::readFile(argv[1], sdfParsed))\r\n        {\r\n            sdf::ElementPtr e = sdfParsed->root;\r\n            if(e->HasElement(\"model\"))\r\n            {\r\n                std::cout << \"the SDF contains a <model> element\" << std::endl;\r\n            }\r\n        }\r\n    }\r\n\r\nNote: platform is OSX, sdformat (2.3.2) is installed via homebrew.\r\n\r\nWhen compiling with plain make, no undefined symbols.\r\n\r\nqmakefile.pro:\r\n\r\n    QT += core\r\n    TARGET = sdftest\r\n    INCLUDEPATH += \"/usr/local/Cellar/boost/1.60.0_1/include\"\r\n    INCLUDEPATH += \"/usr/local/Cellar/sdformat/2.3.2/include/sdformat-2.3\"\r\n    INCLUDEPATH += \"/usr/local/Cellar/tinyxml/2.6.2/include\"\r\n    QMAKE_LIBDIR += \"/usr/local/Cellar/sdformat/2.3.2/lib\"\r\n    LIBS += \"-lsdformat\"\r\n    SOURCES += sdftest.cpp\r\n\r\nMakefile\r\n\r\n    CXXFLAGS=-I/usr/local/Cellar/sdformat/2.3.2/include/sdformat-2.3\r\n    sdftest: sdftest.o\r\n        $(CXX) -L/usr/local/Cellar/sdformat/2.3.2/lib -lsdformat $^ -o $@", "markup": "markdown", "html": "<p>I get undefined symbols:</p>\n<ul>\n<li>sdf::readFile(std::string const&amp;, boost::shared_ptr&lt;sdf::SDF&gt;)</li>\n<li>sdf::Element::HasElement(std::string const&amp;) const</li>\n</ul>\n<p>with this minimal testcase:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;sdf/sdf.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">**</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDFPtr</span> <span class=\"n\">sdfParsed</span><span class=\"p\">(</span><span class=\"n\">new</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">SDF</span><span class=\"p\">);</span>\n    <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">sdfParsed</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">readFile</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">sdfParsed</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n        <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">sdfParsed</span><span class=\"o\">-&gt;</span><span class=\"n\">root</span><span class=\"p\">;</span>\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;model&quot;</span><span class=\"p\">))</span>\n        <span class=\"p\">{</span>\n            <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;the SDF contains a &lt;model&gt; element&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Note: platform is OSX, sdformat (2.3.2) is installed via homebrew.</p>\n<p>When compiling with plain make, no undefined symbols.</p>\n<p>qmakefile.pro:</p>\n<div class=\"codehilite\"><pre><span></span>QT += core\nTARGET = sdftest\nINCLUDEPATH += &quot;/usr/local/Cellar/boost/1.60.0_1/include&quot;\nINCLUDEPATH += &quot;/usr/local/Cellar/sdformat/2.3.2/include/sdformat-2.3&quot;\nINCLUDEPATH += &quot;/usr/local/Cellar/tinyxml/2.6.2/include&quot;\nQMAKE_LIBDIR += &quot;/usr/local/Cellar/sdformat/2.3.2/lib&quot;\nLIBS += &quot;-lsdformat&quot;\nSOURCES += sdftest.cpp\n</pre></div>\n\n\n<p>Makefile</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">CXXFLAGS</span><span class=\"o\">=</span>-I/usr/local/Cellar/sdformat/2.3.2/include/sdformat-2.3\n<span class=\"nf\">sdftest</span><span class=\"o\">:</span> <span class=\"n\">sdftest</span>.<span class=\"n\">o</span>\n    <span class=\"k\">$(</span>CXX<span class=\"k\">)</span> -L/usr/local/Cellar/sdformat/2.3.2/lib -lsdformat $^ -o <span class=\"nv\">$@</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-13T21:10:31.886509+00:00", "milestone": null, "updated_on": "2016-06-14T14:19:53.741841+00:00", "type": "issue", "id": 126}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/127/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/127.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/127/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/127/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/127/make-implicit_spring_damper-default-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/127/vote"}}, "reporter": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "title": "make implicit_spring_damper default to true", "component": null, "votes": 1, "watches": 3, "content": {"raw": "There are too many simulation problems that are caused by explicit damping. I find myself telling people repeatedly to do:\r\n\r\n~~~\r\nadd following blocks to your urdf for every joint:\r\n\r\n      <gazebo reference=\"[joint name]\">\r\n        <implicitSpringDamper>1</implicitSpringDamper>\r\n      </gazebo>\r\n~~~\r\n\r\nor\r\n\r\n~~~\r\nadd following block to your joint sdf:\r\n\r\n    <physics>\r\n        <ode>\r\n            <implicit_spring_damper>1</implicit_spring_damper>\r\n        </ode>\r\n    </physics>\r\n~~~\r\n\r\nI can't remember a time when explicit damping is preferred.", "markup": "markdown", "html": "<p>There are too many simulation problems that are caused by explicit damping. I find myself telling people repeatedly to do:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">add</span> <span class=\"n\">following</span> <span class=\"n\">blocks</span> <span class=\"n\">to</span> <span class=\"n\">your</span> <span class=\"n\">urdf</span> <span class=\"k\">for</span> <span class=\"n\">every</span> <span class=\"nl\">joint</span><span class=\"p\">:</span>\n\n      <span class=\"o\">&lt;</span><span class=\"n\">gazebo</span> <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"s\">&quot;[joint name]&quot;</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">implicitSpringDamper</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"o\">&lt;/</span><span class=\"n\">implicitSpringDamper</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;/</span><span class=\"n\">gazebo</span><span class=\"o\">&gt;</span>\n</pre></div>\n\n\n<p>or</p>\n<div class=\"codehilite\"><pre><span></span>add following block to your joint sdf:\n\n    <span class=\"nt\">&lt;physics&gt;</span>\n        <span class=\"nt\">&lt;ode&gt;</span>\n            <span class=\"nt\">&lt;implicit_spring_damper&gt;</span>1<span class=\"nt\">&lt;/implicit_spring_damper&gt;</span>\n        <span class=\"nt\">&lt;/ode&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n</pre></div>\n\n\n<p>I can't remember a time when explicit damping is preferred.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-06-21T18:28:54.703468+00:00", "milestone": null, "updated_on": "2016-06-21T18:57:48.486375+00:00", "type": "issue", "id": 127}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/128/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/128.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/128/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/128/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/128/override-arbitrary-parts-of-included"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/128/vote"}}, "reporter": {"display_name": "Dirk Thomas", "uuid": "{a8effe61-90f2-4949-89a8-9c6972071de7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba8effe61-90f2-4949-89a8-9c6972071de7%7D"}, "html": {"href": "https://bitbucket.org/%7Ba8effe61-90f2-4949-89a8-9c6972071de7%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2f77876936467715bd75258c967bcaa4d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDT-2.png"}}, "nickname": "Dirk Thomas", "type": "user", "account_id": "557058:763d049c-c4c6-4e59-85a5-2d7a8fbbdd58"}, "title": "override arbitrary parts of included models", "component": null, "votes": 3, "watches": 4, "content": {"raw": "Currently only the `pose` and the `static` flag can be overridden for an included model. It would be great if this would be possible for any element.\r\n\r\nAn example use case would be to override the visual material and give the model a different color.\r\n\r\nWithout this feature it is not possible to reuse an existing model without either:\r\n\r\n* converting it into a template (which you might not have write access to if it is a third-party model)\r\n* copy-n-paste it and then modify it (which is kind of sad)\r\n\r\nThe markup could look like this:\r\n\r\n```\r\n<include>\r\n  <uri>model://reused-model</uri>\r\n  <override>\r\n    <!-- allow anything here which is valid in a normal model -->\r\n  </override>\r\n</include>\r\n```\r\n\r\nIn order to determine if (nested) elements in the override section should be appended or actually override existing elements of the included model each tag (the tag name as well as its attributes) could be checked for equality. The override tag itself isn't necessary. The overriding elements could be direct children of `include`.", "markup": "markdown", "html": "<p>Currently only the <code>pose</code> and the <code>static</code> flag can be overridden for an included model. It would be great if this would be possible for any element.</p>\n<p>An example use case would be to override the visual material and give the model a different color.</p>\n<p>Without this feature it is not possible to reuse an existing model without either:</p>\n<ul>\n<li>converting it into a template (which you might not have write access to if it is a third-party model)</li>\n<li>copy-n-paste it and then modify it (which is kind of sad)</li>\n</ul>\n<p>The markup could look like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;include&gt;</span>\n  <span class=\"nt\">&lt;uri&gt;</span>model://reused-model<span class=\"nt\">&lt;/uri&gt;</span>\n  <span class=\"nt\">&lt;override&gt;</span>\n    <span class=\"c\">&lt;!-- allow anything here which is valid in a normal model --&gt;</span>\n  <span class=\"nt\">&lt;/override&gt;</span>\n<span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>In order to determine if (nested) elements in the override section should be appended or actually override existing elements of the included model each tag (the tag name as well as its attributes) could be checked for equality. The override tag itself isn't necessary. The overriding elements could be direct children of <code>include</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-07-13T19:34:45.378171+00:00", "milestone": null, "updated_on": "2017-06-26T22:30:59.385549+00:00", "type": "issue", "id": 128}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/129/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/129.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/129/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/129/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/129/allow-searching-for-sdf-tags-on-website"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/129/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Allow searching for SDF tags on website", "component": null, "votes": 0, "watches": 1, "content": {"raw": "See this [gazebo issue](https://bitbucket.org/osrf/gazebo/issues/79)", "markup": "markdown", "html": "<p>See this <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/79\" rel=\"nofollow\">gazebo issue</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-09-14T20:43:17.868873+00:00", "milestone": null, "updated_on": "2016-09-14T20:43:17.868873+00:00", "type": "issue", "id": 129}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/130/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/130.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/130/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/130/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/130/position-part-of-force_torque-sensor-pose"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/130/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "Position part of force_torque sensor pose is ignored and this may be confusing or impractical", "component": null, "votes": 1, "watches": 1, "content": {"raw": "**TL; DR: There is bug in Valkyrie F/T sensor model that could cause up to 20 Nm of error between the simulated F/T measure and the real one.**\r\n\r\nBack in https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc , the semantics for force_torque sensor pose tag was defined.\r\n\r\nIn particular it was decided (probably for back-compatibility) that the point with respect to which the measured torque is expressed was always the origin of the \"joint\" frame, regardless of the sensor pose and of the frame tag (see https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc#comment-9473056).\r\n\r\nPersonally I was ok with this, because I always modeled six axis force torque sensors as \"fixed\" joints (as described in https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc#comment-9485945), for which the origin of the joint frame can be freely assigned without any other constraint.\r\n\r\nHowever recently I was porting some estimation software to the Walkman robot ( https://www.walk-man.eu/ ) and I noticed that in building their SDF they choose a different option: they modeled their F/T sensors as sensors measuring the force transmitted over a non-fixed joint. The Walkman model is not public, but then I noticed that the same choice was done in the SDF of the Valkyrie robot, see for example:\r\n~~~xml\r\n    <gazebo reference=\"${joint_to_attach_sensor_to}\">\r\n      <sensor name=\"${sensorName}\" type=\"force_torque\">\r\n        <pose>${origin_xyz} ${origin_rpy}</pose>\r\n        <sensor_number id=\"${sensor_number}\" />\r\n        <node id=\"${sensor_node}\" />\r\n        <api name=\"${sensor_api}\" />\r\n        <always_on>true</always_on>\r\n        <update_rate>500.0</update_rate>\r\n        <force_torque>\r\n          <frame>sensor</frame>\r\n          <measure_direction>parent_to_child</measure_direction>\r\n        </force_torque>\r\n    \t</sensor>\r\n    </gazebo>\r\n~~~\r\nSee https://gitlab.com/nasa-jsc-robotics/val_description/blob/master/model/robots/common/xacro/sensors/ati_force_torque.xacro#L16 .\r\n\r\nAs in the case of the Walkman, even here the `force_torque` sensor is instantiated with a non-zero origin_xyz in \r\n~~~xml\r\n<xacro:ati_force_torque_sensor sensorName=\"${prefix}FootSixAxis\"\r\n                               parentLink=\"${AnkleRollLinkName}\"\r\n                               joint_to_attach_sensor_to=\"${AnkleRollJointName}\"                          \r\n                               origin_xyz=\"0.0215646 0.0 -0.051054\"                        \r\n                               origin_rpy=\"3.14 0.0 0.0\"                \r\n                               sensor_number=\"${ATI_serial_number}\"                                \r\n                               sensor_node=\"${ATI_node}\"                           \r\n                               sensor_api=\"${ForceTorqueSensorApi}\" />\r\n~~~\r\nSee https://gitlab.com/nasa-jsc-robotics/val_description/blob/master/model/robots/common/xacro/leg/leg.xacro#L173 .\r\n\r\nModelling the F/T sensor as attached to a non-fixed joint can make sense if the mass of the flange connecting the F/T sensor with its revolute joint is small enough and its weight and dynamical effect can be safely disregarded. However the presence of a non-fixed joints constraints the joint frame origin to be on the joint's revolution axis, and prevents to correctly simulate a sensor whose origin does not lie on the revolution axis. As far as I understood is the case in Walkman/Valkyrie, and the authors of those models tried to encode the position offset between the joint frame and the sensor frame using the sensor pose, apparently ignoring that the position part would be ignored. \r\n\r\nI don't know if there is an easy way to fix this issue in these models. Two possible ways can be:\r\n\r\n* create a new value for the [`frame` tag](http://sdformat.org/spec?ver=1.6&elem=sensor#force_torque_frame): a `sensor_posandrot` (better name preferable) that means  that the sensor orientation is used to express the wrench, and the sensor origin is used as the point with respect to which the torque is expressed,\r\n\r\n* or considering that any model with a non-zero sensor position offset for a `force_torque` sensor is broken, we can just modify the definition of `<frame>sensor</frame>` to \"the sensor orientation is used to express the wrench, and the sensor origin is used as the point with respect to which the torque is expressed\".", "markup": "markdown", "html": "<p><strong>TL; DR: There is bug in Valkyrie F/T sensor model that could cause up to 20 Nm of error between the simulated F/T measure and the real one.</strong></p>\n<p>Back in <a href=\"https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc</a> , the semantics for force_torque sensor pose tag was defined.</p>\n<p>In particular it was decided (probably for back-compatibility) that the point with respect to which the measured torque is expressed was always the origin of the \"joint\" frame, regardless of the sensor pose and of the frame tag (see <a href=\"https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc#comment-9473056\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc#comment-9473056</a>).</p>\n<p>Personally I was ok with this, because I always modeled six axis force torque sensors as \"fixed\" joints (as described in <a href=\"https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc#comment-9485945\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issues/940/force-torque-sensor-forcetorquesensorcc#comment-9485945</a>), for which the origin of the joint frame can be freely assigned without any other constraint.</p>\n<p>However recently I was porting some estimation software to the Walkman robot ( <a href=\"https://www.walk-man.eu/\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.walk-man.eu/</a> ) and I noticed that in building their SDF they choose a different option: they modeled their F/T sensors as sensors measuring the force transmitted over a non-fixed joint. The Walkman model is not public, but then I noticed that the same choice was done in the SDF of the Valkyrie robot, see for example:</p>\n<div class=\"codehilite language-xml\"><pre><span></span>    <span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;${joint_to_attach_sensor_to}&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;sensor</span> <span class=\"na\">name=</span><span class=\"s\">&quot;${sensorName}&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;force_torque&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>${origin_xyz} ${origin_rpy}<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;sensor_number</span> <span class=\"na\">id=</span><span class=\"s\">&quot;${sensor_number}&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;node</span> <span class=\"na\">id=</span><span class=\"s\">&quot;${sensor_node}&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;api</span> <span class=\"na\">name=</span><span class=\"s\">&quot;${sensor_api}&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;always_on&gt;</span>true<span class=\"nt\">&lt;/always_on&gt;</span>\n        <span class=\"nt\">&lt;update_rate&gt;</span>500.0<span class=\"nt\">&lt;/update_rate&gt;</span>\n        <span class=\"nt\">&lt;force_torque&gt;</span>\n          <span class=\"nt\">&lt;frame&gt;</span>sensor<span class=\"nt\">&lt;/frame&gt;</span>\n          <span class=\"nt\">&lt;measure_direction&gt;</span>parent_to_child<span class=\"nt\">&lt;/measure_direction&gt;</span>\n        <span class=\"nt\">&lt;/force_torque&gt;</span>\n        <span class=\"nt\">&lt;/sensor&gt;</span>\n    <span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>See <a href=\"https://gitlab.com/nasa-jsc-robotics/val_description/blob/master/model/robots/common/xacro/sensors/ati_force_torque.xacro#L16\" rel=\"nofollow\" class=\"ap-connect-link\">https://gitlab.com/nasa-jsc-robotics/val_description/blob/master/model/robots/common/xacro/sensors/ati_force_torque.xacro#L16</a> .</p>\n<p>As in the case of the Walkman, even here the <code>force_torque</code> sensor is instantiated with a non-zero origin_xyz in </p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;xacro:ati_force_torque_sensor</span> <span class=\"na\">sensorName=</span><span class=\"s\">&quot;${prefix}FootSixAxis&quot;</span>\n                               <span class=\"na\">parentLink=</span><span class=\"s\">&quot;${AnkleRollLinkName}&quot;</span>\n                               <span class=\"na\">joint_to_attach_sensor_to=</span><span class=\"s\">&quot;${AnkleRollJointName}&quot;</span>                          \n                               <span class=\"na\">origin_xyz=</span><span class=\"s\">&quot;0.0215646 0.0 -0.051054&quot;</span>                        \n                               <span class=\"na\">origin_rpy=</span><span class=\"s\">&quot;3.14 0.0 0.0&quot;</span>                \n                               <span class=\"na\">sensor_number=</span><span class=\"s\">&quot;${ATI_serial_number}&quot;</span>                                \n                               <span class=\"na\">sensor_node=</span><span class=\"s\">&quot;${ATI_node}&quot;</span>                           \n                               <span class=\"na\">sensor_api=</span><span class=\"s\">&quot;${ForceTorqueSensorApi}&quot;</span> <span class=\"nt\">/&gt;</span>\n</pre></div>\n\n\n<p>See <a href=\"https://gitlab.com/nasa-jsc-robotics/val_description/blob/master/model/robots/common/xacro/leg/leg.xacro#L173\" rel=\"nofollow\" class=\"ap-connect-link\">https://gitlab.com/nasa-jsc-robotics/val_description/blob/master/model/robots/common/xacro/leg/leg.xacro#L173</a> .</p>\n<p>Modelling the F/T sensor as attached to a non-fixed joint can make sense if the mass of the flange connecting the F/T sensor with its revolute joint is small enough and its weight and dynamical effect can be safely disregarded. However the presence of a non-fixed joints constraints the joint frame origin to be on the joint's revolution axis, and prevents to correctly simulate a sensor whose origin does not lie on the revolution axis. As far as I understood is the case in Walkman/Valkyrie, and the authors of those models tried to encode the position offset between the joint frame and the sensor frame using the sensor pose, apparently ignoring that the position part would be ignored. </p>\n<p>I don't know if there is an easy way to fix this issue in these models. Two possible ways can be:</p>\n<ul>\n<li>\n<p>create a new value for the <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=sensor#force_torque_frame\" rel=\"nofollow\"><code>frame</code> tag</a>: a <code>sensor_posandrot</code> (better name preferable) that means  that the sensor orientation is used to express the wrench, and the sensor origin is used as the point with respect to which the torque is expressed,</p>\n</li>\n<li>\n<p>or considering that any model with a non-zero sensor position offset for a <code>force_torque</code> sensor is broken, we can just modify the definition of <code>&lt;frame&gt;sensor&lt;/frame&gt;</code> to \"the sensor orientation is used to express the wrench, and the sensor origin is used as the point with respect to which the torque is expressed\".</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-10-30T23:22:22.681760+00:00", "milestone": null, "updated_on": "2018-08-26T11:00:09.195686+00:00", "type": "issue", "id": 130}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/131/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/131.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/131/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/131/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/131/disabling-lumping-on-a-fixed-joint-in-a"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/131/vote"}}, "reporter": {"display_name": "Michael Beardsworth", "uuid": "{6d29b10b-98d1-40a8-9074-c9bbc5ad7a39}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6d29b10b-98d1-40a8-9074-c9bbc5ad7a39%7D"}, "html": {"href": "https://bitbucket.org/%7B6d29b10b-98d1-40a8-9074-c9bbc5ad7a39%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/15c2fe64bea15ed9be13a4bdb5856938d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMB-1.png"}}, "nickname": "mbeards", "type": "user", "account_id": "557058:c7b66d98-2604-4316-9362-ddbfe8280c39"}, "title": "Disabling lumping on a fixed joint in a URDF results in a revolute joint", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Parsing a URDF like the one below, (with 2 links connected by a fixed joint, lumping disabled), produces a model with 2 links joined by a revolute joint.  This behavior seems surprising to me, but is clearly implemented intentionally (#!/osrf/sdformat/src/a3fa3d1163cc2fe991ac106e51695b99f8b119ca/src/parser_urdf.cc?at=default&fileviewer=file-view-default#parser_urdf.cc-3221).  Does anyone know the history of this behavior?  It's a bit problematic for my application.\r\n\r\n```\r\n#!xml\r\n\r\n<robot name=\"robot\">\r\n  <link name=\"base_link\">\r\n    <visual>\r\n      <origin rpy=\"1.570796326790 0 0\" xyz=\"0 0 .215\"/>\r\n      <geometry>\r\n        <box size=\"0.33 0.22 0.23\"/>\r\n      </geometry>\r\n    </visual>\r\n    <collision>\r\n      <origin rpy=\"0 0 0\" xyz=\"-0.05 0 0.1\"/>\r\n      <geometry>\r\n        <box size=\"0.33 0.22 0.23\"/>\r\n      </geometry>\r\n    </collision>\r\n    <inertial>\r\n      <origin rpy=\"1.570796326790 0 0\" xyz=\"0 0 .215\"/>\r\n      <inertia ixx=\"1\" ixy=\"0\" ixz=\"0\" iyy=\"1\" iyz=\"0\" izz=\"1\"/>\r\n      <mass value=\"1\"/>\r\n    </inertial>\r\n  </link>\r\n  <link name=\"second_link\">\r\n    <visual>\r\n      <origin rpy=\"1.570796326790 0 0\" xyz=\"0 0 0\"/>\r\n      <geometry>\r\n        <cylinder radius=\"0.16\" length=\"0.3\"/>\r\n      </geometry>\r\n    </visual>\r\n    <collision>\r\n      <origin rpy=\"0 0 0\" xyz=\"0.02 0 0.15\"/>\r\n      <geometry>\r\n        <cylinder radius=\"0.16\" length=\"0.3\"/>\r\n      </geometry>\r\n    </collision>\r\n    <inertial>\r\n      <origin rpy=\"1.570796326790 0 0\" xyz=\"0 0 0\"/>\r\n      <inertia ixx=\"1\" ixy=\"0\" ixz=\"0\" iyy=\"1\" iyz=\"0\" izz=\"1\"/>\r\n      <mass value=\"1\"/>\r\n    </inertial>\r\n  </link>\r\n  <joint name=\"joint_base_second\" type=\"fixed\">\r\n    <origin rpy=\"0 0 0\" xyz=\"0 0 .215\"/>\r\n    <parent link=\"base_link\"/>\r\n    <child link=\"second_link\"/>\r\n  </joint>\r\n  <gazebo reference=\"joint_base_second\">\r\n    <disableFixedJointLumping>true</disableFixedJointLumping>\r\n  </gazebo>\r\n</robot>\r\n```", "markup": "markdown", "html": "<p>Parsing a URDF like the one below, (with 2 links connected by a fixed joint, lumping disabled), produces a model with 2 links joined by a revolute joint.  This behavior seems surprising to me, but is clearly implemented intentionally (<a href=\"#!/osrf/sdformat/src/a3fa3d1163cc2fe991ac106e51695b99f8b119ca/src/parser_urdf.cc?at=default&amp;fileviewer=file-view-default#parser_urdf.cc-3221\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/a3fa3d1163cc2fe991ac106e51695b99f8b119ca/src/parser_urdf.cc?at=default&amp;fileviewer=file-view-default#parser_urdf.cc-3221</a>).  Does anyone know the history of this behavior?  It's a bit problematic for my application.</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;robot</span> <span class=\"na\">name=</span><span class=\"s\">&quot;robot&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;base_link&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;visual&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;1.570796326790 0 0&quot;</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 .215&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;box</span> <span class=\"na\">size=</span><span class=\"s\">&quot;0.33 0.22 0.23&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;collision&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;-0.05 0 0.1&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;box</span> <span class=\"na\">size=</span><span class=\"s\">&quot;0.33 0.22 0.23&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;inertial&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;1.570796326790 0 0&quot;</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 .215&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/inertial&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;second_link&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;visual&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;1.570796326790 0 0&quot;</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder</span> <span class=\"na\">radius=</span><span class=\"s\">&quot;0.16&quot;</span> <span class=\"na\">length=</span><span class=\"s\">&quot;0.3&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;collision&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0.02 0 0.15&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;cylinder</span> <span class=\"na\">radius=</span><span class=\"s\">&quot;0.16&quot;</span> <span class=\"na\">length=</span><span class=\"s\">&quot;0.3&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;inertial&gt;</span>\n      <span class=\"nt\">&lt;origin</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;1.570796326790 0 0&quot;</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/inertial&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;joint_base_second&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;fixed&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;origin</span> <span class=\"na\">rpy=</span><span class=\"s\">&quot;0 0 0&quot;</span> <span class=\"na\">xyz=</span><span class=\"s\">&quot;0 0 .215&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;parent</span> <span class=\"na\">link=</span><span class=\"s\">&quot;base_link&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;child</span> <span class=\"na\">link=</span><span class=\"s\">&quot;second_link&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/joint&gt;</span>\n  <span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;joint_base_second&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;disableFixedJointLumping&gt;</span>true<span class=\"nt\">&lt;/disableFixedJointLumping&gt;</span>\n  <span class=\"nt\">&lt;/gazebo&gt;</span>\n<span class=\"nt\">&lt;/robot&gt;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-12-12T23:39:16.210022+00:00", "milestone": null, "updated_on": "2018-02-01T17:11:57.961163+00:00", "type": "issue", "id": 131}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/132/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/132.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/132/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/132/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/132/parser-does-not-handle-urdf-material"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/132/vote"}}, "reporter": {"display_name": "Parker Lusk", "uuid": "{54982703-ae0b-4b7e-8699-b1d2e4ae2523}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B54982703-ae0b-4b7e-8699-b1d2e4ae2523%7D"}, "html": {"href": "https://bitbucket.org/%7B54982703-ae0b-4b7e-8699-b1d2e4ae2523%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b29fd917b422b56168b4e6cc5c0c432cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPL-5.png"}}, "nickname": "plusk01", "type": "user", "account_id": "557058:8840a928-b028-4358-ac9b-d0a5a625c0ce"}, "title": "Parser does not handle URDF material gazebo extensions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Using Gazebo 7.4.0 and ROS Kinetic, my URDF files that have gazebo extensions like\r\n\r\n```xml\r\n<gazebo reference=\"chassis\">\r\n  <material>Gazebo/DarkGrey</material>\r\n</gazebo>\r\n```\r\n\r\ndo not convert to SDF 1.6 correctly. This seems to be a bug in the `parser_urdf.cc`. This can be recreated by running `gz sdf -p model.urdf` and noting that the `material` tag is not present.\r\n\r\nPerhaps related to [osrf/gazebo issue #2103](https://bitbucket.org/osrf/gazebo/issues/2103/visualplugins-not-registering-sdf-elements).", "markup": "markdown", "html": "<p>Using Gazebo 7.4.0 and ROS Kinetic, my URDF files that have gazebo extensions like</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;chassis&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;material&gt;</span>Gazebo/DarkGrey<span class=\"nt\">&lt;/material&gt;</span>\n<span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>do not convert to SDF 1.6 correctly. This seems to be a bug in the <code>parser_urdf.cc</code>. This can be recreated by running <code>gz sdf -p model.urdf</code> and noting that the <code>material</code> tag is not present.</p>\n<p>Perhaps related to <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/2103/visualplugins-not-registering-sdf-elements\" rel=\"nofollow\">osrf/gazebo issue #2103</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2017-01-05T06:42:53.735358+00:00", "milestone": null, "updated_on": "2017-01-05T20:53:11.276554+00:00", "type": "issue", "id": 132}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/133/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/133.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/133/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/133/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/133/tutorials-install-instructions-still-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/133/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Tutorial's install instructions still on version 2", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Here:\r\n\r\nhttp://sdformat.org/tutorials?tut=install&cat=get_started\r\n\r\nAlso, the install instructions in the [README](#!/osrf/sdformat/src/a3fa3d1163cc2fe991ac106e51695b99f8b119ca/README?at=default&fileviewer=file-view-default) are incomplete, since they don't include dependencies. It might be a good idea to change the README to be like [Gazebo's](https://bitbucket.org/osrf/gazebo/src/75c110c1ba6ea5e103d731a50238999a6287984c/README?at=default&fileviewer=file-view-default), which links to the install tutorial.", "markup": "markdown", "html": "<p>Here:</p>\n<p><a href=\"http://sdformat.org/tutorials?tut=install&amp;cat=get_started\" rel=\"nofollow\" class=\"ap-connect-link\">http://sdformat.org/tutorials?tut=install&amp;cat=get_started</a></p>\n<p>Also, the install instructions in the <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/a3fa3d1163cc2fe991ac106e51695b99f8b119ca/README?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">README</a> are incomplete, since they don't include dependencies. It might be a good idea to change the README to be like <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/75c110c1ba6ea5e103d731a50238999a6287984c/README?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">Gazebo's</a>, which links to the install tutorial.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-01-18T23:11:51.215662+00:00", "milestone": null, "updated_on": "2017-01-18T23:11:51.215662+00:00", "type": "issue", "id": 133}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/134/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/134.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/134/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/134/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/134/create-xml-style-sheet-to-display-sdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/134/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Create XML style sheet to display SDF", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Similar to the [Google style guide](http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml), create an XML style sheet to display documented SDF.  This would avoid the need to compile and run `gzsdf` to produce docs for SDF.  Replaces #27.\r\n\r\nMoved from [gazebo issue #226](https://bitbucket.org/osrf/gazebo/issues/226).", "markup": "markdown", "html": "<p>Similar to the <a data-is-external-link=\"true\" href=\"http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml\" rel=\"nofollow\">Google style guide</a>, create an XML style sheet to display documented SDF.  This would avoid the need to compile and run <code>gzsdf</code> to produce docs for SDF.  Replaces <a href=\"#!/osrf/sdformat/issues/27/add-graphical-documentation-for-simple-sdf\" rel=\"nofollow\" title=\"Add graphical documentation for simple SDF transform examples\" class=\"ap-connect-link\">#27</a>.</p>\n<p>Moved from <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/226\" rel=\"nofollow\">gazebo issue #226</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-02T22:32:58.842496+00:00", "milestone": null, "updated_on": "2017-02-02T22:32:58.842496+00:00", "type": "issue", "id": 134}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/135/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/135.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/135/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/135/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/135/support-sdf-to-urdf-conversion"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/135/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Support SDF to URDF conversion", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-02T23:33:28.026321+00:00", "milestone": null, "updated_on": "2017-02-03T00:09:04.789821+00:00", "type": "issue", "id": 135}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/136/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/136.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/136/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/136/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/136/jenkins-builds-not-being-started-for-pull"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/136/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Jenkins builds not being started for pull requests", "component": null, "votes": 0, "watches": 1, "content": {"raw": "pull request #302 didn't have the jenkins builds started automatically. Is the bitjen daemon not working?\r\n\r\n@_jrivero_ \r\n\r\nhttp://build.osrfoundation.org/job/sdformat-ci-pr_any/", "markup": "markdown", "html": "<p><a href=\"#!/osrf/sdformat/pull-requests/302/remove-parts-of-boost\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #302</a> didn't have the jenkins builds started automatically. Is the bitjen daemon not working?</p>\n<p>@<em>jrivero</em> </p>\n<p><a href=\"http://build.osrfoundation.org/job/sdformat-ci-pr_any/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/job/sdformat-ci-pr_any/</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-02-03T18:51:38.819082+00:00", "milestone": null, "updated_on": "2017-02-07T02:21:29.673903+00:00", "type": "issue", "id": 136}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/137/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/137.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/137/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/137/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/137/offer-mathematics-constants-in-sdf-syntax"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/137/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Offer mathematics constants in sdf syntax", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Moving [gazebo issue 643](https://bitbucket.org/osrf/gazebo/issues/643/offer-mathematics-constants-in-sdf-syntax) here.", "markup": "markdown", "html": "<p>Moving <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/643/offer-mathematics-constants-in-sdf-syntax\" rel=\"nofollow\">gazebo issue 643</a> here.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-08T17:06:53.933504+00:00", "milestone": null, "updated_on": "2017-02-08T17:06:53.933504+00:00", "type": "issue", "id": 137}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/138/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/138.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/138/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/138/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/138/define-sdf-using-xml-schema-instead-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/138/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Define sdf using XML Schema instead of custom schema", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I'm a little confused on how the SDF is defined, so this issue is partly to help me understand.\r\n\r\nIt appears SDF is defined by a bunch of \".sdf\" files. The content of these files appears to be custom, not used outside of the sdformat project, but having the same purpose as [XML Schema](https://www.w3.org/XML/Schema). `sdf` files are validated against these \".sdf\" files using a custom parser.\r\n\r\nThere does seem to be a demand to use XML Schema indicated in #2 and pull request #91. The result was a script that translated from the custom format to XML schema.\r\n\r\nIt seems that the \".sdf\" files could be replaced by XML Schema, and the parser could be replaced with another [open source library](http://xerces.apache.org/xerces-c/).\r\n\r\n* https://www.w3.org/XML/Schema\r\n* http://xerces.apache.org/xerces-c/\r\n* https://cmake.org/cmake/help/v3.1/module/FindXercesC.html", "markup": "markdown", "html": "<p>I'm a little confused on how the SDF is defined, so this issue is partly to help me understand.</p>\n<p>It appears SDF is defined by a bunch of \".sdf\" files. The content of these files appears to be custom, not used outside of the sdformat project, but having the same purpose as <a data-is-external-link=\"true\" href=\"https://www.w3.org/XML/Schema\" rel=\"nofollow\">XML Schema</a>. <code>sdf</code> files are validated against these \".sdf\" files using a custom parser.</p>\n<p>There does seem to be a demand to use XML Schema indicated in <a href=\"#!/osrf/sdformat/issues/2/make-schema-for-validation\" rel=\"nofollow\" title=\"Make schema for validation\" class=\"ap-connect-link\">#2</a> and <a href=\"#!/osrf/sdformat/pull-requests/91/implement-generation-of-xml-schema-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #91</a>. The result was a script that translated from the custom format to XML schema.</p>\n<p>It seems that the \".sdf\" files could be replaced by XML Schema, and the parser could be replaced with another <a data-is-external-link=\"true\" href=\"http://xerces.apache.org/xerces-c/\" rel=\"nofollow\">open source library</a>.</p>\n<ul>\n<li><a href=\"https://www.w3.org/XML/Schema\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.w3.org/XML/Schema</a></li>\n<li><a href=\"http://xerces.apache.org/xerces-c/\" rel=\"nofollow\" class=\"ap-connect-link\">http://xerces.apache.org/xerces-c/</a></li>\n<li><a href=\"https://cmake.org/cmake/help/v3.1/module/FindXercesC.html\" rel=\"nofollow\" class=\"ap-connect-link\">https://cmake.org/cmake/help/v3.1/module/FindXercesC.html</a></li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-09T23:19:52.959039+00:00", "milestone": null, "updated_on": "2017-02-16T23:45:12.768946+00:00", "type": "issue", "id": 138}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/139/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/139.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/139/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/139/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/139/boost-linkage-compilation-error"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/139/vote"}}, "reporter": {"display_name": "Illia Sheremet", "uuid": "{d50475a6-a9ca-484f-822b-d4ecafae873d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd50475a6-a9ca-484f-822b-d4ecafae873d%7D"}, "html": {"href": "https://bitbucket.org/%7Bd50475a6-a9ca-484f-822b-d4ecafae873d%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:708eecb0-cceb-47fd-b9c7-1d445c35f76d/92ef996e-a99a-4208-a473-65a301055028/128"}}, "nickname": "Illia Sheremet", "type": "user", "account_id": "557058:708eecb0-cceb-47fd-b9c7-1d445c35f76d"}, "title": "Boost linkage compilation error", "component": null, "votes": 1, "watches": 3, "content": {"raw": "I can't compile any 4.1 + versions of the code due to boost linkage error:\r\n\r\nlibsdformat.so.4.1.0: undefined reference to boost::re_detail_106100::put_mem_block(void*)\r\n...\r\nlibsdformat.so.4.1.0: undefined reference to `boost::re_detail_106100::perl_matcher<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::construct_init(boost::basic_regex<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > > const&, boost::regex_constants::_match_flags)'\r\n\r\nalthough the library is present and the flags are set correctly.\r\nHere is the output of ``make VERBOSE=1``\r\n\r\n```\r\n#!c++\r\n\r\n\r\ncd sdformat/build/test/integration && /usr/bin/cmake -E cmake_link_script CMakeFiles/INTEGRATION_audio.dir/link.txt --verbose=1\r\n/usr/bin/c++    -g -O2 -msse4.2 -msse4.1 -mssse3 -msse3 -mfpmath=sse -msse -msse2  -std=c++11 -fvisibility=hidden -lboost_regex -lboost_iostreams -Waddress -Warray-bounds -Wcomment -Wformat -Wnonnull -Wparentheses -Wreorder -Wreturn-type -Wsequence-point -Wsign-compare -Wstrict-aliasing -Wstrict-overflow=1 -Wswitch -Wtrigraphs -Wuninitialized -Wunused-function -Wunused-label -Wunused-value -Wunused-variable -Wvolatile-register-var -Wextra -Wno-long-long -Wno-unused-value -Wno-unused-value -Wno-unused-value -Wno-unused-value -Wfloat-equal -Wshadow -Winit-self -Wswitch-default -Wmissing-include-dirs -pedantic -Wno-pragmas -Wc++11-compat  -g -O2 -msse4.2 -msse4.1 -mssse3 -msse3 -mfpmath=sse -msse -msse2     CMakeFiles/INTEGRATION_audio.dir/audio.cc.o  -o INTEGRATION_audio  -L/sdformat/build/src  -L/sdformat/build/test -rdynamic -Wl,-Bstatic -lgtest -lgtest_main -Wl,-Bdynamic ../../src/libsdformat.so.4.1.0 -lpthread -ltinyxml -lignition-math2 -lboost_system -lboost_filesystem -lboost_program_options -lboost_regex -lboost_iostreams -ltinyxml -lignition-math2 -Wl,-rpath, sdformat/build/src:/sdformat/build/test\r\n```\r\n\r\n\r\nfrom which you can see that all the flags are set correctly. Here is the output of cmake boost version:\r\nBoost version: 1.61.0", "markup": "markdown", "html": "<p>I can't compile any 4.1 + versions of the code due to boost linkage error:</p>\n<p>libsdformat.so.4.1.0: undefined reference to boost::re_detail_106100::put_mem_block(void<em>)\n...\nlibsdformat.so.4.1.0: undefined reference to `boost::re_detail_106100::perl_matcher&lt;<strong>gnu_cxx::</strong>normal_iterator&lt;char const</em>, std::string&gt;, std::allocator&lt;boost::sub_match&lt;<strong>gnu_cxx::</strong>normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt;::construct_init(boost::basic_regex&lt;char, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt; const&amp;, boost::regex_constants::_match_flags)'</p>\n<p>although the library is present and the flags are set correctly.\nHere is the output of <code>make VERBOSE=1</code></p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">cd</span> <span class=\"n\">sdformat</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">integration</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">cmake</span> <span class=\"o\">-</span><span class=\"n\">E</span> <span class=\"n\">cmake_link_script</span> <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">INTEGRATION_audio</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">link</span><span class=\"p\">.</span><span class=\"n\">txt</span> <span class=\"o\">--</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++</span>    <span class=\"o\">-</span><span class=\"n\">g</span> <span class=\"o\">-</span><span class=\"n\">O2</span> <span class=\"o\">-</span><span class=\"n\">msse4</span><span class=\"mf\">.2</span> <span class=\"o\">-</span><span class=\"n\">msse4</span><span class=\"mf\">.1</span> <span class=\"o\">-</span><span class=\"n\">mssse3</span> <span class=\"o\">-</span><span class=\"n\">msse3</span> <span class=\"o\">-</span><span class=\"n\">mfpmath</span><span class=\"o\">=</span><span class=\"n\">sse</span> <span class=\"o\">-</span><span class=\"n\">msse</span> <span class=\"o\">-</span><span class=\"n\">msse2</span>  <span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"o\">++</span><span class=\"mi\">11</span> <span class=\"o\">-</span><span class=\"n\">fvisibility</span><span class=\"o\">=</span><span class=\"n\">hidden</span> <span class=\"o\">-</span><span class=\"n\">lboost_regex</span> <span class=\"o\">-</span><span class=\"n\">lboost_iostreams</span> <span class=\"o\">-</span><span class=\"n\">Waddress</span> <span class=\"o\">-</span><span class=\"n\">Warray</span><span class=\"o\">-</span><span class=\"n\">bounds</span> <span class=\"o\">-</span><span class=\"n\">Wcomment</span> <span class=\"o\">-</span><span class=\"n\">Wformat</span> <span class=\"o\">-</span><span class=\"n\">Wnonnull</span> <span class=\"o\">-</span><span class=\"n\">Wparentheses</span> <span class=\"o\">-</span><span class=\"n\">Wreorder</span> <span class=\"o\">-</span><span class=\"n\">Wreturn</span><span class=\"o\">-</span><span class=\"n\">type</span> <span class=\"o\">-</span><span class=\"n\">Wsequence</span><span class=\"o\">-</span><span class=\"n\">point</span> <span class=\"o\">-</span><span class=\"n\">Wsign</span><span class=\"o\">-</span><span class=\"n\">compare</span> <span class=\"o\">-</span><span class=\"n\">Wstrict</span><span class=\"o\">-</span><span class=\"n\">aliasing</span> <span class=\"o\">-</span><span class=\"n\">Wstrict</span><span class=\"o\">-</span><span class=\"n\">overflow</span><span class=\"o\">=</span><span class=\"mi\">1</span> <span class=\"o\">-</span><span class=\"n\">Wswitch</span> <span class=\"o\">-</span><span class=\"n\">Wtrigraphs</span> <span class=\"o\">-</span><span class=\"n\">Wuninitialized</span> <span class=\"o\">-</span><span class=\"n\">Wunused</span><span class=\"o\">-</span><span class=\"n\">function</span> <span class=\"o\">-</span><span class=\"n\">Wunused</span><span class=\"o\">-</span><span class=\"n\">label</span> <span class=\"o\">-</span><span class=\"n\">Wunused</span><span class=\"o\">-</span><span class=\"n\">value</span> <span class=\"o\">-</span><span class=\"n\">Wunused</span><span class=\"o\">-</span><span class=\"n\">variable</span> <span class=\"o\">-</span><span class=\"n\">Wvolatile</span><span class=\"o\">-</span><span class=\"k\">register</span><span class=\"o\">-</span><span class=\"n\">var</span> <span class=\"o\">-</span><span class=\"n\">Wextra</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"kt\">long</span><span class=\"o\">-</span><span class=\"kt\">long</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">unused</span><span class=\"o\">-</span><span class=\"n\">value</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">unused</span><span class=\"o\">-</span><span class=\"n\">value</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">unused</span><span class=\"o\">-</span><span class=\"n\">value</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">unused</span><span class=\"o\">-</span><span class=\"n\">value</span> <span class=\"o\">-</span><span class=\"n\">Wfloat</span><span class=\"o\">-</span><span class=\"n\">equal</span> <span class=\"o\">-</span><span class=\"n\">Wshadow</span> <span class=\"o\">-</span><span class=\"n\">Winit</span><span class=\"o\">-</span><span class=\"n\">self</span> <span class=\"o\">-</span><span class=\"n\">Wswitch</span><span class=\"o\">-</span><span class=\"k\">default</span> <span class=\"o\">-</span><span class=\"n\">Wmissing</span><span class=\"o\">-</span><span class=\"n\">include</span><span class=\"o\">-</span><span class=\"n\">dirs</span> <span class=\"o\">-</span><span class=\"n\">pedantic</span> <span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">pragmas</span> <span class=\"o\">-</span><span class=\"n\">Wc</span><span class=\"o\">++</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"n\">compat</span>  <span class=\"o\">-</span><span class=\"n\">g</span> <span class=\"o\">-</span><span class=\"n\">O2</span> <span class=\"o\">-</span><span class=\"n\">msse4</span><span class=\"mf\">.2</span> <span class=\"o\">-</span><span class=\"n\">msse4</span><span class=\"mf\">.1</span> <span class=\"o\">-</span><span class=\"n\">mssse3</span> <span class=\"o\">-</span><span class=\"n\">msse3</span> <span class=\"o\">-</span><span class=\"n\">mfpmath</span><span class=\"o\">=</span><span class=\"n\">sse</span> <span class=\"o\">-</span><span class=\"n\">msse</span> <span class=\"o\">-</span><span class=\"n\">msse2</span>     <span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">INTEGRATION_audio</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">audio</span><span class=\"p\">.</span><span class=\"n\">cc</span><span class=\"p\">.</span><span class=\"n\">o</span>  <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">INTEGRATION_audio</span>  <span class=\"o\">-</span><span class=\"n\">L</span><span class=\"o\">/</span><span class=\"n\">sdformat</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">src</span>  <span class=\"o\">-</span><span class=\"n\">L</span><span class=\"o\">/</span><span class=\"n\">sdformat</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">test</span> <span class=\"o\">-</span><span class=\"n\">rdynamic</span> <span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"n\">Bstatic</span> <span class=\"o\">-</span><span class=\"n\">lgtest</span> <span class=\"o\">-</span><span class=\"n\">lgtest_main</span> <span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"n\">Bdynamic</span> <span class=\"p\">..</span><span class=\"o\">/</span><span class=\"p\">..</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">libsdformat</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"mf\">.4.1.0</span> <span class=\"o\">-</span><span class=\"n\">lpthread</span> <span class=\"o\">-</span><span class=\"n\">ltinyxml</span> <span class=\"o\">-</span><span class=\"n\">lignition</span><span class=\"o\">-</span><span class=\"n\">math2</span> <span class=\"o\">-</span><span class=\"n\">lboost_system</span> <span class=\"o\">-</span><span class=\"n\">lboost_filesystem</span> <span class=\"o\">-</span><span class=\"n\">lboost_program_options</span> <span class=\"o\">-</span><span class=\"n\">lboost_regex</span> <span class=\"o\">-</span><span class=\"n\">lboost_iostreams</span> <span class=\"o\">-</span><span class=\"n\">ltinyxml</span> <span class=\"o\">-</span><span class=\"n\">lignition</span><span class=\"o\">-</span><span class=\"n\">math2</span> <span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"n\">rpath</span><span class=\"p\">,</span> <span class=\"n\">sdformat</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"nl\">src</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"n\">sdformat</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">test</span>\n</pre></div>\n\n\n<p>from which you can see that all the flags are set correctly. Here is the output of cmake boost version:\nBoost version: 1.61.0</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-02-10T13:38:16.250840+00:00", "milestone": null, "updated_on": "2017-04-11T16:06:29.652804+00:00", "type": "issue", "id": 139}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/140/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/140.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/140/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/140/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/140/boost-link-error-under-vs2015"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/140/vote"}}, "reporter": {"display_name": "Joel Graff", "uuid": "{72b3d139-6c3b-4a07-80b9-e1f17d43f63e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B72b3d139-6c3b-4a07-80b9-e1f17d43f63e%7D"}, "html": {"href": "https://bitbucket.org/%7B72b3d139-6c3b-4a07-80b9-e1f17d43f63e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a646263cac4b70fb7b5b408439da036bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJG-0.png"}}, "nickname": "graffy76", "type": "user", "account_id": "557058:815311b5-5155-4e22-8784-80b70ab30134"}, "title": "Boost Link error under VS2015", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Trying to build sdformat under VS2015.  Successfully built boost 1.56.0 for VS2015 and the project configures without any issue.\r\n\r\nHowever, when it tries to link sdformat.dll, it errors with:\r\n\r\n    'cannot open file 'boost_filesystem-vc120-mt-1_56.lib'\r\n\r\nThe problem is because four *.obj source files have a \"/DEFAULTLIB: boost_filesystem-vc120-mt-1_56.lib\" declaration in them.  No idea how it got there - typically it's the result of a \"pragma comment\" statement in code...\r\n\r\nTried to override by spec'ing a /NODEFAULTLIB linker flag in CMakeLists.txt, but then the linker can't find anything to link against.  Tried to override by specifying the VC140 libs specifically in CMakeLists.txt.  No luck.\r\n\r\nThat suggests that the linker can't find the VC140 libs that were successfully configured against...", "markup": "markdown", "html": "<p>Trying to build sdformat under VS2015.  Successfully built boost 1.56.0 for VS2015 and the project configures without any issue.</p>\n<p>However, when it tries to link sdformat.dll, it errors with:</p>\n<div class=\"codehilite\"><pre><span></span>&#39;cannot open file &#39;boost_filesystem-vc120-mt-1_56.lib&#39;\n</pre></div>\n\n\n<p>The problem is because four *.obj source files have a \"/DEFAULTLIB: boost_filesystem-vc120-mt-1_56.lib\" declaration in them.  No idea how it got there - typically it's the result of a \"pragma comment\" statement in code...</p>\n<p>Tried to override by spec'ing a /NODEFAULTLIB linker flag in CMakeLists.txt, but then the linker can't find anything to link against.  Tried to override by specifying the VC140 libs specifically in CMakeLists.txt.  No luck.</p>\n<p>That suggests that the linker can't find the VC140 libs that were successfully configured against...</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-02-11T20:42:11.966480+00:00", "milestone": null, "updated_on": "2017-02-17T19:08:08.958437+00:00", "type": "issue", "id": 140}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/141/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/141.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/141/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/141/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/141/embed-sdf-xml-files-into-library"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/141/vote"}}, "reporter": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "title": "Embed SDF XML files into library", "component": null, "votes": 2, "watches": 5, "content": {"raw": "I'm considering changing the sdformat library so that it directly embeds the SDF XML files (basically all of the contents of the sdf/ subdirectory) into resource strings in the library.  They would be separate XML files in the source repository, but at build time we would run an external program to make resource strings out of them, and then build that into the library.\r\n\r\nThe main benefit to doing so would be to remove any code within the library that goes looking through the filesystem to find these files.  This would make it faster, and remove a dependency on boost::filesystem.  It would also make it easier for the tests, and potentially easier to deploy the library in general, since you will now only need the .so .  It may also be slightly faster, though this is probably a minor benefit.\r\n\r\nThe potential downsides to doing so are removing visibility of the XML files from the end-user, but I'm not sure that is hugely useful anyway.  It also requires a rebuild of the library to \"upgrade\" the SDF XML files, but that seems pretty minor.\r\n\r\nAre there any other objections to this plan?", "markup": "markdown", "html": "<p>I'm considering changing the sdformat library so that it directly embeds the SDF XML files (basically all of the contents of the sdf/ subdirectory) into resource strings in the library.  They would be separate XML files in the source repository, but at build time we would run an external program to make resource strings out of them, and then build that into the library.</p>\n<p>The main benefit to doing so would be to remove any code within the library that goes looking through the filesystem to find these files.  This would make it faster, and remove a dependency on boost::filesystem.  It would also make it easier for the tests, and potentially easier to deploy the library in general, since you will now only need the .so .  It may also be slightly faster, though this is probably a minor benefit.</p>\n<p>The potential downsides to doing so are removing visibility of the XML files from the end-user, but I'm not sure that is hugely useful anyway.  It also requires a rebuild of the library to \"upgrade\" the SDF XML files, but that seems pretty minor.</p>\n<p>Are there any other objections to this plan?</p>", "type": "rendered"}, "assignee": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-15T13:47:24.750591+00:00", "milestone": null, "updated_on": "2019-03-25T14:00:25.763140+00:00", "type": "issue", "id": 141}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/142/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/142.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/142/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/142/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/142/and-appear-redundant"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/142/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "<collide_without_contact_bitmask> and <collide_bitmask> appear redundant", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The descriptions of the tags `<collide_without_contact>`, `<collide_without_contact_bitmask>`, `<collide_bitmask>` suggest that the last two are mutually exclusive, and could be combined.\r\n\r\nThe description of `<collide_without_contact_bitmask>` says it is only used if `<collide_without_contact>` is set. The description of `<collide_bitmask>` says it overrides `<collide_without_contact>`, meaning it forces collisions to generate contact forces, making `<collide_without_contact_bitmask>` do nothing. `<collide_bitmask>` and `<collide_without_contact_bitmask>` can't both be doing something at the same time.\r\n\r\nHow about removing `<collide_without_contact_bitmask>`, removing the behavior of overriding `<collide_without_contact>` from `<collide_bitmask>`, and having `<collide_bitmask>` be the bitmask regardless of the state of the flag `<collide_without_contact>`?", "markup": "markdown", "html": "<p>The descriptions of the tags <code>&lt;collide_without_contact&gt;</code>, <code>&lt;collide_without_contact_bitmask&gt;</code>, <code>&lt;collide_bitmask&gt;</code> suggest that the last two are mutually exclusive, and could be combined.</p>\n<p>The description of <code>&lt;collide_without_contact_bitmask&gt;</code> says it is only used if <code>&lt;collide_without_contact&gt;</code> is set. The description of <code>&lt;collide_bitmask&gt;</code> says it overrides <code>&lt;collide_without_contact&gt;</code>, meaning it forces collisions to generate contact forces, making <code>&lt;collide_without_contact_bitmask&gt;</code> do nothing. <code>&lt;collide_bitmask&gt;</code> and <code>&lt;collide_without_contact_bitmask&gt;</code> can't both be doing something at the same time.</p>\n<p>How about removing <code>&lt;collide_without_contact_bitmask&gt;</code>, removing the behavior of overriding <code>&lt;collide_without_contact&gt;</code> from <code>&lt;collide_bitmask&gt;</code>, and having <code>&lt;collide_bitmask&gt;</code> be the bitmask regardless of the state of the flag <code>&lt;collide_without_contact&gt;</code>?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-17T16:15:48.374354+00:00", "milestone": null, "updated_on": "2017-02-27T19:55:35.399775+00:00", "type": "issue", "id": 142}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/143/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/143.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/143/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/143/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/143/add-to-collision-element"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/143/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Add <category_bitmask> to collision element", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Gazebo appears to have some support for collision and category bitmasks. `<collide_bitmask>` can set the collision bitmask, but sdformat lacks a way of setting the category bitmask. A `<category_bitmask>` field should be added to support it.", "markup": "markdown", "html": "<p>Gazebo appears to have some support for collision and category bitmasks. <code>&lt;collide_bitmask&gt;</code> can set the collision bitmask, but sdformat lacks a way of setting the category bitmask. A <code>&lt;category_bitmask&gt;</code> field should be added to support it.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-17T16:18:12.743014+00:00", "milestone": null, "updated_on": "2017-02-17T17:39:47.752254+00:00", "type": "issue", "id": 143}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/144/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/144.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/144/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/144/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/144/build-cop-cpp-check-error-in-default"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/144/vote"}}, "reporter": {"display_name": "Hugo Boyer", "uuid": "{3d87874e-7099-4981-b04f-57f0272faa7d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D"}, "html": {"href": "https://bitbucket.org/%7B3d87874e-7099-4981-b04f-57f0272faa7d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/21198da8539b599e3633017f5f5f8150d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHB-6.png"}}, "nickname": "hugomatic", "type": "user", "account_id": "557058:869c02bb-b246-4cdc-9db3-0064e8add185"}, "title": "[build cop] cpp check error in default", "component": null, "votes": 0, "watches": 1, "content": {"raw": "http://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-default-trusty-amd64/54/", "markup": "markdown", "html": "<p><a href=\"http://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-default-trusty-amd64/54/\" rel=\"nofollow\" class=\"ap-connect-link\">http://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-default-trusty-amd64/54/</a></p>", "type": "rendered"}, "assignee": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-02-17T23:03:27.511713+00:00", "milestone": null, "updated_on": "2017-02-20T13:09:29.587714+00:00", "type": "issue", "id": 144}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/145/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/145.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/145/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/145/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/145/release-version-510"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/145/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Release version 5.1.0", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I think we should release a new version of sdformat5, since there were some features from sdformat4 that weren't included in 5.0.0 and it will fix some gazebo tests (see [gazebo issue 2162](https://bitbucket.org/osrf/gazebo/issues/2162/support-for-different-sdf-versions-in-gz)). I think we will be ready to release after pull request #320 is merged.\r\n\r\n#!/osrf/sdformat/branches/compare/sdf5%0Dsdformat5_5.0.0#diff", "markup": "markdown", "html": "<p>I think we should release a new version of sdformat5, since there were some features from sdformat4 that weren't included in 5.0.0 and it will fix some gazebo tests (see <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/2162/support-for-different-sdf-versions-in-gz\" rel=\"nofollow\">gazebo issue 2162</a>). I think we will be ready to release after <a href=\"#!/osrf/sdformat/pull-requests/320/sdf5-fixed-sdf-convertfile-and-sdf\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #320</a> is merged.</p>\n<p><a href=\"#!/osrf/sdformat/branches/compare/sdf5%0Dsdformat5_5.0.0#diff\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/branches/compare/sdf5%0Dsdformat5_5.0.0#diff</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-22T00:42:22.576662+00:00", "milestone": null, "updated_on": "2017-02-23T01:37:17.652220+00:00", "type": "issue", "id": 145}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/146/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/146.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/146/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/146/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/146/more-informative-parser-error-messages"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/146/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "More informative parser error messages", "component": null, "votes": 2, "watches": 4, "content": {"raw": "See this question about parser error messages not being very helpful:\r\n\r\nhttp://answers.gazebosim.org/question/15485/tools-to-validate-sdf-files-with/\r\n\r\nThe error is coming from here:\r\n\r\n#!/osrf/sdformat/src/57b675057c543cd4466917ae2b534ef1fb7cf16c/src/parser.cc?fileviewer=file-view-default#parser.cc-305\r\n\r\nLooking at the TinyXml documentation, it looks like there are more functions which we could use to provide a better indication of the error:\r\n\r\nhttp://www.grinninglizard.com/tinyxmldocs/classTiXmlDocument.html", "markup": "markdown", "html": "<p>See this question about parser error messages not being very helpful:</p>\n<p><a href=\"http://answers.gazebosim.org/question/15485/tools-to-validate-sdf-files-with/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/question/15485/tools-to-validate-sdf-files-with/</a></p>\n<p>The error is coming from here:</p>\n<p><a href=\"#!/osrf/sdformat/src/57b675057c543cd4466917ae2b534ef1fb7cf16c/src/parser.cc?fileviewer=file-view-default#parser.cc-305\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/57b675057c543cd4466917ae2b534ef1fb7cf16c/src/parser.cc?fileviewer=file-view-default#parser.cc-305</a></p>\n<p>Looking at the TinyXml documentation, it looks like there are more functions which we could use to provide a better indication of the error:</p>\n<p><a href=\"http://www.grinninglizard.com/tinyxmldocs/classTiXmlDocument.html\" rel=\"nofollow\" class=\"ap-connect-link\">http://www.grinninglizard.com/tinyxmldocs/classTiXmlDocument.html</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-23T15:39:29.396555+00:00", "milestone": null, "updated_on": "2017-02-23T17:36:19.404785+00:00", "type": "issue", "id": 146}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/147/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/147.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/147/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/147/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/147/website-tutorial-incorrect-gravity-example"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/147/vote"}}, "reporter": {"display_name": "Dave Coleman", "uuid": "{58f784f8-4b19-4221-b333-670219684927}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B58f784f8-4b19-4221-b333-670219684927%7D"}, "html": {"href": "https://bitbucket.org/%7B58f784f8-4b19-4221-b333-670219684927%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/0a0abfbe6bae9a1d65fe4af19493f423d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDC-3.png"}}, "nickname": "Dave Coleman", "type": "user", "account_id": "557058:113fde7a-8d84-43e3-91d8-20354f36ec42"}, "title": "Website Tutorial Incorrect Gravity Example", "component": null, "votes": 0, "watches": 1, "content": {"raw": "On the sdformat.org page for [physics](http://sdformat.org/spec?ver=1.6&elem=physics) the example is for version 1.5 but it needs to be upgraded to 1.6. Namely, the <gravity> tag should be removed, because it is no longer valid. Side question: where did it go? I now get the warning:\r\n\r\n    Warning [parser.cc:778] XML Element[gravity], child of element[physics] not defined in SDF. Ignoring[gravity]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.", "markup": "markdown", "html": "<p>On the sdformat.org page for <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=physics\" rel=\"nofollow\">physics</a> the example is for version 1.5 but it needs to be upgraded to 1.6. Namely, the &lt;gravity&gt; tag should be removed, because it is no longer valid. Side question: where did it go? I now get the warning:</p>\n<div class=\"codehilite\"><pre><span></span>Warning [parser.cc:778] XML Element[gravity], child of element[physics] not defined in SDF. Ignoring[gravity]. You may have an incorrect SDF file, or an sdformat version that doesn&#39;t support this element.\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-02-25T00:05:23.469691+00:00", "milestone": null, "updated_on": "2017-02-25T02:46:52.718749+00:00", "type": "issue", "id": 147}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/148/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/148.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/148/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/148/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/148/treat-boolean-strings-case-insensitive"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/148/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "Treat \"boolean strings\" case insensitive?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I've just found out that the following\r\n\r\n    <param>True</param>\r\n\r\nreturns 0 when called as `element->Get<bool>()`.\r\n\r\nOn the other hand,\r\n\r\n    <param>true</param>\r\n\r\nreturns 1.\r\n\r\nI'm writing these tags inside a Gazebo plugin tag, where any tags are allowed, and the data format cannot be specified in advance, so the `<param>` tag is treated like a string type.\r\n\r\nI've looked into `Param_TEST.cc`, and neither the camelcase, nor the uppercase case is  covered for the bool type. \r\n\r\nWhat is the expected behavior according to you? For me, it'd be treating all cases of true/True/TRUE as true.", "markup": "markdown", "html": "<p>I've just found out that the following</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;param&gt;</span>True<span class=\"nt\">&lt;/param&gt;</span>\n</pre></div>\n\n\n<p>returns 0 when called as <code>element-&gt;Get&lt;bool&gt;()</code>.</p>\n<p>On the other hand,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;param&gt;</span>true<span class=\"nt\">&lt;/param&gt;</span>\n</pre></div>\n\n\n<p>returns 1.</p>\n<p>I'm writing these tags inside a Gazebo plugin tag, where any tags are allowed, and the data format cannot be specified in advance, so the <code>&lt;param&gt;</code> tag is treated like a string type.</p>\n<p>I've looked into <code>Param_TEST.cc</code>, and neither the camelcase, nor the uppercase case is  covered for the bool type. </p>\n<p>What is the expected behavior according to you? For me, it'd be treating all cases of true/True/TRUE as true.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-02-27T00:34:02.363245+00:00", "milestone": null, "updated_on": "2017-05-06T00:16:56.943130+00:00", "type": "issue", "id": 148}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/149/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/149.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/149/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/149/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/149/documentation-about-range-of-allowed"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/149/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "Documentation about range of allowed values of SDF parameters collision#ode_mu and collision#ode_mu2 is incorrect", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The SDF format specification constraints the `mu` and `mu2` parameters to be in the `[0 ... 1]` range:\r\n~~~\r\nCoefficient of friction in the range of [0..1]\r\n~~~\r\nSee #!/osrf/sdformat/annotate/f2b9358f5fd94c5d2bcc1875d4180bcc964f4be1/sdf/1.6/surface.sdf?at=default&fileviewer=file-view-default#surface.sdf-46 . \r\n\r\nHowever, the tutorial on friction states that any positive value is allowed for the mu and mu2 parameters : http://gazebosim.org/tutorials?tut=friction .", "markup": "markdown", "html": "<p>The SDF format specification constraints the <code>mu</code> and <code>mu2</code> parameters to be in the <code>[0 ... 1]</code> range:</p>\n<div class=\"codehilite\"><pre><span></span>Coefficient of friction in the range of [0..1]\n</pre></div>\n\n\n<p>See <a href=\"#!/osrf/sdformat/annotate/f2b9358f5fd94c5d2bcc1875d4180bcc964f4be1/sdf/1.6/surface.sdf?at=default&amp;fileviewer=file-view-default#surface.sdf-46\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/annotate/f2b9358f5fd94c5d2bcc1875d4180bcc964f4be1/sdf/1.6/surface.sdf?at=default&amp;fileviewer=file-view-default#surface.sdf-46</a> . </p>\n<p>However, the tutorial on friction states that any positive value is allowed for the mu and mu2 parameters : <a href=\"http://gazebosim.org/tutorials?tut=friction\" rel=\"nofollow\" class=\"ap-connect-link\">http://gazebosim.org/tutorials?tut=friction</a> .</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-27T15:16:40.312014+00:00", "milestone": null, "updated_on": "2017-02-27T15:16:40.312014+00:00", "type": "issue", "id": 149}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/150/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/150.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/150/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/150/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/150/cmake-pagacke-config-version-is-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/150/vote"}}, "reporter": null, "title": "cmake pagacke config version is not recognized by / compatible with gazebo", "component": null, "votes": 1, "watches": 1, "content": {"raw": "I am building Gazebo (and with that sdformat) from source on my windows machine.\r\nI got everything to compile and work as I want, except sdformat.\r\n\r\nIt compiles just fine, following:\r\n[this tutorial](http://gazebosim.org/tutorials?tut=install_on_windows&cat=install)\r\n\r\nHowever, building gazebo keeps failing. Gazebo's CMake does find the SDFormatConfig, but rejects it. Gazebo is looking for Version >= 5.0.0 , the current SDFormat is version 6.0.0\r\n\r\nI assume that SDFormatConfigVersion.cmake sais, that 6.0.0 is not compatible with 5.X.X , but I did not investigate this further.\r\n\r\nI've removed the version requirement in gazebo's cmake as a quick and dirty fix and am trying to compile it now. So far it works just fine but I am not at the linking stage yet.\r\n\r\nAs I currently don't have a Bitbucket account feel free to relay any questions to \r\nsebastian@wallkoetter.net", "markup": "markdown", "html": "<p>I am building Gazebo (and with that sdformat) from source on my windows machine.\nI got everything to compile and work as I want, except sdformat.</p>\n<p>It compiles just fine, following:\n<a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=install_on_windows&amp;cat=install\" rel=\"nofollow\">this tutorial</a></p>\n<p>However, building gazebo keeps failing. Gazebo's CMake does find the SDFormatConfig, but rejects it. Gazebo is looking for Version &gt;= 5.0.0 , the current SDFormat is version 6.0.0</p>\n<p>I assume that SDFormatConfigVersion.cmake sais, that 6.0.0 is not compatible with 5.X.X , but I did not investigate this further.</p>\n<p>I've removed the version requirement in gazebo's cmake as a quick and dirty fix and am trying to compile it now. So far it works just fine but I am not at the linking stage yet.</p>\n<p>As I currently don't have a Bitbucket account feel free to relay any questions to \nsebastian@wallkoetter.net</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-02-28T11:11:08.610536+00:00", "milestone": null, "updated_on": "2017-02-28T11:11:08.610536+00:00", "type": "issue", "id": 150}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/151/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/151.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/151/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/151/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/151/trying-to-parse-an-invalid-file-gives-urdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/151/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Trying to parse an invalid file gives URDF parser error", "component": null, "votes": 1, "watches": 2, "content": {"raw": "When trying to parse an invalid SDF file, we get two error messages:\r\n\r\n~~~\r\nError [parser_urdf.cc:3423] Unable to call parseURDF on robot model\r\nError [parser.cc:340] parse as old deprecated model file failed.\r\n~~~\r\n\r\nThese messages are very misleading, because they suggest we're trying to parse an URDF file or a deprecated file, when in reality, it might simply be a malformed SDF file.\r\n\r\nWhat happens is that the [readString](#!/osrf/sdformat/src/e5104282e829bc88e484bd2f63af86f3bde6bd42/src/parser.cc?fileviewer=file-view-default#parser.cc-332) function first tries to load as an SDF, and if that fails, it silently tries to load the file as URDF.", "markup": "markdown", "html": "<p>When trying to parse an invalid SDF file, we get two error messages:</p>\n<div class=\"codehilite\"><pre><span></span>Error [parser_urdf.cc:3423] Unable to call parseURDF on robot model\nError [parser.cc:340] parse as old deprecated model file failed.\n</pre></div>\n\n\n<p>These messages are very misleading, because they suggest we're trying to parse an URDF file or a deprecated file, when in reality, it might simply be a malformed SDF file.</p>\n<p>What happens is that the <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/e5104282e829bc88e484bd2f63af86f3bde6bd42/src/parser.cc?fileviewer=file-view-default#parser.cc-332\" rel=\"nofollow\">readString</a> function first tries to load as an SDF, and if that fails, it silently tries to load the file as URDF.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-03-06T18:38:07.843362+00:00", "milestone": null, "updated_on": "2019-12-09T17:48:10.241395+00:00", "type": "issue", "id": 151}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/152/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/152.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/152/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/152/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/152/segmentation-fault-in-sdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/152/vote"}}, "reporter": {"display_name": "Dominic Jud", "uuid": "{a54b8beb-ec3d-4d25-9eb1-9c1032c013ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba54b8beb-ec3d-4d25-9eb1-9c1032c013ef%7D"}, "html": {"href": "https://bitbucket.org/%7Ba54b8beb-ec3d-4d25-9eb1-9c1032c013ef%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/2aae58ebf3b8210e14699f18ebdb7dd7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDJ-6.png"}}, "nickname": "djud", "type": "user", "account_id": "557058:7220a58c-7c69-4eba-90e7-e61456907af1"}, "title": "Segmentation Fault in sdf::getBestSupportedModelVersion", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Since the last update of sdformat4, there is a segmentation fault occurring that was not there before the update. I'm using gazebo7 and Ubuntu 14.04. The backtrace goes to sdf::getBestSupportedModelVersion.\r\n\r\nLog with the backtrace from GDB when running gazebo:\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\nstrlen () at ../sysdeps/x86_64/strlen.S:106\r\n106\t../sysdeps/x86_64/strlen.S: No such file or directory.\r\n(gdb) bt\r\n#0  strlen () at ../sysdeps/x86_64/strlen.S:106\r\n#1  0x00007ffff4eaf485 in sdf::getBestSupportedModelVersion(TiXmlElement*, std::string&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\r\n#2  0x00007ffff4eafaae in sdf::getModelFilePath(std::string const&) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\r\n#3  0x00007ffff4eb7a7d in sdf::readXml(TiXmlElement*, std::shared_ptr<sdf::Element>) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\r\n#4  0x00007ffff4eb54ec in sdf::readXml(TiXmlElement*, std::shared_ptr<sdf::Element>) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\r\n#5  0x00007ffff4eb7ff4 in sdf::readDoc(TiXmlDocument*, std::shared_ptr<sdf::SDF>, std::string const&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\r\n#6  0x00007ffff4eb89d8 in sdf::readFile(std::string const&, std::shared_ptr<sdf::SDF>) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\r\n#7  0x00007ffff7baedb4 in gazebo::Server::LoadFile(std::string const&, std::string const&) ()\r\n   from /usr/lib/x86_64-linux-gnu/libgazebo.so.7\r\n#8  0x00007ffff7bb088c in gazebo::Server::ParseArgs(int, char**) () from /usr/lib/x86_64-linux-gnu/libgazebo.so.7\r\n#9  0x00000000004024c9 in ?? ()\r\n#10 0x00007ffff6890f45 in __libc_start_main (main=0x4023e0, argc=10, argv=0x7fffffffc268, init=<optimized out>, fini=<optimized out>, \r\n    rtld_fini=<optimized out>, stack_end=0x7fffffffc258) at libc-start.c:287\r\n#11 0x0000000000402a38 in _start () \r\n```\r\n@scpeters As the author of the related PR: Is this a general bug or might it be a problem specific to me?", "markup": "markdown", "html": "<p>Since the last update of sdformat4, there is a segmentation fault occurring that was not there before the update. I'm using gazebo7 and Ubuntu 14.04. The backtrace goes to sdf::getBestSupportedModelVersion.</p>\n<p>Log with the backtrace from GDB when running gazebo:</p>\n<div class=\"codehilite\"><pre><span></span>Program received signal SIGSEGV, Segmentation fault.\nstrlen () at ../sysdeps/x86_64/strlen.S:106\n106 ../sysdeps/x86_64/strlen.S: No such file or directory.\n(gdb) bt\n#0  strlen () at ../sysdeps/x86_64/strlen.S:106\n#1  0x00007ffff4eaf485 in sdf::getBestSupportedModelVersion(TiXmlElement*, std::string&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\n#2  0x00007ffff4eafaae in sdf::getModelFilePath(std::string const&amp;) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\n#3  0x00007ffff4eb7a7d in sdf::readXml(TiXmlElement*, std::shared_ptr&lt;sdf::Element&gt;) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\n#4  0x00007ffff4eb54ec in sdf::readXml(TiXmlElement*, std::shared_ptr&lt;sdf::Element&gt;) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\n#5  0x00007ffff4eb7ff4 in sdf::readDoc(TiXmlDocument*, std::shared_ptr&lt;sdf::SDF&gt;, std::string const&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\n#6  0x00007ffff4eb89d8 in sdf::readFile(std::string const&amp;, std::shared_ptr&lt;sdf::SDF&gt;) () from /usr/lib/x86_64-linux-gnu/libsdformat.so.4\n#7  0x00007ffff7baedb4 in gazebo::Server::LoadFile(std::string const&amp;, std::string const&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libgazebo.so.7\n#8  0x00007ffff7bb088c in gazebo::Server::ParseArgs(int, char**) () from /usr/lib/x86_64-linux-gnu/libgazebo.so.7\n#9  0x00000000004024c9 in ?? ()\n#10 0x00007ffff6890f45 in __libc_start_main (main=0x4023e0, argc=10, argv=0x7fffffffc268, init=&lt;optimized out&gt;, fini=&lt;optimized out&gt;, \n    rtld_fini=&lt;optimized out&gt;, stack_end=0x7fffffffc258) at libc-start.c:287\n#11 0x0000000000402a38 in _start () \n</pre></div>\n\n\n<p>@scpeters As the author of the related PR: Is this a general bug or might it be a problem specific to me?</p>", "type": "rendered"}, "assignee": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-03-22T10:25:44.998263+00:00", "milestone": null, "updated_on": "2017-03-24T12:20:53.608966+00:00", "type": "issue", "id": 152}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/153/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/153.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/153/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/153/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/153/gazebo-vs-sdformat"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/153/vote"}}, "reporter": {"display_name": "Huckleberry Febbo", "uuid": "{90175c8d-da0b-4eac-8935-9cd4f3eb868c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B90175c8d-da0b-4eac-8935-9cd4f3eb868c%7D"}, "html": {"href": "https://bitbucket.org/%7B90175c8d-da0b-4eac-8935-9cd4f3eb868c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/239839660b2ab837b2356a2f8d27d0d8d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHF-4.png"}}, "nickname": "huckleberry_febbo", "type": "user", "account_id": "557058:76bbb081-dec1-4d1c-8bef-76cf2c3b2ac5"}, "title": "Gazebo vs SDformat?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I am interested in simulating an autonomous vehicle and I was looking into using Gazebo when I stumbled on SD format. I read the basic description of how SDformat was part of Gazebo and that it is now it's own thing. It also looks like Gazebo and SDformat can both help me accomplish my goal, but what I am wondering is, what is the difference. For one thing it does look like Gazebo has more documentation (unless maybe I did not find some resource that SDformat has).\r\n\r\nThanks!", "markup": "markdown", "html": "<p>I am interested in simulating an autonomous vehicle and I was looking into using Gazebo when I stumbled on SD format. I read the basic description of how SDformat was part of Gazebo and that it is now it's own thing. It also looks like Gazebo and SDformat can both help me accomplish my goal, but what I am wondering is, what is the difference. For one thing it does look like Gazebo has more documentation (unless maybe I did not find some resource that SDformat has).</p>\n<p>Thanks!</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": null, "edited_on": null, "created_on": "2017-03-22T22:36:29.424733+00:00", "milestone": null, "updated_on": "2017-03-23T19:02:07.723678+00:00", "type": "issue", "id": 153}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/154/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/154.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/154/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/154/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/154/add-model-tag-to-actor"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/154/vote"}}, "reporter": {"display_name": "Peter Mitrano", "uuid": "{f79f793e-4f31-4c61-9df2-190b239e0bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:b5298278-299c-4d16-b5aa-449d6d2db98d/e384924a-68d0-4825-9af2-9892e5f3417c/128"}}, "nickname": "peter_mitrano", "type": "user", "account_id": "557058:b5298278-299c-4d16-b5aa-449d6d2db98d"}, "title": "Add model tag to actor", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I'd like to suggest adding a `<model>` element within the actor element, so that it is easier to take a model you already have and script it. Currently, I copy and paste the link, joint, and plugin tags and it works as I expect, so I think sdf should be able to do that for me, similar to nested models.", "markup": "markdown", "html": "<p>I'd like to suggest adding a <code>&lt;model&gt;</code> element within the actor element, so that it is easier to take a model you already have and script it. Currently, I copy and paste the link, joint, and plugin tags and it works as I expect, so I think sdf should be able to do that for me, similar to nested models.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-03-24T14:21:29.636073+00:00", "milestone": null, "updated_on": "2017-03-24T17:22:01.199171+00:00", "type": "issue", "id": 154}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/155/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/155.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/155/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/155/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/155/support-data-uri-for-meshes-materials"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/155/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Support Data URI for meshes/materials", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently meshes and materials can be referred to using a uri like `model://my_model/meshes/mymesh.stl`. If the `<uri>` tag supported [data uri](https://en.wikipedia.org/wiki/Data_URI_scheme) The mesh or model could be base64 encoded and made part of the model or world file.\r\n\r\nThis would enable describing a world with just a single .world file. All the resources would be part of the world file.", "markup": "markdown", "html": "<p>Currently meshes and materials can be referred to using a uri like <code>model://my_model/meshes/mymesh.stl</code>. If the <code>&lt;uri&gt;</code> tag supported <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Data_URI_scheme\" rel=\"nofollow\">data uri</a> The mesh or model could be base64 encoded and made part of the model or world file.</p>\n<p>This would enable describing a world with just a single .world file. All the resources would be part of the world file.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-04-05T21:10:41.161996+00:00", "milestone": null, "updated_on": "2017-04-05T21:10:41.161996+00:00", "type": "issue", "id": 155}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/156/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/156.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/156/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/156/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/156/add-element-getelementcount"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/156/vote"}}, "reporter": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "title": "Add Element::GetElementCount()", "component": null, "votes": 1, "watches": 2, "content": {"raw": "The `Element` class is missing method `GetElementCount`, and probably also `IsEmpty`.\r\n\r\nThe first one should just return `this->dataPtr->elements.size()`, the latter could probably return true if the element has no attributes and no child elements.\r\n\r\nAdding at least the `GetElementCount` method would complete the API, where `GetAttributeCount` and `GetElementDescriptionCount` already exist.\r\n\r\nWithout this method, it is cumbersome to verify whether an element has any child elements. This is what I've come up with (it contains a completely useless object creation, which may get expensive):\r\n\r\n    auto isEmpty = element->GetFirstElement() != sdf::ElementPtr();\r\n\r\nThe cumbersomeness of this approach is elevated by the fact that `GetFirstElement` has no documentation at all, so there's no place that'd promise that `GetFirstElement` will always return a pointer to an empty element and not e.g. `nullptr`.", "markup": "markdown", "html": "<p>The <code>Element</code> class is missing method <code>GetElementCount</code>, and probably also <code>IsEmpty</code>.</p>\n<p>The first one should just return <code>this-&gt;dataPtr-&gt;elements.size()</code>, the latter could probably return true if the element has no attributes and no child elements.</p>\n<p>Adding at least the <code>GetElementCount</code> method would complete the API, where <code>GetAttributeCount</code> and <code>GetElementDescriptionCount</code> already exist.</p>\n<p>Without this method, it is cumbersome to verify whether an element has any child elements. This is what I've come up with (it contains a completely useless object creation, which may get expensive):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">auto</span> <span class=\"nt\">isEmpty</span> <span class=\"o\">=</span> <span class=\"nt\">element-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetFirstElement</span><span class=\"o\">()</span> <span class=\"o\">!=</span> <span class=\"nt\">sdf</span><span class=\"p\">::</span><span class=\"nd\">ElementPtr</span><span class=\"o\">();</span>\n</pre></div>\n\n\n<p>The cumbersomeness of this approach is elevated by the fact that <code>GetFirstElement</code> has no documentation at all, so there's no place that'd promise that <code>GetFirstElement</code> will always return a pointer to an empty element and not e.g. <code>nullptr</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-05-09T15:04:14.163165+00:00", "milestone": null, "updated_on": "2017-05-09T15:04:14.163165+00:00", "type": "issue", "id": 156}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/157/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/157.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/157/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/157/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/157/validating-an-sdf-from-the-c-api"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/157/vote"}}, "reporter": {"display_name": "stonier-tri", "uuid": "{df147a71-ec31-411c-b3b7-3bace0b40d64}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D"}, "html": {"href": "https://bitbucket.org/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f217cbf9d792ec7a44402d608e607bead=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-6.png"}}, "nickname": "stonier-tri", "type": "user", "account_id": "557058:05412d5e-1422-4161-b075-e8cdfb723072"}, "title": "Validating an sdf from the c++ api", "component": null, "votes": 0, "watches": 1, "content": {"raw": "@caguero and I talked about having a tool to validate an sdf - he mentioned there was one in gazebo. That would be useful here.\r\n\r\nEven better though would be a c++ api which you could use to validate an entire sdf. A tool could be very easily spun off from this api.\r\n\r\nOr is there something like this already?", "markup": "markdown", "html": "<p>@caguero and I talked about having a tool to validate an sdf - he mentioned there was one in gazebo. That would be useful here.</p>\n<p>Even better though would be a c++ api which you could use to validate an entire sdf. A tool could be very easily spun off from this api.</p>\n<p>Or is there something like this already?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-05-26T02:03:39.665904+00:00", "milestone": null, "updated_on": "2017-05-26T13:39:45.698951+00:00", "type": "issue", "id": 157}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/158/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/158.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/158/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/158/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/158/dev-version-of-api-docs-is-old"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/158/vote"}}, "reporter": {"display_name": "stonier-tri", "uuid": "{df147a71-ec31-411c-b3b7-3bace0b40d64}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D"}, "html": {"href": "https://bitbucket.org/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f217cbf9d792ec7a44402d608e607bead=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-6.png"}}, "nickname": "stonier-tri", "type": "user", "account_id": "557058:05412d5e-1422-4161-b075-e8cdfb723072"}, "title": "Dev version of api docs is old", "component": null, "votes": 0, "watches": 1, "content": {"raw": "http://sdformat.org/api\r\n\r\nThe dev one seems to be pointing at old (broken) api docs. The versioned ones are correct though.", "markup": "markdown", "html": "<p><a href=\"http://sdformat.org/api\" rel=\"nofollow\" class=\"ap-connect-link\">http://sdformat.org/api</a></p>\n<p>The dev one seems to be pointing at old (broken) api docs. The versioned ones are correct though.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-05-26T13:43:09.328056+00:00", "milestone": null, "updated_on": "2017-05-26T13:43:09.328056+00:00", "type": "issue", "id": 158}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/159/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/159.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/159/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/159/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/159/a-first-second-tutorial"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/159/vote"}}, "reporter": {"display_name": "stonier-tri", "uuid": "{df147a71-ec31-411c-b3b7-3bace0b40d64}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D"}, "html": {"href": "https://bitbucket.org/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f217cbf9d792ec7a44402d608e607bead=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-6.png"}}, "nickname": "stonier-tri", "type": "user", "account_id": "557058:05412d5e-1422-4161-b075-e8cdfb723072"}, "title": "A first/second tutorial", "component": null, "votes": 0, "watches": 1, "content": {"raw": "As discussed with @caguero - it would be great to have a couple of introductory tutorials on the [web site](http://sdformat.org/tutorials) that demonstrate how to build an sdf and then parse it with the c++ api.", "markup": "markdown", "html": "<p>As discussed with @caguero - it would be great to have a couple of introductory tutorials on the <a data-is-external-link=\"true\" href=\"http://sdformat.org/tutorials\" rel=\"nofollow\">web site</a> that demonstrate how to build an sdf and then parse it with the c++ api.</p>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-05-26T13:50:19.588618+00:00", "milestone": null, "updated_on": "2017-05-26T18:20:35.449330+00:00", "type": "issue", "id": 159}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/160/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/160.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/160/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/160/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/160/build-cop-sdformat-4-and-5-memory-leak"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/160/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "[Build cop] SDFormat 4 and 5 memory leak test fail on Windows", "component": null, "votes": 0, "watches": 1, "content": {"raw": "* https://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-sdformat4-windows7-amd64/39/testReport/junit/(root)/ElementMemoryLeak/SDFCreateDestroy/\r\n* https://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-sdformat5-windows7-amd64/17/testReport/junit/(root)/ElementMemoryLeak/SDFCreateDestroy/\r\n\r\n~~~\r\n39: [ RUN      ] ElementMemoryLeak.SDFCreateDestroy\r\n39:   File \"D:/Jenkins/workspace/sdformat-ci-sdformat4-windows7-amd64/workspace/sdformat/tools/get_mem_info.py\", line 12\r\n39:     print memory_info[0]\r\n39:                     ^\r\n39: SyntaxError: invalid syntax\r\n39: unknown file: error: C++ exception with description \"invalid stoi argument\" thrown in the test body.\r\n39: [  FAILED  ] ElementMemoryLeak.SDFCreateDestroy (31 ms)\r\n~~~", "markup": "markdown", "html": "<ul>\n<li><a href=\"https://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-sdformat4-windows7-amd64/39/testReport/junit/(root)/ElementMemoryLeak/SDFCreateDestroy/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-sdformat4-windows7-amd64/39/testReport/junit/(root)/ElementMemoryLeak/SDFCreateDestroy/</a></li>\n<li><a href=\"https://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-sdformat5-windows7-amd64/17/testReport/junit/(root)/ElementMemoryLeak/SDFCreateDestroy/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/view/main/view/BuildCopTests/job/sdformat-ci-sdformat5-windows7-amd64/17/testReport/junit/(root)/ElementMemoryLeak/SDFCreateDestroy/</a></li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>39: [ RUN      ] ElementMemoryLeak.SDFCreateDestroy\n39:   File &quot;D:/Jenkins/workspace/sdformat-ci-sdformat4-windows7-amd64/workspace/sdformat/tools/get_mem_info.py&quot;, line 12\n39:     print memory_info[0]\n39:                     ^\n39: SyntaxError: invalid syntax\n39: unknown file: error: C++ exception with description &quot;invalid stoi argument&quot; thrown in the test body.\n39: [  FAILED  ] ElementMemoryLeak.SDFCreateDestroy (31 ms)\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-05-26T23:33:45.513409+00:00", "milestone": null, "updated_on": "2017-07-11T17:56:36.584568+00:00", "type": "issue", "id": 160}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/161/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/161.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/161/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/161/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/161/output-of-console-class-not-working-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/161/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Output of Console class not working on Windows", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There was a problem with messages from the `Console` class in the jenkins tests on windows reported in #116, and that was resolved, but the console messages don't actually appear on Windows.\r\n\r\nI'm not sure how to test for this, but it's easy to see if you look at the jenkins console output.", "markup": "markdown", "html": "<p>There was a problem with messages from the <code>Console</code> class in the jenkins tests on windows reported in <a href=\"#!/osrf/sdformat/issues/116/windows-test-failures-in-jenkins-when\" rel=\"nofollow\" title=\"Windows test failures in jenkins when writing console messages\" class=\"ap-connect-link\"><s>#116</s></a>, and that was resolved, but the console messages don't actually appear on Windows.</p>\n<p>I'm not sure how to test for this, but it's easy to see if you look at the jenkins console output.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-07-10T20:40:43.204683+00:00", "milestone": null, "updated_on": "2017-07-11T18:00:52.129243+00:00", "type": "issue", "id": 161}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/162/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/162.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/162/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/162/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/162/add-console_testcc-test-that-ensures-we"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/162/vote"}}, "reporter": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "title": "Add Console_TEST.cc test that ensures we are getting output", "component": null, "votes": 0, "watches": 1, "content": {"raw": "@chapulina pointed out that gazebo has a test ensuring that the console is actually printing what we expect, when we expect it.  It does this by writing the output to a file, then checking that the file is what we expect.  It is implemented here:\r\n\r\nhttps://bitbucket.org/osrf/gazebo/src/45f77842932c95d747d2f20df98aed613792b295/gazebo/common/Console_TEST.cc?fileviewer=file-view-default\r\n\r\nhttps://bitbucket.org/osrf/gazebo/src/45f77842932c95d747d2f20df98aed613792b295/test/util.hh?fileviewer=file-view-default#util.hh-66\r\n\r\nWe should do a similar thing in sdformat.", "markup": "markdown", "html": "<p>@chapulina pointed out that gazebo has a test ensuring that the console is actually printing what we expect, when we expect it.  It does this by writing the output to a file, then checking that the file is what we expect.  It is implemented here:</p>\n<p><a href=\"https://bitbucket.org/osrf/gazebo/src/45f77842932c95d747d2f20df98aed613792b295/gazebo/common/Console_TEST.cc?fileviewer=file-view-default\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/src/45f77842932c95d747d2f20df98aed613792b295/gazebo/common/Console_TEST.cc?fileviewer=file-view-default</a></p>\n<p><a href=\"https://bitbucket.org/osrf/gazebo/src/45f77842932c95d747d2f20df98aed613792b295/test/util.hh?fileviewer=file-view-default#util.hh-66\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/src/45f77842932c95d747d2f20df98aed613792b295/test/util.hh?fileviewer=file-view-default#util.hh-66</a></p>\n<p>We should do a similar thing in sdformat.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-07-11T18:57:12.823754+00:00", "milestone": null, "updated_on": "2017-07-13T15:06:34.599775+00:00", "type": "issue", "id": 162}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/163/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/163.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/163/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/163/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/163/urdf-conversion-sdf-version"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/163/vote"}}, "reporter": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "title": "URDF conversion, SDF version", "component": null, "votes": 0, "watches": 1, "content": {"raw": "`parser_urdf.cc` converts urdf xml to [sdf 1.4 xml](#!/osrf/sdformat/src/bac3dfb42cc72cb609c0bcdbef2064326f5061dd/src/parser_urdf.cc?at=default&fileviewer=file-view-default#parser_urdf.cc-3155), which is subsequently converted to the current sdf version. It would be preferable to convert the urdf to a more recent sdf version. For example, the <use_parent_model_frame> elements introduced  by the conversion process from version 1.4 could be avoided.", "markup": "markdown", "html": "<p><code>parser_urdf.cc</code> converts urdf xml to <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/bac3dfb42cc72cb609c0bcdbef2064326f5061dd/src/parser_urdf.cc?at=default&amp;fileviewer=file-view-default#parser_urdf.cc-3155\" rel=\"nofollow\">sdf 1.4 xml</a>, which is subsequently converted to the current sdf version. It would be preferable to convert the urdf to a more recent sdf version. For example, the &lt;use_parent_model_frame&gt; elements introduced  by the conversion process from version 1.4 could be avoided.</p>", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": null, "edited_on": null, "created_on": "2017-07-13T16:20:28.519072+00:00", "milestone": null, "updated_on": "2018-05-24T23:28:45.451754+00:00", "type": "issue", "id": 163}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/164/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/164.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/164/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/164/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/164/gz-sdf-segmentation-fault-11-due-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/164/vote"}}, "reporter": {"display_name": "Nuno Guedelha", "uuid": "{5e1f6c72-9509-4dd5-93dc-91cc9fdc8c20}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5e1f6c72-9509-4dd5-93dc-91cc9fdc8c20%7D"}, "html": {"href": "https://bitbucket.org/%7B5e1f6c72-9509-4dd5-93dc-91cc9fdc8c20%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5ae8ca67c366d3973281c37037184af6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsNG-3.png"}}, "nickname": "gnuno", "type": "user", "account_id": "557058:dbe09322-7d6f-4275-93ad-4add344f78ec"}, "title": "gz sdf segmentation fault 11 due to conflict between <sensor> and <collision> tags", "component": null, "votes": 2, "watches": 4, "content": {"raw": "The issue can be reproduced on a simple URDF model defined by:\r\n\r\n* a single link \"r_foot\" with <inertial/> <visual/> and <collision/> tags\r\n* an IMU sensor \"r_foot_acc\" embedded in a <gazebo/> tag\r\n* stiffness, contact parameters, along with a <collision><surface><bounce> blob, all embedded in a <gazebo/> tag\r\n\r\nWe run the urdf->sdf conversion as follows:\r\n\r\n```\r\n#!shell\r\ngz sdf -p <model_file>.urdf > <model_file>.sdf\r\n```\r\nIf the sensor is defined after the stiffness and bounce parameters (singleLinkModel_V1.urdf), the convertion runs successfully.\r\nIf we invert the order, i.e. the sensor is defined before the collision/bounce parameters (singleLinkModel_V2.urdf), the commnd `gz` fails with a **\"segmentation fault 11\"**.", "markup": "markdown", "html": "<p>The issue can be reproduced on a simple URDF model defined by:</p>\n<ul>\n<li>a single link \"r_foot\" with &lt;inertial/&gt; &lt;visual/&gt; and &lt;collision/&gt; tags</li>\n<li>an IMU sensor \"r_foot_acc\" embedded in a &lt;gazebo/&gt; tag</li>\n<li>stiffness, contact parameters, along with a &lt;collision&gt;&lt;surface&gt;&lt;bounce&gt; blob, all embedded in a &lt;gazebo/&gt; tag</li>\n</ul>\n<p>We run the urdf-&gt;sdf conversion as follows:</p>\n<div class=\"codehilite language-shell\"><pre><span></span>gz sdf -p &lt;model_file&gt;.urdf &gt; &lt;model_file&gt;.sdf\n</pre></div>\n\n\n<p>If the sensor is defined after the stiffness and bounce parameters (singleLinkModel_V1.urdf), the convertion runs successfully.\nIf we invert the order, i.e. the sensor is defined before the collision/bounce parameters (singleLinkModel_V2.urdf), the commnd <code>gz</code> fails with a <strong>\"segmentation fault 11\"</strong>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2017-07-18T22:54:44.052134+00:00", "milestone": null, "updated_on": "2017-07-25T19:20:00.881707+00:00", "type": "issue", "id": 164}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/165/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/165.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/165/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/165/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/165/issue-when-attempting-to-scale-model"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/165/vote"}}, "reporter": null, "title": "Issue when attempting to scale model", "component": null, "votes": 0, "watches": null, "content": {"raw": "When I attempt to use the <scale> tag in the file it simply spits back that \r\n```\r\nXML Element[scale], child of element[model] not defined in SDF. Ignoring[scale]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.\r\n```\r\nI put the scale tag under model [as is said here](http://sdformat.org/spec?ver=1.6&elem=state#model_scale). Can anyone advise? Thanks", "markup": "markdown", "html": "<p>When I attempt to use the &lt;scale&gt; tag in the file it simply spits back that </p>\n<div class=\"codehilite\"><pre><span></span>XML Element[scale], child of element[model] not defined in SDF. Ignoring[scale]. You may have an incorrect SDF file, or an sdformat version that doesn&#39;t support this element.\n</pre></div>\n\n\n<p>I put the scale tag under model <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=state#model_scale\" rel=\"nofollow\">as is said here</a>. Can anyone advise? Thanks</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-11T21:15:29.607097+00:00", "milestone": null, "updated_on": "2017-08-12T00:44:17.734323+00:00", "type": "issue", "id": 165}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/166/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/166.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/166/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/166/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/166/lacks-a-way-to-specify-the-vertical-field"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/166/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "<camera> lacks a way to specify the vertical field of view", "component": null, "votes": 0, "watches": 1, "content": {"raw": "sdf spec 1.6\r\n\r\nThe `<camera>` allows specifying the horizontal field of view, image width, and image height, but not the vertical field of view. Gazebo calculates the vertical field of view using  ` vfov = 2.0 * atan(tan(hfov / 2.0) / ratio)` where `ratio = width / height`.\r\n\r\nThe vertical field of view of a simulated camera doesn't have to obey that formula. For example Ogre allows changing the vertical field of view [directly](http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_camera.html#aa6f83f76980139d6a9c36abf635e0c75) or by [setting an aspect ratio](http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_frustum.html#a3235cda8bbc2ae127082e191ae11bcb0). The `<camera>` tag could have an `<aspect_ratio>` or `<vertical_fov>` so it could be specified in SDF. I have not checked if there are real cameras that would require this setting to be simulated correctly.", "markup": "markdown", "html": "<p>sdf spec 1.6</p>\n<p>The <code>&lt;camera&gt;</code> allows specifying the horizontal field of view, image width, and image height, but not the vertical field of view. Gazebo calculates the vertical field of view using  <code>vfov = 2.0 * atan(tan(hfov / 2.0) / ratio)</code> where <code>ratio = width / height</code>.</p>\n<p>The vertical field of view of a simulated camera doesn't have to obey that formula. For example Ogre allows changing the vertical field of view <a data-is-external-link=\"true\" href=\"http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_camera.html#aa6f83f76980139d6a9c36abf635e0c75\" rel=\"nofollow\">directly</a> or by <a data-is-external-link=\"true\" href=\"http://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_frustum.html#a3235cda8bbc2ae127082e191ae11bcb0\" rel=\"nofollow\">setting an aspect ratio</a>. The <code>&lt;camera&gt;</code> tag could have an <code>&lt;aspect_ratio&gt;</code> or <code>&lt;vertical_fov&gt;</code> so it could be specified in SDF. I have not checked if there are real cameras that would require this setting to be simulated correctly.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-29T22:29:00.354188+00:00", "milestone": null, "updated_on": "2017-08-29T22:31:30.741816+00:00", "type": "issue", "id": 166}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/167/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/167.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/167/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/167/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/167/continuous-documentation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/167/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Continuous documentation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We should setup \"continuous deployment\" for documentation, so the [spec website](http://sdformat.org/spec) is updated with the latest documentation when pull requests are merged into release / dev branches, or when new release tags are created.\r\n\r\nSee the comments on [this](http://answers.gazebosim.org/question/17207/why-are-heightmaps-subsampled/) question.", "markup": "markdown", "html": "<p>We should setup \"continuous deployment\" for documentation, so the <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec\" rel=\"nofollow\">spec website</a> is updated with the latest documentation when pull requests are merged into release / dev branches, or when new release tags are created.</p>\n<p>See the comments on <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/17207/why-are-heightmaps-subsampled/\" rel=\"nofollow\">this</a> question.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-10T18:04:25.661207+00:00", "milestone": null, "updated_on": "2017-09-10T18:04:25.661207+00:00", "type": "issue", "id": 167}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/168/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/168.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/168/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/168/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/168/sdformat-pushes-visual-plugin-comments"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/168/vote"}}, "reporter": {"display_name": "Piyush Khandelwal", "uuid": "{0aafe920-14b3-4b46-927d-421c6f4e90f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0aafe920-14b3-4b46-927d-421c6f4e90f2%7D"}, "html": {"href": "https://bitbucket.org/%7B0aafe920-14b3-4b46-927d-421c6f4e90f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4c0a1652789850a7953553e6d883eb06d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPK-1.png"}}, "nickname": "piyushk", "type": "user", "account_id": "557058:f6cfe420-cf98-45d4-b1ff-8a554ca13fd0"}, "title": "sdformat pushes visual plugin comments inside `<sdf></sdf>` tags", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I have a sdf file that contains a visual plugin. As per this thread (http://answers.gazebosim.org/question/13494/warning-and-fail-to-read-an-sdf-element-converting-a-deprecated-sdf-sourcedata-string/), sdformat pushes the contents of the visual plugin insided `<sdf></sdf>` tags.\r\n\r\nHere's an example:\r\n```\r\n<sdf version=\"1.6\">\r\n  <model>\r\n    <link>\r\n      <visual>\r\n        <plugin name='FieldGroundPlugin' filename='libFieldGroundPlugin.so'>  \r\n          <path>example</path>\r\n        </plugin>\r\n...\r\n```\r\ngets converted to:\r\n```\r\n<sdf version=\"1.6\">\r\n  <model>\r\n    <link>\r\n      <visual>\r\n        <plugin name='FieldGroundPlugin' filename='libFieldGroundPlugin.so'>\r\n          <sdf>\r\n            <path>example</path>\r\n          </sdf>\r\n        </plugin>\r\n...\r\n```\r\n\r\nIt then complains about the self-inserted sdf tag with a spurious warning:\r\n```\r\nWarning [parser.cc:437] Converting a deprecated SDF source[data-string].\r\n```\r\n\r\nI don't fully understand the justification for pushing the contents into an <sdf> tag, but in any case, the warning should be eliminated.", "markup": "markdown", "html": "<p>I have a sdf file that contains a visual plugin. As per this thread (<a href=\"http://answers.gazebosim.org/question/13494/warning-and-fail-to-read-an-sdf-element-converting-a-deprecated-sdf-sourcedata-string/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/question/13494/warning-and-fail-to-read-an-sdf-element-converting-a-deprecated-sdf-sourcedata-string/</a>), sdformat pushes the contents of the visual plugin insided <code>&lt;sdf&gt;&lt;/sdf&gt;</code> tags.</p>\n<p>Here's an example:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model&gt;</span>\n    <span class=\"nt\">&lt;link&gt;</span>\n      <span class=\"nt\">&lt;visual&gt;</span>\n        <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&#39;FieldGroundPlugin&#39;</span> <span class=\"na\">filename=</span><span class=\"s\">&#39;libFieldGroundPlugin.so&#39;</span><span class=\"nt\">&gt;</span>  \n          <span class=\"nt\">&lt;path&gt;</span>example<span class=\"nt\">&lt;/path&gt;</span>\n        <span class=\"nt\">&lt;/plugin&gt;</span>\n...\n</pre></div>\n\n\n<p>gets converted to:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model&gt;</span>\n    <span class=\"nt\">&lt;link&gt;</span>\n      <span class=\"nt\">&lt;visual&gt;</span>\n        <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&#39;FieldGroundPlugin&#39;</span> <span class=\"na\">filename=</span><span class=\"s\">&#39;libFieldGroundPlugin.so&#39;</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;sdf&gt;</span>\n            <span class=\"nt\">&lt;path&gt;</span>example<span class=\"nt\">&lt;/path&gt;</span>\n          <span class=\"nt\">&lt;/sdf&gt;</span>\n        <span class=\"nt\">&lt;/plugin&gt;</span>\n...\n</pre></div>\n\n\n<p>It then complains about the self-inserted sdf tag with a spurious warning:</p>\n<div class=\"codehilite\"><pre><span></span>Warning [parser.cc:437] Converting a deprecated SDF source[data-string].\n</pre></div>\n\n\n<p>I don't fully understand the justification for pushing the contents into an &lt;sdf&gt; tag, but in any case, the warning should be eliminated.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-29T21:20:47.375486+00:00", "milestone": null, "updated_on": "2018-01-22T07:57:14.187424+00:00", "type": "issue", "id": 168}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/169/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/169.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/169/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/169/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/169/proposal-make-elements-optional-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/169/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "Proposal: Make <joint>::<axis>::<limit>::<lower>/<upper> elements optional and default to unbounded", "component": null, "votes": 0, "watches": 1, "content": {"raw": "According to [the documentation](http://sdformat.org/spec?ver=1.6&elem=joint#limit_lower), if an `<axis>` element is specified, then a `<limit>` element is required, which then requires both `<lower>` and `<upper>` elements. \r\n\r\nMany users might not realize that they can safely use `inf` or `-inf` in their sdf to express unbounded limits, and that may influence them to exercise questionable practices, like using `<upper>99999999999</upper>` to get the behavior they want.\r\n\r\nWe could make `<lower>` and `<upper>` optional elements whose values default to be unbounded (-/+inf). I think it's intuitive that if a user declines to specify a limit, then we should assume there is no limit.\r\n\r\nI believe this change would also be backwards compatible with existing SDFs.", "markup": "markdown", "html": "<p>According to <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=joint#limit_lower\" rel=\"nofollow\">the documentation</a>, if an <code>&lt;axis&gt;</code> element is specified, then a <code>&lt;limit&gt;</code> element is required, which then requires both <code>&lt;lower&gt;</code> and <code>&lt;upper&gt;</code> elements. </p>\n<p>Many users might not realize that they can safely use <code>inf</code> or <code>-inf</code> in their sdf to express unbounded limits, and that may influence them to exercise questionable practices, like using <code>&lt;upper&gt;99999999999&lt;/upper&gt;</code> to get the behavior they want.</p>\n<p>We could make <code>&lt;lower&gt;</code> and <code>&lt;upper&gt;</code> optional elements whose values default to be unbounded (-/+inf). I think it's intuitive that if a user declines to specify a limit, then we should assume there is no limit.</p>\n<p>I believe this change would also be backwards compatible with existing SDFs.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-10-27T19:28:50.418715+00:00", "milestone": null, "updated_on": "2017-10-27T21:25:21.917544+00:00", "type": "issue", "id": 169}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/170/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/170.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/170/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/170/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/170/update-documentation-on-joints-frames"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/170/vote"}}, "reporter": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "title": "Update documentation on joints' frames specifying defaults and conventions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Reading the documentation for an SDF's joint axis [here](http://sdformat.org/spec?ver=1.6&elem=joint#axis_use_parent_model_frame) I had the following questions:\r\n\r\n1. `use_parent_model_frame=true` means...? the `<model>`  frame I believe, could it be confirmed? the word \"parent\" overloads with \"parent body\" in the same `<joint>` doc and thus the confusion.\r\n2. `use_parent_model_frame=false` means... the \"joint frame\". How is this \"joint frame\" defined? where is the origin of this joint frame?\r\n\r\nIn version 1.6 the [documentation for <pose>](http://sdformat.org/spec?ver=1.6&elem=joint#joint_pose) does not state the default when the `<pose>` itself or the `<frame>` in which this pose is measured, are not specified.\r\nHowever, [version 1.4 doc](http://sdformat.org/spec?ver=1.4&elem=joint#joint_pose) does state that the default is the identity transform \"in the child link frame\" (ala urdf, makes sense).\r\n\r\nThe questions are:\r\n\r\n1. Why didn't this doc make it to 1.6. Clearly default pose and frames need to be stated for a non-ambiguous description.\r\n2. Unless the convention changed in 1.6?\r\n\r\nIt seems that, in current version 1.6 an old issue, 494, is mentioned. Is that fully resolved?\r\n\r\nFinally, nothing is said about the joint frame on the \"parent\" body. It'd seem that the implicit convention is that this frame gets defined by making it coincident with the frame on the child body (referred to as, I believe, the \"joint frame\"). If this is true, it should be explicitly stated somewhere. If not, the documentation should be updated to reflect the actual convention.", "markup": "markdown", "html": "<p>Reading the documentation for an SDF's joint axis <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=joint#axis_use_parent_model_frame\" rel=\"nofollow\">here</a> I had the following questions:</p>\n<ol>\n<li><code>use_parent_model_frame=true</code> means...? the <code>&lt;model&gt;</code>  frame I believe, could it be confirmed? the word \"parent\" overloads with \"parent body\" in the same <code>&lt;joint&gt;</code> doc and thus the confusion.</li>\n<li><code>use_parent_model_frame=false</code> means... the \"joint frame\". How is this \"joint frame\" defined? where is the origin of this joint frame?</li>\n</ol>\n<p>In version 1.6 the <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=joint#joint_pose\" rel=\"nofollow\">documentation for &lt;pose&gt;</a> does not state the default when the <code>&lt;pose&gt;</code> itself or the <code>&lt;frame&gt;</code> in which this pose is measured, are not specified.\nHowever, <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.4&amp;elem=joint#joint_pose\" rel=\"nofollow\">version 1.4 doc</a> does state that the default is the identity transform \"in the child link frame\" (ala urdf, makes sense).</p>\n<p>The questions are:</p>\n<ol>\n<li>Why didn't this doc make it to 1.6. Clearly default pose and frames need to be stated for a non-ambiguous description.</li>\n<li>Unless the convention changed in 1.6?</li>\n</ol>\n<p>It seems that, in current version 1.6 an old issue, 494, is mentioned. Is that fully resolved?</p>\n<p>Finally, nothing is said about the joint frame on the \"parent\" body. It'd seem that the implicit convention is that this frame gets defined by making it coincident with the frame on the child body (referred to as, I believe, the \"joint frame\"). If this is true, it should be explicitly stated somewhere. If not, the documentation should be updated to reflect the actual convention.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-11-02T20:50:12.647737+00:00", "milestone": null, "updated_on": "2017-11-17T17:04:15.907069+00:00", "type": "issue", "id": 170}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/171/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/171.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/171/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/171/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/171/update-documentation-on-link-frames"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/171/vote"}}, "reporter": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "title": "Update documentation on link' frames specifying defaults and conventions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The `<pose>` element allow us to specify the position of a `<link>`. Now, in what frame? according to [current 1.6 documentation](http://sdformat.org/spec?ver=1.6&elem=link#link_pose) the `<pose>` is specified in a given `<frame>`. However the documentation does not state the default values for either `<pose>` nor `<frame>` when these are not specified.\r\n\r\nThere seems to be another mechanism to specify the pose of a link, [using a `<frame>` ](http://sdformat.org/spec?ver=1.6&elem=link#link_frame)element. However default values for none of its child elements are provided. If both are provided, `<frame>` and `<pose>` at the same level (they are siblings), which one should we give preference to? does `sdf::SDF()` throw an exception or emit a message of  any kind? should it?\r\n\r\n[The documentation in version 1.4](http://sdformat.org/spec?ver=1.4&elem=link#link_pose) is more precise, specifying default value of the pose (the identity) and in what frame (the model frame). Also, by not providing `<frame>` options it does not introduce any ambiguities, though it might not be as general.", "markup": "markdown", "html": "<p>The <code>&lt;pose&gt;</code> element allow us to specify the position of a <code>&lt;link&gt;</code>. Now, in what frame? according to <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=link#link_pose\" rel=\"nofollow\">current 1.6 documentation</a> the <code>&lt;pose&gt;</code> is specified in a given <code>&lt;frame&gt;</code>. However the documentation does not state the default values for either <code>&lt;pose&gt;</code> nor <code>&lt;frame&gt;</code> when these are not specified.</p>\n<p>There seems to be another mechanism to specify the pose of a link, <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=link#link_frame\" rel=\"nofollow\">using a <code>&lt;frame&gt;</code> </a>element. However default values for none of its child elements are provided. If both are provided, <code>&lt;frame&gt;</code> and <code>&lt;pose&gt;</code> at the same level (they are siblings), which one should we give preference to? does <code>sdf::SDF()</code> throw an exception or emit a message of  any kind? should it?</p>\n<p><a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.4&amp;elem=link#link_pose\" rel=\"nofollow\">The documentation in version 1.4</a> is more precise, specifying default value of the pose (the identity) and in what frame (the model frame). Also, by not providing <code>&lt;frame&gt;</code> options it does not introduce any ambiguities, though it might not be as general.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-11-02T21:03:22.113234+00:00", "milestone": null, "updated_on": "2018-09-06T00:15:14.877224+00:00", "type": "issue", "id": 171}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/172/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/172.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/172/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/172/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/172/allow-parsing-sdf-from-std-istream"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/172/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Allow parsing SDF from `std::istream`", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Currently the API for parsing SDF has two methods `readFile` and `readString`. Reading from an `std::istream` would give users more options in where the SDF content comes from.\r\n\r\nThe implementations of `readFile` and `readString` could be replaced with a call to the `std::istream` version. `readFile` would pass in an open `std:ifstream` while the `readString` would pass in `std::stringstream`.", "markup": "markdown", "html": "<p>Currently the API for parsing SDF has two methods <code>readFile</code> and <code>readString</code>. Reading from an <code>std::istream</code> would give users more options in where the SDF content comes from.</p>\n<p>The implementations of <code>readFile</code> and <code>readString</code> could be replaced with a call to the <code>std::istream</code> version. <code>readFile</code> would pass in an open <code>std:ifstream</code> while the <code>readString</code> would pass in <code>std::stringstream</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-12-13T17:37:01.007033+00:00", "milestone": null, "updated_on": "2017-12-13T17:37:01.007033+00:00", "type": "issue", "id": 172}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/173/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/173.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/173/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/173/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/173/write-a-once-and-reuse-it"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/173/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Write a <geometry> once and reuse it", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Issue\r\n\r\nIt feels tedious to type or copy/paste `<geometry>` when multiple collisions/visuals use the same geometry. Making changes becomes prone to copy/paste errors when a lot of places have the same information.\r\n\r\n# Proposal\r\n\r\n* Add an optional attribute `name` to `<geometry>`\r\n* Add a child tag `<uri>` that allows referencing a geometry by a scoped name\r\n\r\n\r\n```xml\r\n<model name=\"my_car\">\r\n  <link name=\"some_link\">\r\n    <visual name=\"its_visual\">\r\n      <geometry name=\"some_geom\">\r\n        <box><size>1 1 1</size></box>\r\n      </geometry>\r\n    </visual>\r\n    <collision name=\"its_collision\">\r\n      <geometry>\r\n        <uri>model://my_car/some_link/its_visual/some_geom</uri>\r\n      </geometry>\r\n    </visual>\r\n   </link>\r\n</model>\r\n```\r\n\r\n\r\n# Alternatives\r\n\r\nAn alternative to this proposal is to have a tag that contains geometries that can be referenced. This is similar to Collada's `<library_geometries>` ([Chapter 5 page 65](https://www.khronos.org/files/collada_spec_1_4.pdf))\r\n\r\nEnhancement #75 could be an alternative to this proposal by allowing `<include>` to include `<geometry>`.", "markup": "markdown", "html": "<h1 id=\"markdown-header-issue\">Issue</h1>\n<p>It feels tedious to type or copy/paste <code>&lt;geometry&gt;</code> when multiple collisions/visuals use the same geometry. Making changes becomes prone to copy/paste errors when a lot of places have the same information.</p>\n<h1 id=\"markdown-header-proposal\">Proposal</h1>\n<ul>\n<li>Add an optional attribute <code>name</code> to <code>&lt;geometry&gt;</code></li>\n<li>Add a child tag <code>&lt;uri&gt;</code> that allows referencing a geometry by a scoped name</li>\n</ul>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;my_car&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;some_link&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&quot;its_visual&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry</span> <span class=\"na\">name=</span><span class=\"s\">&quot;some_geom&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;box&gt;&lt;size&gt;</span>1 1 1<span class=\"nt\">&lt;/size&gt;&lt;/box&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;its_collision&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;uri&gt;</span>model://my_car/some_link/its_visual/some_geom<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n   <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<h1 id=\"markdown-header-alternatives\">Alternatives</h1>\n<p>An alternative to this proposal is to have a tag that contains geometries that can be referenced. This is similar to Collada's <code>&lt;library_geometries&gt;</code> (<a data-is-external-link=\"true\" href=\"https://www.khronos.org/files/collada_spec_1_4.pdf\" rel=\"nofollow\">Chapter 5 page 65</a>)</p>\n<p>Enhancement <a href=\"#!/osrf/sdformat/issues/75/allow-inclusion-of-links-collisions-and\" rel=\"nofollow\" title=\"Allow inclusion of links, collisions, and visuals\" class=\"ap-connect-link\">#75</a> could be an alternative to this proposal by allowing <code>&lt;include&gt;</code> to include <code>&lt;geometry&gt;</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-02-08T21:44:05.390583+00:00", "milestone": null, "updated_on": "2018-08-21T23:48:40.853973+00:00", "type": "issue", "id": 173}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/174/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/174.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/174/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/174/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/174/remove-from"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/174/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Remove `<empty>` from `<geometry>`", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The 1.6 spec allows an emtpy geometry via the tag `<empty>`.  XML already has mechanisms for empty tags though.\r\n\r\n```\r\n<geometry>\r\n  <empty/>\r\n</geometry>\r\n```\r\n\r\nThe `<empty>` tag could be eliminated by making these legal SDF\r\n```\r\n<geometry></geometry>\r\n```\r\n\r\nor equivalently\r\n```\r\n<geometry/>\r\n```", "markup": "markdown", "html": "<p>The 1.6 spec allows an emtpy geometry via the tag <code>&lt;empty&gt;</code>.  XML already has mechanisms for empty tags though.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;geometry&gt;</span>\n  <span class=\"nt\">&lt;empty/&gt;</span>\n<span class=\"nt\">&lt;/geometry&gt;</span>\n</pre></div>\n\n\n<p>The <code>&lt;empty&gt;</code> tag could be eliminated by making these legal SDF</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;geometry&gt;&lt;/geometry&gt;</span>\n</pre></div>\n\n\n<p>or equivalently</p>\n<div class=\"codehilite\"><pre><span></span>&lt;geometry/&gt;\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-02-08T21:47:21.630291+00:00", "milestone": null, "updated_on": "2018-02-08T21:47:21.630291+00:00", "type": "issue", "id": 174}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/175/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/175.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/175/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/175/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/175/remove-attribute-type-from-and-infer-type"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/175/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Remove attribute `type` from `<sensor>` and infer type from child tags", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Issue\r\nThe type attribute duplicates information that can be inferred from the child tags. It also gets in the way of custom sensors that don't fit one of the predefined types.\r\n\r\n\r\n# Proposal\r\n\r\nThis proposes to remove the attribute `type` from the tag `<sensor>`. \r\nThis sensor is a camera sensor because it has parameters for a camera.\r\n\r\n```xml\r\n<sensor name=\"some_camera\">\r\n    <pose>...</pose>\r\n    <camera>...</camera>\r\n</sensor>\r\n```\r\n\r\nThis sensor doesn't have a type known by SDFormat, but that's OK because a plugin is responsible for it.\r\n\r\n```xml\r\n<sensor name=\"some_camera\">\r\n    <pose>...</pose>\r\n    <plugin name=\"microphone_sensor_plugin\">...</plugin>\r\n</sensor>\r\n```", "markup": "markdown", "html": "<h1 id=\"markdown-header-issue\">Issue</h1>\n<p>The type attribute duplicates information that can be inferred from the child tags. It also gets in the way of custom sensors that don't fit one of the predefined types.</p>\n<h1 id=\"markdown-header-proposal\">Proposal</h1>\n<p>This proposes to remove the attribute <code>type</code> from the tag <code>&lt;sensor&gt;</code>. \nThis sensor is a camera sensor because it has parameters for a camera.</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;sensor</span> <span class=\"na\">name=</span><span class=\"s\">&quot;some_camera&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;camera&gt;</span>...<span class=\"nt\">&lt;/camera&gt;</span>\n<span class=\"nt\">&lt;/sensor&gt;</span>\n</pre></div>\n\n\n<p>This sensor doesn't have a type known by SDFormat, but that's OK because a plugin is responsible for it.</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;sensor</span> <span class=\"na\">name=</span><span class=\"s\">&quot;some_camera&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>...<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;microphone_sensor_plugin&quot;</span><span class=\"nt\">&gt;</span>...<span class=\"nt\">&lt;/plugin&gt;</span>\n<span class=\"nt\">&lt;/sensor&gt;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-02-08T21:58:21.120597+00:00", "milestone": null, "updated_on": "2018-02-09T00:53:12.163770+00:00", "type": "issue", "id": 175}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/176/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/176.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/176/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/176/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/176/allow-a-subset-of-instead-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/176/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Allow a subset of `<geometry>` instead of `<inertia>`", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Issue\r\n\r\nThe `<inertial>` element requires an inertial matrix `<inertia>`. When creating models I often find myself plugging the geometry of the `<collision>` into one of the formulas on [this wikipedia page](https://en.wikipedia.org/wiki/List_of_moments_of_inertia), which can be prone to errors as I often end up changing the geometry.\r\n\r\n# Proposal\r\n\r\nThe proposal is to allow a subset of the shapes in `<geometry>` (box, cylinder, sphere) as an alternative to `<inertia>`. The inertia matrix values would be calculated by assuming uniform density.\r\n\r\n```xml\r\n<link name=\"some_link\">\r\n  <collision name=\"my_collision\">\r\n    <geometry>\r\n      <sphere>\r\n        <radius>0.5</radius>\r\n      </sphere>\r\n    </geometry>\r\n  </collision>\r\n  <inertial>\r\n    <mass>1.0</mass>\r\n    <sphere>\r\n      <radius>0.5</radius>\r\n    </sphere>\r\n  </inertial>\r\n</link>\r\n```\r\n\r\n# Related\r\n\r\nIssue #95 combined with this feature would make it much easier to specify the inertia on a link with multiple `<collision>`.", "markup": "markdown", "html": "<h1 id=\"markdown-header-issue\">Issue</h1>\n<p>The <code>&lt;inertial&gt;</code> element requires an inertial matrix <code>&lt;inertia&gt;</code>. When creating models I often find myself plugging the geometry of the <code>&lt;collision&gt;</code> into one of the formulas on <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/List_of_moments_of_inertia\" rel=\"nofollow\">this wikipedia page</a>, which can be prone to errors as I often end up changing the geometry.</p>\n<h1 id=\"markdown-header-proposal\">Proposal</h1>\n<p>The proposal is to allow a subset of the shapes in <code>&lt;geometry&gt;</code> (box, cylinder, sphere) as an alternative to <code>&lt;inertia&gt;</code>. The inertia matrix values would be calculated by assuming uniform density.</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;some_link&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;my_collision&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;geometry&gt;</span>\n      <span class=\"nt\">&lt;sphere&gt;</span>\n        <span class=\"nt\">&lt;radius&gt;</span>0.5<span class=\"nt\">&lt;/radius&gt;</span>\n      <span class=\"nt\">&lt;/sphere&gt;</span>\n    <span class=\"nt\">&lt;/geometry&gt;</span>\n  <span class=\"nt\">&lt;/collision&gt;</span>\n  <span class=\"nt\">&lt;inertial&gt;</span>\n    <span class=\"nt\">&lt;mass&gt;</span>1.0<span class=\"nt\">&lt;/mass&gt;</span>\n    <span class=\"nt\">&lt;sphere&gt;</span>\n      <span class=\"nt\">&lt;radius&gt;</span>0.5<span class=\"nt\">&lt;/radius&gt;</span>\n    <span class=\"nt\">&lt;/sphere&gt;</span>\n  <span class=\"nt\">&lt;/inertial&gt;</span>\n<span class=\"nt\">&lt;/link&gt;</span>\n</pre></div>\n\n\n<h1 id=\"markdown-header-related\">Related</h1>\n<p>Issue <a href=\"#!/osrf/sdformat/issues/95/allow-multiple-blocks-in-a-single-link\" rel=\"nofollow\" title=\"allow multiple &lt;inertial&gt; blocks in a single Link element\" class=\"ap-connect-link\">#95</a> combined with this feature would make it much easier to specify the inertia on a link with multiple <code>&lt;collision&gt;</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-02-09T00:12:19.889273+00:00", "milestone": null, "updated_on": "2018-09-21T00:05:52.123184+00:00", "type": "issue", "id": 176}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/177/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/177.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/177/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/177/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/177/dom-should-capture-extra-xml-tags"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/177/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "DOM should capture extra XML tags", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When parsing an SDF file in the DOM, we should capture extra XML elements that fall outside the SDF spec into something like a nested map of strings. This will allow people to experiment with new tags.", "markup": "markdown", "html": "<p>When parsing an SDF file in the DOM, we should capture extra XML elements that fall outside the SDF spec into something like a nested map of strings. This will allow people to experiment with new tags.</p>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-03-08T19:13:36.353071+00:00", "milestone": null, "updated_on": "2018-03-08T19:13:36.353071+00:00", "type": "issue", "id": 177}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/178/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/178.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/178/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/178/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/178/use-posesdf-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/178/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Use pose.sdf on <actor><script><trajectory><waypoint><pose>", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently it is a simple pose element, which doesn't support `frame` for example:\r\n\r\n`Warning [parser.cc:647] XML Attribute[frame] in element[pose] not defined in SDF, ignoring.`", "markup": "markdown", "html": "<p>Currently it is a simple pose element, which doesn't support <code>frame</code> for example:</p>\n<p><code>Warning [parser.cc:647] XML Attribute[frame] in element[pose] not defined in SDF, ignoring.</code></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-05T10:03:38.626821+00:00", "milestone": null, "updated_on": "2020-01-24T19:46:39.269810+00:00", "type": "issue", "id": 178}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/179/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/179.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/179/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/179/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/179/libsdformat4-debian-should-declare-it"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/179/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "libsdformat4 debian should declare it depends on ignition-math2 > 2.6.0", "component": null, "votes": 0, "watches": 1, "content": {"raw": "See https://bitbucket.org/osrf/gazebo/issues/2448/problem-running-gazebo7\r\n\r\nUsers are getting a newer version of libsdformat that [depends on a class added in 2.6.0](https://bitbucket.org/osrf/gazebo/issues/2448/problem-running-gazebo7#comment-44458354). \r\n\r\nApt reports the dependencies as\r\n`Depends: sdformat-sdf (>= 4.0.0-1ubuntu2), libboost-filesystem1.58.0, libboost-regex1.58.0, libboost-system1.58.0, libc6 (>= 2.14), libgcc1 (>= 1:3.0), libignition-math2, libstdc++6 (>= 5.2), libtinyxml2.6.2v5, liburdfdom-model0.4`\r\n\r\nMaybe `libignition-math2` should have `(>= 2.6.0)` added to it. Where is that information kept? `osrf/release-tools`?", "markup": "markdown", "html": "<p>See <a href=\"https://bitbucket.org/osrf/gazebo/issues/2448/problem-running-gazebo7\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issues/2448/problem-running-gazebo7</a></p>\n<p>Users are getting a newer version of libsdformat that <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/2448/problem-running-gazebo7#comment-44458354\" rel=\"nofollow\">depends on a class added in 2.6.0</a>. </p>\n<p>Apt reports the dependencies as\n<code>Depends: sdformat-sdf (&gt;= 4.0.0-1ubuntu2), libboost-filesystem1.58.0, libboost-regex1.58.0, libboost-system1.58.0, libc6 (&gt;= 2.14), libgcc1 (&gt;= 1:3.0), libignition-math2, libstdc++6 (&gt;= 5.2), libtinyxml2.6.2v5, liburdfdom-model0.4</code></p>\n<p>Maybe <code>libignition-math2</code> should have <code>(&gt;= 2.6.0)</code> added to it. Where is that information kept? <code>osrf/release-tools</code>?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-30T17:24:59.608855+00:00", "milestone": null, "updated_on": "2018-04-30T17:38:04.477866+00:00", "type": "issue", "id": 179}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/180/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/180.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/180/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/180/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/180/revive-collide-mode"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/180/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Revive Collide Mode", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Take a look at declined pull request #288. It proposes a new tag for setting a link's collide mode.", "markup": "markdown", "html": "<p>Take a look at declined <a href=\"#!/osrf/sdformat/pull-requests/288/set-collide-mode\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #288</a>. It proposes a new tag for setting a link's collide mode.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-30T20:30:16.533303+00:00", "milestone": null, "updated_on": "2018-04-30T20:30:16.533303+00:00", "type": "issue", "id": 180}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/181/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/181.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/181/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/181/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/181/use-ign-cmake"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/181/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Use ign-cmake.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Switch this project to use ign-cmake. This will likely require moving osrf/sdf to ignition/sdf", "markup": "markdown", "html": "<p>Switch this project to use ign-cmake. This will likely require moving osrf/sdf to ignition/sdf</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-30T20:32:56.107248+00:00", "milestone": null, "updated_on": "2018-04-30T20:32:56.107248+00:00", "type": "issue", "id": 181}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/182/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/182.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/182/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/182/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/182/add-programmatic-creation-of-sdf-to-dom"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/182/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Add programmatic creation of SDF to DOM", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Add an API to the DOM classes (e.g. Model.hh, Link.hh, etc) that support programmatic creation of SDF worlds and models.", "markup": "markdown", "html": "<p>Add an API to the DOM classes (e.g. Model.hh, Link.hh, etc) that support programmatic creation of SDF worlds and models.</p>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-30T22:29:02.189454+00:00", "milestone": null, "updated_on": "2018-04-30T22:29:02.189454+00:00", "type": "issue", "id": 182}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/183/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/183.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/183/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/183/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/183/actuators-and-transmission"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/183/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Actuators and transmission", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Add the concept of actuators and transmission to SDF. Also include parsing the relevant URDF elements.", "markup": "markdown", "html": "<p>Add the concept of actuators and transmission to SDF. Also include parsing the relevant URDF elements.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-05-01T16:00:00.361008+00:00", "milestone": null, "updated_on": "2018-05-01T16:00:00.361008+00:00", "type": "issue", "id": 183}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/184/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/184.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/184/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/184/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/184/add-mesh-representation-for-sdf-geometry"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/184/vote"}}, "reporter": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "title": "Add Mesh representation for sdf::Geometry", "component": null, "votes": 0, "watches": 1, "content": {"raw": "So far in `sdf::Geometry` (`Geometry.hh`) we have:\r\n\r\n - class Box;\r\n - class Cylinder;\r\n - class Plane;\r\n - class Sphere;\r\n\r\nwe'd need a class Mesh to parse <geometry><mesh/><geometry>", "markup": "markdown", "html": "<p>So far in <code>sdf::Geometry</code> (<code>Geometry.hh</code>) we have:</p>\n<ul>\n<li>class Box;</li>\n<li>class Cylinder;</li>\n<li>class Plane;</li>\n<li>class Sphere;</li>\n</ul>\n<p>we'd need a class Mesh to parse &lt;geometry&gt;&lt;mesh/&gt;&lt;geometry&gt;</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2018-05-01T19:13:48.247135+00:00", "milestone": null, "updated_on": "2018-05-01T21:54:12.853398+00:00", "type": "issue", "id": 184}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/185/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/185.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/185/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/185/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/185/documentation-for-sdf-visual-pose-and-sdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/185/vote"}}, "reporter": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "title": "Documentation for sdf::Visual::Pose() and sdf::Collision::Pose()", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Now the documentation reads:\r\n\"Get the pose of the visual object. This is the pose of the visual as specified in SDF\"\r\n\r\nI believe the pose of a <visual> gets specified  by default in the parent <link> frame? or is the default the model frame?\r\n\r\nThis issue is to request to specify in what frame the pose is specified, in the source and [in the online docs](http://sdformat.org/spec?ver=1.6&elem=visual#visual_pose).\r\n\r\nIdeally we'd like it to read: \"It returns the pose X_LV of the visual frame V in the frame of the parent link L\" (or model frame M if that is the case).\r\n\r\nSimilarly for `sdf::Collision::Pose()`.", "markup": "markdown", "html": "<p>Now the documentation reads:\n\"Get the pose of the visual object. This is the pose of the visual as specified in SDF\"</p>\n<p>I believe the pose of a &lt;visual&gt; gets specified  by default in the parent &lt;link&gt; frame? or is the default the model frame?</p>\n<p>This issue is to request to specify in what frame the pose is specified, in the source and <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=visual#visual_pose\" rel=\"nofollow\">in the online docs</a>.</p>\n<p>Ideally we'd like it to read: \"It returns the pose X_LV of the visual frame V in the frame of the parent link L\" (or model frame M if that is the case).</p>\n<p>Similarly for <code>sdf::Collision::Pose()</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2018-05-02T16:54:45.624359+00:00", "milestone": null, "updated_on": "2018-05-02T16:54:45.624359+00:00", "type": "issue", "id": 185}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/186/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/186.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/186/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/186/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/186/document-frame-in-sdf-plane-normal"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/186/vote"}}, "reporter": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "title": "Document frame in sdf::Plane::Normal()", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In what frame is the normal specified? is the frame of the <visual>/<collision> to which the geometry belongs? (ideal) or is that the model frame? (non-ideal).", "markup": "markdown", "html": "<p>In what frame is the normal specified? is the frame of the &lt;visual&gt;/&lt;collision&gt; to which the geometry belongs? (ideal) or is that the model frame? (non-ideal).</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2018-05-02T17:01:47.015346+00:00", "milestone": null, "updated_on": "2018-05-02T17:01:47.015346+00:00", "type": "issue", "id": 186}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/187/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/187.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/187/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/187/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/187/error-on-parsing-a-urdf-file"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/187/vote"}}, "reporter": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "title": "Error on parsing a urdf file", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When parsing a URDF apparently sdformat internally converts to an SDF file. The following error message is issued when attempting this:\r\n\r\n\"Error [Converter.cc:151] Unable to convert from SDF version 1.4 to 1.6\"", "markup": "markdown", "html": "<p>When parsing a URDF apparently sdformat internally converts to an SDF file. The following error message is issued when attempting this:</p>\n<p>\"Error [Converter.cc:151] Unable to convert from SDF version 1.4 to 1.6\"</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-05-11T22:31:31.480181+00:00", "milestone": null, "updated_on": "2018-08-22T23:26:42.325020+00:00", "type": "issue", "id": 187}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/188/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/188.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/188/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/188/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/188/const-accessors-in-sdformat"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/188/vote"}}, "reporter": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "title": "Const accessors in sdformat.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We had a [use case in our Drake code base](https://reviewable.io/reviews/robotlocomotion/drake/8828#-LD2bp_9--hRPdZXTAQL) in which we only needed const access to an `sdf::Element`. Right now the current API only offers `sdf::Element::GetElement()` which returns a mutable shared pointer to a mutable element object.\r\nIdeally we'd also like having `const Element& GetElement(const std::string&)`.\r\nMost likely similar const access would be needed in other places.", "markup": "markdown", "html": "<p>We had a <a data-is-external-link=\"true\" href=\"https://reviewable.io/reviews/robotlocomotion/drake/8828#-LD2bp_9--hRPdZXTAQL\" rel=\"nofollow\">use case in our Drake code base</a> in which we only needed const access to an <code>sdf::Element</code>. Right now the current API only offers <code>sdf::Element::GetElement()</code> which returns a mutable shared pointer to a mutable element object.\nIdeally we'd also like having <code>const Element&amp; GetElement(const std::string&amp;)</code>.\nMost likely similar const access would be needed in other places.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-05-21T19:33:28.205333+00:00", "milestone": null, "updated_on": "2018-05-21T19:33:28.205333+00:00", "type": "issue", "id": 188}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/189/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/189.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/189/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/189/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/189/convert-urdf-files-to-sdf-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/189/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "Convert URDF files to SDF with use_parent_model_frame set to 0", "component": null, "votes": 0, "watches": 3, "content": {"raw": "The `use_parent_model_frame` option was added in SDF as part of https://bitbucket.org/osrf/gazebo/issues/494/make-joint-axis-reference-frame-relative and the related PRs . \r\n\r\nAs the URDF --> SDF converted was written before that time, all the SDF generated from URDF files by `gz sdf -c model.urdf > model.sdf` contain the option  `use_parent_model_frame` set to 1. It would be great if SDF could produce a URDF with the  `use_parent_model_frame` option set to 0.\r\n\r\nThis is due to the fact that the URDF is actually converted in [1] to a SDF 1.4, and then converted to a SDF 1.6 using the SDF conversion rules. \r\n\r\nRelated issue: https://github.com/bulletphysics/bullet3/issues/1707\r\n\r\n[1] : #!/osrf/sdformat/src/sdformat6_6.0.0/src/parser_urdf.cc", "markup": "markdown", "html": "<p>The <code>use_parent_model_frame</code> option was added in SDF as part of <a href=\"https://bitbucket.org/osrf/gazebo/issues/494/make-joint-axis-reference-frame-relative\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issues/494/make-joint-axis-reference-frame-relative</a> and the related PRs . </p>\n<p>As the URDF --&gt; SDF converted was written before that time, all the SDF generated from URDF files by <code>gz sdf -c model.urdf &gt; model.sdf</code> contain the option  <code>use_parent_model_frame</code> set to 1. It would be great if SDF could produce a URDF with the  <code>use_parent_model_frame</code> option set to 0.</p>\n<p>This is due to the fact that the URDF is actually converted in [1] to a SDF 1.4, and then converted to a SDF 1.6 using the SDF conversion rules. </p>\n<p>Related issue: <a href=\"https://github.com/bulletphysics/bullet3/issues/1707\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/bulletphysics/bullet3/issues/1707</a></p>\n<p>[1] : <a href=\"#!/osrf/sdformat/src/sdformat6_6.0.0/src/parser_urdf.cc\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/sdformat6_6.0.0/src/parser_urdf.cc</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-05-24T14:43:07.840905+00:00", "milestone": null, "updated_on": "2018-05-25T07:37:28.567716+00:00", "type": "issue", "id": 189}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/190/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/190.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/190/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/190/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/190/support-sdf-specification-description"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/190/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Support sdf specification <include> description.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The <include> tags in the SDF specification files should support child <description> tags.", "markup": "markdown", "html": "<p>The &lt;include&gt; tags in the SDF specification files should support child &lt;description&gt; tags.</p>", "type": "rendered"}, "assignee": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-05-24T16:43:56.038643+00:00", "milestone": null, "updated_on": "2018-05-24T16:43:56.038643+00:00", "type": "issue", "id": 190}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/191/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/191.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/191/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/191/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/191/spec-for-fog-type-incorrect"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/191/vote"}}, "reporter": null, "title": "Spec for Fog type incorrect", "component": null, "votes": 0, "watches": null, "content": {"raw": "Hey guys,\r\n\r\nI've recently been playing around with the fog setting and it seems like the SDF spec is incorrect. Right now, the types of fog are listed as linear, quadratic, and exponential, but I was getting an error. I looked at the gazebo source though for scenes and it looks like the Fog types from OGRE were just carried over:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n/// \\brief Set the fog parameters.\r\n      /// \\param[in] _type Type of fog: \"linear\", \"exp\", or \"exp2\".\r\n      /// \\param[in] _color Color of the fog.\r\n      /// \\param[in] _density Fog density.\r\n      /// \\param[in] _start Distance from camera to start the fog.\r\n      /// \\param[in] _end Distance from camera at which the fog is at max\r\n      /// density.\r\n      public: void SetFog(const std::string &_type,\r\n                          const ignition::math::Color &_color,\r\n                          const double _density, const double _start,\r\n                          const double _end);\r\n```\r\nI think it would best to update the latest SDF spec to reflect this.", "markup": "markdown", "html": "<p>Hey guys,</p>\n<p>I've recently been playing around with the fog setting and it seems like the SDF spec is incorrect. Right now, the types of fog are listed as linear, quadratic, and exponential, but I was getting an error. I looked at the gazebo source though for scenes and it looks like the Fog types from OGRE were just carried over:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">/// \\brief Set the fog parameters.</span>\n      <span class=\"c1\">/// \\param[in] _type Type of fog: &quot;linear&quot;, &quot;exp&quot;, or &quot;exp2&quot;.</span>\n      <span class=\"c1\">/// \\param[in] _color Color of the fog.</span>\n      <span class=\"c1\">/// \\param[in] _density Fog density.</span>\n      <span class=\"c1\">/// \\param[in] _start Distance from camera to start the fog.</span>\n      <span class=\"c1\">/// \\param[in] _end Distance from camera at which the fog is at max</span>\n      <span class=\"c1\">/// density.</span>\n      <span class=\"k\">public</span><span class=\"o\">:</span> <span class=\"kt\">void</span> <span class=\"n\">SetFog</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_type</span><span class=\"p\">,</span>\n                          <span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Color</span> <span class=\"o\">&amp;</span><span class=\"n\">_color</span><span class=\"p\">,</span>\n                          <span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">_density</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">_start</span><span class=\"p\">,</span>\n                          <span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">_end</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>I think it would best to update the latest SDF spec to reflect this.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2018-06-13T19:02:49.385247+00:00", "milestone": null, "updated_on": "2018-06-13T20:37:38.071299+00:00", "type": "issue", "id": 191}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/192/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/192.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/192/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/192/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/192/sdf-specs-version-changelog"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/192/vote"}}, "reporter": null, "title": "SDF Specs version changelog", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi there,\r\n\r\nas a developer of a tool using the sdformat, I try to keep on track of your current changes.\r\nI know, that this is not really an issue for the C++ code (hence the proposal tag), but I have spent some time diving into threads and Q&As to find sort of a changelog for the sdformat *specifications* changelog or git.\r\n\r\nOn the homepage of the project, I can switch between the different versions fairly easily, however it seems cumbersome to me, to check for the changes between version 1.5 and 1.6 manually.\r\n\r\nThus, my question: Could you point me to the right source or make the changelog availabel on the sdformat homepage?\r\nThanks in advance and best wishes,\r\nSimon", "markup": "markdown", "html": "<p>Hi there,</p>\n<p>as a developer of a tool using the sdformat, I try to keep on track of your current changes.\nI know, that this is not really an issue for the C++ code (hence the proposal tag), but I have spent some time diving into threads and Q&amp;As to find sort of a changelog for the sdformat <em>specifications</em> changelog or git.</p>\n<p>On the homepage of the project, I can switch between the different versions fairly easily, however it seems cumbersome to me, to check for the changes between version 1.5 and 1.6 manually.</p>\n<p>Thus, my question: Could you point me to the right source or make the changelog availabel on the sdformat homepage?\nThanks in advance and best wishes,\nSimon</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-06-25T10:58:55.628900+00:00", "milestone": null, "updated_on": "2018-06-28T08:37:48.969039+00:00", "type": "issue", "id": 192}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/193/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/193.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/193/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/193/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/193/using-element-get-has-surprising-defaults"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/193/vote"}}, "reporter": {"display_name": "SeanCurtis-TRI", "uuid": "{fc23d5a9-ee84-4708-929f-c7bce7adc656}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfc23d5a9-ee84-4708-929f-c7bce7adc656%7D"}, "html": {"href": "https://bitbucket.org/%7Bfc23d5a9-ee84-4708-929f-c7bce7adc656%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d777f5855922232497120ed301002a39d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-0.png"}}, "nickname": "SeanCurtis-TRI", "type": "user", "account_id": "5b3a4942ff95f12e1eab1e6b"}, "title": "Using Element::get<Color> has surprising defaults", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When parsing a `<material>`  tag for (e.g.,) diffuse color information, one can do the following (assuming that `material_element` is an `sdf::Element`):\r\n\r\n```c++\r\nColor default_color(0.25, 0.5, 0.75, 0.8);\r\nmaterial_element.Get<Color>(\"diffuse\", default_color);\r\n```\r\n\r\nThe specification suggests that the corresponding tag should look like:\r\n`<diffuse>r g b a</diffuse>`\r\n\r\nHowever, the following tags produce the following colors:\r\n`<diffuse>1</diffuse` --> 1 0 0 1\r\n`<diffuse>1 0.25</diffuse>` --> 1 0.25 0 1\r\n`<diffuse>1 0.25 0.5</diffuse>` --> 1 0.25 0.5 1\r\n`<diffuse>1 0.25 0.5 0.75 2</diffuse>` --> 1 0.25 0.5 0.75\r\n\r\nThe rules I infer are:\r\n\r\n1.   If a is missing, use the default value 1.\r\n2.  if r, g, or b are missing, use the default value 0\r\n3.  If there are two many values, simply truncate.\r\n\r\nI think this is *incredibly* counter-intuitive and not strictly helpful. One can make solid arguments that supplying rgb (in place of rgba) is a reasonable overload. But all of the rest seem kind of insane.", "markup": "markdown", "html": "<p>When parsing a <code>&lt;material&gt;</code>  tag for (e.g.,) diffuse color information, one can do the following (assuming that <code>material_element</code> is an <code>sdf::Element</code>):</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">Color</span> <span class=\"nf\">default_color</span><span class=\"p\">(</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">);</span>\n<span class=\"n\">material_element</span><span class=\"p\">.</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">Color</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;diffuse&quot;</span><span class=\"p\">,</span> <span class=\"n\">default_color</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>The specification suggests that the corresponding tag should look like:\n<code>&lt;diffuse&gt;r g b a&lt;/diffuse&gt;</code></p>\n<p>However, the following tags produce the following colors:\n<code>&lt;diffuse&gt;1&lt;/diffuse</code> --&gt; 1 0 0 1\n<code>&lt;diffuse&gt;1 0.25&lt;/diffuse&gt;</code> --&gt; 1 0.25 0 1\n<code>&lt;diffuse&gt;1 0.25 0.5&lt;/diffuse&gt;</code> --&gt; 1 0.25 0.5 1\n<code>&lt;diffuse&gt;1 0.25 0.5 0.75 2&lt;/diffuse&gt;</code> --&gt; 1 0.25 0.5 0.75</p>\n<p>The rules I infer are:</p>\n<ol>\n<li>If a is missing, use the default value 1.</li>\n<li>if r, g, or b are missing, use the default value 0</li>\n<li>If there are two many values, simply truncate.</li>\n</ol>\n<p>I think this is <em>incredibly</em> counter-intuitive and not strictly helpful. One can make solid arguments that supplying rgb (in place of rgba) is a reasonable overload. But all of the rest seem kind of insane.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-07-02T15:52:33.801042+00:00", "milestone": null, "updated_on": "2018-07-02T16:06:17.373427+00:00", "type": "issue", "id": 193}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/194/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/194.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/194/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/194/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/194/string-trimming-only-considers-space-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/194/vote"}}, "reporter": {"display_name": "Sean Curtis", "uuid": "{9c62c800-3df6-43f2-a552-2739fb7f01c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9c62c800-3df6-43f2-a552-2739fb7f01c4%7D"}, "html": {"href": "https://bitbucket.org/%7B9c62c800-3df6-43f2-a552-2739fb7f01c4%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/42eee233e68328248e50194d73e589afd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSC-3.png"}}, "nickname": "SeanCurtisTRI", "type": "user", "account_id": "5b6c663d2f51d429dce940d8"}, "title": "String trimming only considers space and tab", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In the [`sdf::trim`](#!/osrf/sdformat/src/2fa714812545abeb5ae05a8aebf0047aeb35d6a4/src/Types.cc?at=default&fileviewer=file-view-default#Types.cc-51) function, it is trimming off leading and trailing space and tab characters. I'd recommend going further in capturing *all* characters that C++ considers to be whitespace. Something like:\r\n\r\n\r\n```c++\r\nstd::string trim(const std::string& name) {\r\n  std::regex trim_regex(\"^\\\\s*(.*?)\\\\s*$\");\r\n  std::smatch matches;\r\n  std::regex_match(name, matches, trim_regex);\r\n  return matches[1].str();\r\n}\r\n```\r\n\r\nAlso, we might want to consider what whitespace is allowed *inside* strings. It would be silly to have a name: `\"a\\f\\vb\"`.", "markup": "markdown", "html": "<p>In the <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/2fa714812545abeb5ae05a8aebf0047aeb35d6a4/src/Types.cc?at=default&amp;fileviewer=file-view-default#Types.cc-51\" rel=\"nofollow\"><code>sdf::trim</code></a> function, it is trimming off leading and trailing space and tab characters. I'd recommend going further in capturing <em>all</em> characters that C++ considers to be whitespace. Something like:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">trim</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">regex</span> <span class=\"n\">trim_regex</span><span class=\"p\">(</span><span class=\"s\">&quot;^</span><span class=\"se\">\\\\</span><span class=\"s\">s*(.*?)</span><span class=\"se\">\\\\</span><span class=\"s\">s*$&quot;</span><span class=\"p\">);</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">smatch</span> <span class=\"n\">matches</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">regex_match</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">matches</span><span class=\"p\">,</span> <span class=\"n\">trim_regex</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"n\">matches</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">str</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Also, we might want to consider what whitespace is allowed <em>inside</em> strings. It would be silly to have a name: <code>\"a\\f\\vb\"</code>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2018-08-09T16:08:33.723750+00:00", "milestone": null, "updated_on": "2018-08-09T16:08:33.723750+00:00", "type": "issue", "id": 194}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/195/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/195.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/195/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/195/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/195/color-tags-could-accept-other-formats"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/195/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Color tags could accept other formats", "component": null, "votes": 0, "watches": 1, "content": {"raw": "SDF color tags currently accept normalized color values where each color component can be a value between 0 and 1.\r\n\r\nIt would be convenient if SDF also understood other formats, such as HEX and 0-255 ranges. \r\n\r\nFor example, all the following would describe pure red:\r\n\r\n~~~\r\n<ambient>1.0 0.0 0.0 1.0</ambient>\r\n<ambient>255 0 0 255</ambient>\r\n<ambient>#ff0000ff</ambient>\r\n~~~", "markup": "markdown", "html": "<p>SDF color tags currently accept normalized color values where each color component can be a value between 0 and 1.</p>\n<p>It would be convenient if SDF also understood other formats, such as HEX and 0-255 ranges. </p>\n<p>For example, all the following would describe pure red:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;ambient&gt;</span>1.0 0.0 0.0 1.0<span class=\"nt\">&lt;/ambient&gt;</span>\n<span class=\"nt\">&lt;ambient&gt;</span>255 0 0 255<span class=\"nt\">&lt;/ambient&gt;</span>\n<span class=\"nt\">&lt;ambient&gt;</span>#ff0000ff<span class=\"nt\">&lt;/ambient&gt;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-08-13T21:32:26.289838+00:00", "milestone": null, "updated_on": "2018-08-13T21:32:26.289838+00:00", "type": "issue", "id": 195}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/196/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/196.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/196/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/196/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/196/material-library-and-material-instances"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/196/vote"}}, "reporter": {"display_name": "Sean Curtis", "uuid": "{9c62c800-3df6-43f2-a552-2739fb7f01c4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9c62c800-3df6-43f2-a552-2739fb7f01c4%7D"}, "html": {"href": "https://bitbucket.org/%7B9c62c800-3df6-43f2-a552-2739fb7f01c4%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/42eee233e68328248e50194d73e589afd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSC-3.png"}}, "nickname": "SeanCurtisTRI", "type": "user", "account_id": "5b6c663d2f51d429dce940d8"}, "title": "Material library and material instances.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Most tags have a *required* `name` tag. The `<material>` tag is one conspicuous exception (the other being `<geometry>`).  The assumption is that they don't have names because they aren't referenced by any other tags.\r\n\r\nHowever, if we named them, this would give us the ability to build a library of materials and then \"instance\" them, in some sense. This could be done formally (i.e., declare a material library tag and then define a bunch of materials that can be referenced by name) or in an ad hoc mechanism (I.e., one instance `<material name=\"green\">...</material>` can define a material and another reference could make use of it by sharing the name and defining no properties). This kind of library/instance paradigm would assist renderers in recognizing the same material being instanced (rather than having to infer it).\r\n\r\nThis is superficially related to #173 in that both would lead to a more compact representation of the robot in the SDF file. But the emphasis of this request is not on the *authoring* side, but on the consuming side -- it provides a meaningful basis for hashing materials (via name) at parse time rather than having to do it at implementation.\r\n\r\nIt obviously creates an increased burden on the parser (i.e., two definitions cannot exist for the same material name in the same scope), but that's a relatively trivial test and failing the test should indicate outright failure with an appropriate error message to the tune of \"malformed SDF, try again\".", "markup": "markdown", "html": "<p>Most tags have a <em>required</em> <code>name</code> tag. The <code>&lt;material&gt;</code> tag is one conspicuous exception (the other being <code>&lt;geometry&gt;</code>).  The assumption is that they don't have names because they aren't referenced by any other tags.</p>\n<p>However, if we named them, this would give us the ability to build a library of materials and then \"instance\" them, in some sense. This could be done formally (i.e., declare a material library tag and then define a bunch of materials that can be referenced by name) or in an ad hoc mechanism (I.e., one instance <code>&lt;material name=\"green\"&gt;...&lt;/material&gt;</code> can define a material and another reference could make use of it by sharing the name and defining no properties). This kind of library/instance paradigm would assist renderers in recognizing the same material being instanced (rather than having to infer it).</p>\n<p>This is superficially related to <a href=\"#!/osrf/sdformat/issues/173/write-a-once-and-reuse-it\" rel=\"nofollow\" title=\"Write a &lt;geometry&gt; once and reuse it\" class=\"ap-connect-link\">#173</a> in that both would lead to a more compact representation of the robot in the SDF file. But the emphasis of this request is not on the <em>authoring</em> side, but on the consuming side -- it provides a meaningful basis for hashing materials (via name) at parse time rather than having to do it at implementation.</p>\n<p>It obviously creates an increased burden on the parser (i.e., two definitions cannot exist for the same material name in the same scope), but that's a relatively trivial test and failing the test should indicate outright failure with an appropriate error message to the tune of \"malformed SDF, try again\".</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2018-08-21T23:13:39.094979+00:00", "milestone": null, "updated_on": "2018-08-21T23:13:39.094979+00:00", "type": "issue", "id": 196}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/197/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/197.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/197/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/197/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/197/hard-to-set-urdf-model-to-static-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/197/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Hard to set URDF model to static with multiple <gazebo> tags", "component": null, "votes": 1, "watches": 2, "content": {"raw": "@caguero and I discovered today that if you want to use `<gazebo>` to make a urdf model static, you might run into problems if you have multiple `<gazebo>` tags. For example, the following urdf will not be static after converting to sdf:\r\n\r\n~~~\r\n<?xml version=\"1.0\" ?>\r\n<robot name=\"static_test\">\r\n\r\n  <link name=\"world\"/>\r\n  <gazebo>\r\n    <static>1</static>\r\n  </gazebo>\r\n  <gazebo/>\r\n\r\n</robot>\r\n~~~\r\n\r\n~~~\r\n$ gz sdf -p test/integration/static_test.urdf \r\nWarning [parser_urdf.cc:1115] multiple inconsistent <static> exists due to fixed joint reduction overwriting previous value [true] with [false].\r\n<sdf version='1.6'>\r\n  <model name='static_test'>\r\n    <static>0</static>\r\n  </model>\r\n</sdf>\r\n~~~\r\n\r\nIt gives a warning: \"Warning [parser_urdf.cc:1115] multiple inconsistent <static> exists due to fixed joint reduction overwriting previous value [true] with [false].\"\r\n\r\nI think the following code might fix the parsing for this specific model, relying on the fact that sdf models are not static by default, but it may have side-effects for other models.\r\n\r\n~~~\r\ndiff -r 5d148a84b301 src/parser_urdf.cc\r\n--- a/src/parser_urdf.cc        Thu Oct 26 14:18:25 2017 -0700\r\n+++ b/src/parser_urdf.cc        Wed Aug 29 17:43:43 2018 -0700\r\n@@ -2346,8 +2346,6 @@\r\n         // insert static flag\r\n         if ((*ge)->setStaticFlag)\r\n           AddKeyValue(_elem, \"static\", \"true\");\r\n-        else\r\n-          AddKeyValue(_elem, \"static\", \"false\");\r\n \r\n         // copy extension containing blobs and without reference\r\n         for (std::vector<TiXmlElementPtr>::iterator\r\n~~~", "markup": "markdown", "html": "<p>@caguero and I discovered today that if you want to use <code>&lt;gazebo&gt;</code> to make a urdf model static, you might run into problems if you have multiple <code>&lt;gazebo&gt;</code> tags. For example, the following urdf will not be static after converting to sdf:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;robot</span> <span class=\"na\">name=</span><span class=\"s\">&quot;static_test&quot;</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;world&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;gazebo&gt;</span>\n    <span class=\"nt\">&lt;static&gt;</span>1<span class=\"nt\">&lt;/static&gt;</span>\n  <span class=\"nt\">&lt;/gazebo&gt;</span>\n  <span class=\"nt\">&lt;gazebo/&gt;</span>\n\n<span class=\"nt\">&lt;/robot&gt;</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>$ gz sdf -p test/integration/static_test.urdf \nWarning [parser_urdf.cc:1115] multiple inconsistent <span class=\"nt\">&lt;static&gt;</span> exists due to fixed joint reduction overwriting previous value [true] with [false].\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&#39;1.6&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&#39;static_test&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;static&gt;</span>0<span class=\"nt\">&lt;/static&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>It gives a warning: \"Warning [parser_urdf.cc:1115] multiple inconsistent &lt;static&gt; exists due to fixed joint reduction overwriting previous value [true] with [false].\"</p>\n<p>I think the following code might fix the parsing for this specific model, relying on the fact that sdf models are not static by default, but it may have side-effects for other models.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 5d148a84b301 src/parser_urdf.cc</span>\n<span class=\"gd\">--- a/src/parser_urdf.cc        Thu Oct 26 14:18:25 2017 -0700</span>\n<span class=\"gi\">+++ b/src/parser_urdf.cc        Wed Aug 29 17:43:43 2018 -0700</span>\n<span class=\"gu\">@@ -2346,8 +2346,6 @@</span>\n         // insert static flag\n         if ((*ge)-&gt;setStaticFlag)\n           AddKeyValue(_elem, &quot;static&quot;, &quot;true&quot;);\n<span class=\"gd\">-        else</span>\n<span class=\"gd\">-          AddKeyValue(_elem, &quot;static&quot;, &quot;false&quot;);</span>\n\n         // copy extension containing blobs and without reference\n         for (std::vector&lt;TiXmlElementPtr&gt;::iterator\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-08-30T01:01:01.805374+00:00", "milestone": null, "updated_on": "2018-08-30T01:01:01.805374+00:00", "type": "issue", "id": 197}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/198/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/198.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/198/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/198/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/198/sdformat-install-not-relocatable-sdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/198/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "sdformat install not relocatable: sdf::findFile searches original install location", "component": null, "votes": 0, "watches": 2, "content": {"raw": "As reported here: https://github.com/osrf/homebrew-simulation/issues/479\r\n\r\nThe issue is that the install path searched by `sdf::findFile` is the install location at compile time:\r\n\r\n* #!/osrf/sdformat/src/5eac19ab542539b1f0de63905d45a225e54651bc/src/SDF.cc#lines-90:103\r\n* #!/osrf/sdformat/src/5eac19ab542539b1f0de63905d45a225e54651bc/cmake/sdf_config.h.in#lines-30:31\r\n\r\nWe would need to change the logic of `sdf::findFile` to make it fully relocatable.", "markup": "markdown", "html": "<p>As reported here: <a href=\"https://github.com/osrf/homebrew-simulation/issues/479\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/osrf/homebrew-simulation/issues/479</a></p>\n<p>The issue is that the install path searched by <code>sdf::findFile</code> is the install location at compile time:</p>\n<ul>\n<li><a href=\"#!/osrf/sdformat/src/5eac19ab542539b1f0de63905d45a225e54651bc/src/SDF.cc#lines-90:103\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/5eac19ab542539b1f0de63905d45a225e54651bc/src/SDF.cc#lines-90:103</a></li>\n<li><a href=\"#!/osrf/sdformat/src/5eac19ab542539b1f0de63905d45a225e54651bc/cmake/sdf_config.h.in#lines-30:31\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/5eac19ab542539b1f0de63905d45a225e54651bc/cmake/sdf_config.h.in#lines-30:31</a></li>\n</ul>\n<p>We would need to change the logic of <code>sdf::findFile</code> to make it fully relocatable.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-09-04T07:22:14.060060+00:00", "milestone": null, "updated_on": "2018-09-13T10:21:41.373605+00:00", "type": "issue", "id": 198}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/199/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/199.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/199/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/199/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/199/urdf-to-sdf-conversion-ignores-links"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/199/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "URDF to SDF conversion ignores links without inertia", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For example, this:\r\n\r\n~~~\r\n<?xml version=\"1.0\" ?>\r\n<robot name=\"always_ignored\">\r\n  <link name=\"link\">\r\n    <visual>\r\n      <geometry>\r\n        <sphere radius=\"1.0\"/>\r\n      </geometry>\r\n    </visual>\r\n  </link>\r\n</robot>\r\n~~~\r\n\r\nResults in:\r\n\r\n~~~\r\n$ gz sdf -p /tmp/urdf_ball.urdf \r\n<sdf version='1.6'>\r\n  <model name='always_ignored'/>\r\n</sdf>\r\n~~~\r\n\r\nBut when inertia is added, the link is not ignored:\r\n\r\n~~~\r\n<?xml version=\"1.0\" ?>\r\n<robot name=\"always_ignored\">\r\n  <link name=\"link\">\r\n    <visual>\r\n      <geometry>\r\n        <sphere radius=\"1.0\"/>\r\n      </geometry>\r\n    </visual>\r\n    <inertial>\r\n      <mass value=\"1\"/>\r\n      <inertia ixx=\"1\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"1\" iyz=\"0.0\" izz=\"1\"/>\r\n    </inertial>\r\n  </link>\r\n</robot>\r\n~~~\r\n\r\n~~~\r\n$ gz sdf -p /tmp/urdf_ball.urdf \r\n<sdf version='1.6'>\r\n  <model name='always_ignored'>\r\n    <link name='link'>\r\n      <pose frame=''>0 0 0 0 -0 0</pose>\r\n      <inertial>\r\n        <pose frame=''>0 0 0 0 -0 0</pose>\r\n        <mass>1</mass>\r\n        <inertia>\r\n          <ixx>1</ixx>\r\n          <ixy>0</ixy>\r\n          <ixz>0</ixz>\r\n          <iyy>1</iyy>\r\n          <iyz>0</iyz>\r\n          <izz>1</izz>\r\n        </inertia>\r\n      </inertial>\r\n      <visual name='link_visual'>\r\n        <pose frame=''>0 0 0 0 -0 0</pose>\r\n        <geometry>\r\n          <sphere>\r\n            <radius>1</radius>\r\n          </sphere>\r\n        </geometry>\r\n      </visual>\r\n    </link>\r\n  </model>\r\n</sdf>\r\n~~~\r\n\r\n---\r\n\r\nIt could be argued that:\r\n\r\n* it is good practice to add inertia for simulation\r\n* URDF will rarely be used to describe static objects, where inertia is ignored\r\n\r\nBut I'd expect a URDF link without an inertia element to be converted to an SDF link without an inertia element, which is valid SDF.\r\n\r\nThis can become very confusing for someone trying to convert URDF files from the [beginner tutorials](http://wiki.ros.org/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch) to SDF and getting an empty model - *based on a true story*.", "markup": "markdown", "html": "<p>For example, this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;robot</span> <span class=\"na\">name=</span><span class=\"s\">&quot;always_ignored&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;visual&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;sphere</span> <span class=\"na\">radius=</span><span class=\"s\">&quot;1.0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/robot&gt;</span>\n</pre></div>\n\n\n<p>Results in:</p>\n<div class=\"codehilite\"><pre><span></span>$ gz sdf -p /tmp/urdf_ball.urdf \n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&#39;1.6&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&#39;always_ignored&#39;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<p>But when inertia is added, the link is not ignored:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;robot</span> <span class=\"na\">name=</span><span class=\"s\">&quot;always_ignored&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;visual&gt;</span>\n      <span class=\"nt\">&lt;geometry&gt;</span>\n        <span class=\"nt\">&lt;sphere</span> <span class=\"na\">radius=</span><span class=\"s\">&quot;1.0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/geometry&gt;</span>\n    <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;inertial&gt;</span>\n      <span class=\"nt\">&lt;mass</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;inertia</span> <span class=\"na\">ixx=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">ixy=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">ixz=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">iyy=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">iyz=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">izz=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/inertial&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/robot&gt;</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>$ gz sdf -p /tmp/urdf_ball.urdf \n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&#39;1.6&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&#39;always_ignored&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&#39;link&#39;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&#39;&#39;</span><span class=\"nt\">&gt;</span>0 0 0 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;inertial&gt;</span>\n        <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&#39;&#39;</span><span class=\"nt\">&gt;</span>0 0 0 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;mass&gt;</span>1<span class=\"nt\">&lt;/mass&gt;</span>\n        <span class=\"nt\">&lt;inertia&gt;</span>\n          <span class=\"nt\">&lt;ixx&gt;</span>1<span class=\"nt\">&lt;/ixx&gt;</span>\n          <span class=\"nt\">&lt;ixy&gt;</span>0<span class=\"nt\">&lt;/ixy&gt;</span>\n          <span class=\"nt\">&lt;ixz&gt;</span>0<span class=\"nt\">&lt;/ixz&gt;</span>\n          <span class=\"nt\">&lt;iyy&gt;</span>1<span class=\"nt\">&lt;/iyy&gt;</span>\n          <span class=\"nt\">&lt;iyz&gt;</span>0<span class=\"nt\">&lt;/iyz&gt;</span>\n          <span class=\"nt\">&lt;izz&gt;</span>1<span class=\"nt\">&lt;/izz&gt;</span>\n        <span class=\"nt\">&lt;/inertia&gt;</span>\n      <span class=\"nt\">&lt;/inertial&gt;</span>\n      <span class=\"nt\">&lt;visual</span> <span class=\"na\">name=</span><span class=\"s\">&#39;link_visual&#39;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&#39;&#39;</span><span class=\"nt\">&gt;</span>0 0 0 0 -0 0<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;sphere&gt;</span>\n            <span class=\"nt\">&lt;radius&gt;</span>1<span class=\"nt\">&lt;/radius&gt;</span>\n          <span class=\"nt\">&lt;/sphere&gt;</span>\n        <span class=\"nt\">&lt;/geometry&gt;</span>\n      <span class=\"nt\">&lt;/visual&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<hr />\n<p>It could be argued that:</p>\n<ul>\n<li>it is good practice to add inertia for simulation</li>\n<li>URDF will rarely be used to describe static objects, where inertia is ignored</li>\n</ul>\n<p>But I'd expect a URDF link without an inertia element to be converted to an SDF link without an inertia element, which is valid SDF.</p>\n<p>This can become very confusing for someone trying to convert URDF files from the <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/urdf/Tutorials/Building%20a%20Visual%20Robot%20Model%20with%20URDF%20from%20Scratch\" rel=\"nofollow\">beginner tutorials</a> to SDF and getting an empty model - <em>based on a true story</em>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-09-05T18:17:51.921693+00:00", "milestone": null, "updated_on": "2020-02-10T10:58:30.367720+00:00", "type": "issue", "id": 199}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/200/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/200.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/200/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/200/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/200/support-multiple-frames-in-a-single-parent"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/200/vote"}}, "reporter": {"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}, "title": "<frame/>: Support multiple frames in a single parent? Intended scope of frames? Use link names as frames?", "component": null, "votes": 2, "watches": 2, "content": {"raw": "Relates:\r\n\r\n* Issue #66\r\n* https://github.com/RobotLocomotion/drake/issues/9350\r\n\r\n(1) Since #237, the SDF specification states that `<frame/>` is `required=\"*\"`, which indicates that you can add any number of frames. However, perusing `test/integration/frame.cc`, I do see frames parsed, but I don't see multiple frames defined in a parent.\r\n\r\nIs the intent to support multiple frames in a parent? If so, could that be represented in the unittest?\r\n\r\n(2) Can I ask what the intended scope is for `<frame/>` tags?\r\nFrom the unittest, it looks like a frame from a `<link/>` can reference to a frame defined in a `<model/>`; is the reverse of that true? e.g. are the following things valid?\r\n```xml\r\n<model>\r\n  <frame name=\"link_mounting_point\">\r\n    <pose>tx ty tz rx ry rz</pose>\r\n  </frame>\r\n\r\n  <link name=\"link_1\">\r\n    <frame name=\"frame_1\">\r\n      <pose>tx ty tz rx ry rz</pose>\r\n    </frame>\r\n  </link>\r\n\r\n  <frame name=\"other_mounting_point\">\r\n    <!-- This one? -->\r\n    <pose frame=\"frame_1\">tx ty tz rx ry rz</pose>\r\n  </frame>\r\n</model>\r\n```\r\n\r\nIf so, can that also be incorporated into the unittest?\r\n\r\n(2.a) When you define a `<frame/>` inside of a `<link/>`, what happens if you do not specify the `frame` attribute for `<pose>`?\r\nIs the pose w.r.t. the parent element's base frame?\r\nFor this case:\r\n```xml\r\n<model>\r\n   <link name=\"my_link\">\r\n     <frame name=\"sub_frame\">\r\n        <pose>tx ty tz rx ry rz</pose>\r\n     </frame>\r\n   </link>\r\n</model>\r\n```\r\nIs `sub_frame` defined w.r.t. its parent, `/model/link[@name=\"my_link\"]`, or the model frame, `/model`?\r\n\r\n(3) Can I assume that I can refer to a link as a frame, such as the following?\r\n```xml\r\n<model>\r\n  <link name=\"my_link\"/>\r\n  <!-- Outside of \"my_link\" -->\r\n  <frame name=\"my_frame\">\r\n    <pose frame=\"my_link\">tx ty tz rx ry rz</pose>\r\n  </frame>\r\n</model>\r\n```\r\nIn Drake, I've found it useful to assume that when you add a link, you also add a frame by the same name (rather than manually duplicating it) so that you may query the body frame.\r\n\r\n(I guess you could do the same for `<joint/>` and other tags, but perhaps that is less useful?)\r\n\r\nExample commits supporting this in Drake:\r\n\r\n* [MultibodyTree / MultibodyPlant](https://github.com/RobotLocomotion/drake/pull/9351/commits/a74b43d22cb03bcb410a088b26a12f6187bb6bec#diff-e96623f5c8aa53dfc55491290b8603dcR132)\r\n* [RigidBodyTree](https://github.com/RobotLocomotion/drake/pull/8085/commits/028f6d03e40c3c5a41cf9731aeec2f38bf8dd981#diff-5ea3fc4421ecfc9aada2d9a91b402c95R3036)", "markup": "markdown", "html": "<p>Relates:</p>\n<ul>\n<li>Issue <a href=\"#!/osrf/sdformat/issues/66/use-pose-frames\" rel=\"nofollow\" title=\"Use pose frames\" class=\"ap-connect-link\"><s>#66</s></a></li>\n<li><a href=\"https://github.com/RobotLocomotion/drake/issues/9350\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/RobotLocomotion/drake/issues/9350</a></li>\n</ul>\n<p>(1) Since #237, the SDF specification states that <code>&lt;frame/&gt;</code> is <code>required=\"*\"</code>, which indicates that you can add any number of frames. However, perusing <code>test/integration/frame.cc</code>, I do see frames parsed, but I don't see multiple frames defined in a parent.</p>\n<p>Is the intent to support multiple frames in a parent? If so, could that be represented in the unittest?</p>\n<p>(2) Can I ask what the intended scope is for <code>&lt;frame/&gt;</code> tags?\nFrom the unittest, it looks like a frame from a <code>&lt;link/&gt;</code> can reference to a frame defined in a <code>&lt;model/&gt;</code>; is the reverse of that true? e.g. are the following things valid?</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model&gt;</span>\n  <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link_mounting_point&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>tx ty tz rx ry rz<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/frame&gt;</span>\n\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link_1&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;frame_1&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>tx ty tz rx ry rz<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;/frame&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n\n  <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;other_mounting_point&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"c\">&lt;!-- This one? --&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;frame_1&quot;</span><span class=\"nt\">&gt;</span>tx ty tz rx ry rz<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/frame&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>If so, can that also be incorporated into the unittest?</p>\n<p>(2.a) When you define a <code>&lt;frame/&gt;</code> inside of a <code>&lt;link/&gt;</code>, what happens if you do not specify the <code>frame</code> attribute for <code>&lt;pose&gt;</code>?\nIs the pose w.r.t. the parent element's base frame?\nFor this case:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model&gt;</span>\n   <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;my_link&quot;</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;sub_frame&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>tx ty tz rx ry rz<span class=\"nt\">&lt;/pose&gt;</span>\n     <span class=\"nt\">&lt;/frame&gt;</span>\n   <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>Is <code>sub_frame</code> defined w.r.t. its parent, <code>/model/link[@name=\"my_link\"]</code>, or the model frame, <code>/model</code>?</p>\n<p>(3) Can I assume that I can refer to a link as a frame, such as the following?</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;my_link&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"c\">&lt;!-- Outside of &quot;my_link&quot; --&gt;</span>\n  <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;my_frame&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;my_link&quot;</span><span class=\"nt\">&gt;</span>tx ty tz rx ry rz<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/frame&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>In Drake, I've found it useful to assume that when you add a link, you also add a frame by the same name (rather than manually duplicating it) so that you may query the body frame.</p>\n<p>(I guess you could do the same for <code>&lt;joint/&gt;</code> and other tags, but perhaps that is less useful?)</p>\n<p>Example commits supporting this in Drake:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake/pull/9351/commits/a74b43d22cb03bcb410a088b26a12f6187bb6bec#diff-e96623f5c8aa53dfc55491290b8603dcR132\" rel=\"nofollow\">MultibodyTree / MultibodyPlant</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake/pull/8085/commits/028f6d03e40c3c5a41cf9731aeec2f38bf8dd981#diff-5ea3fc4421ecfc9aada2d9a91b402c95R3036\" rel=\"nofollow\">RigidBodyTree</a></li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-09-05T23:40:33.988499+00:00", "milestone": null, "updated_on": "2020-01-21T18:19:31.108659+00:00", "type": "issue", "id": 200}], "pagelen": 100, "size": 228, "page": 2, "previous": "data/repositories/osrf/sdformat/issues_page=1.json"}