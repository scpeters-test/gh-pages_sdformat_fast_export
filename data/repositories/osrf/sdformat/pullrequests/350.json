{"rendered": {"description": {"raw": "I noticed that the SDF parser does not read the child elements of a plugin if the plugin is within an include. 3d19ad2 fixes this bug by calling `readXml` for any plugins identified within an include element. While parsing an SDF, most XML child elements are processed (recursively) using `readXml`, with include elements being an exception, which is why I pursued this solution.\r\n\r\n3d19ad2 also coincidentally fixes a second bug. Before the proposed changes if a plugin within an include is missing a required attribute (\"name\" or \"filename\"), an exception occurs because the parser assumes the plugin has these attributes. With the proposed changes, the parser will exit with an error message as it normally would for an SDF with a missing required field.\r\n\r\nI added two integration tests in plugin_include.cc which fail without the fix. The first tests that plugin child elements are read even within an include. The second tests that `readXml` returns false when a plugin within an include is missing the \"filename\" attribute (instead of raising an exception).", "markup": "markdown", "html": "<p>I noticed that the SDF parser does not read the child elements of a plugin if the plugin is within an include. <a href=\"#!/osrf/sdformat/commits/3d19ad2\" rel=\"nofollow\" class=\"ap-connect-link\">3d19ad2</a> fixes this bug by calling <code>readXml</code> for any plugins identified within an include element. While parsing an SDF, most XML child elements are processed (recursively) using <code>readXml</code>, with include elements being an exception, which is why I pursued this solution.</p>\n<p><a href=\"#!/osrf/sdformat/commits/3d19ad2\" rel=\"nofollow\" class=\"ap-connect-link\">3d19ad2</a> also coincidentally fixes a second bug. Before the proposed changes if a plugin within an include is missing a required attribute (\"name\" or \"filename\"), an exception occurs because the parser assumes the plugin has these attributes. With the proposed changes, the parser will exit with an error message as it normally would for an SDF with a missing required field.</p>\n<p>I added two integration tests in plugin_include.cc which fail without the fix. The first tests that plugin child elements are read even within an include. The second tests that <code>readXml</code> returns false when a plugin within an include is missing the \"filename\" attribute (instead of raising an exception).</p>", "type": "rendered"}, "title": {"raw": "fixed parser to read plugin child elements within an include", "markup": "markdown", "html": "<p>fixed parser to read plugin child elements within an include</p>", "type": "rendered"}}, "type": "pullrequest", "description": "I noticed that the SDF parser does not read the child elements of a plugin if the plugin is within an include. 3d19ad2 fixes this bug by calling `readXml` for any plugins identified within an include element. While parsing an SDF, most XML child elements are processed (recursively) using `readXml`, with include elements being an exception, which is why I pursued this solution.\r\n\r\n3d19ad2 also coincidentally fixes a second bug. Before the proposed changes if a plugin within an include is missing a required attribute (\"name\" or \"filename\"), an exception occurs because the parser assumes the plugin has these attributes. With the proposed changes, the parser will exit with an error message as it normally would for an SDF with a missing required field.\r\n\r\nI added two integration tests in plugin_include.cc which fail without the fix. The first tests that plugin child elements are read even within an include. The second tests that `readXml` returns false when a plugin within an include is missing the \"filename\" attribute (instead of raising an exception).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/350/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diffstat/osrf/sdformat:eaddf57f366e%0D5f6927a5d99c?from_pullrequest_id=350"}, "commits": {"href": "data/repositories/osrf/sdformat/pullrequests/350/commits.json"}, "self": {"href": "data/repositories/osrf/sdformat/pullrequests/350.json"}, "comments": {"href": "data/repositories/osrf/sdformat/pullrequests/350/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/350/merge"}, "html": {"href": "#!/osrf/sdformat/pull-requests/350"}, "activity": {"href": "data/repositories/osrf/sdformat/pullrequests/350/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:eaddf57f366e%0D5f6927a5d99c?from_pullrequest_id=350"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/350/approve"}, "statuses": {"href": "data/repositories/osrf/sdformat/pullrequests/350/statuses_page=1.json"}}, "title": "fixed parser to read plugin child elements within an include", "close_source_branch": false, "reviewers": [], "id": 350, "destination": {"commit": {"hash": "5f6927a5d99c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/5f6927a5d99c.json"}, "html": {"href": "#!/osrf/sdformat/commits/5f6927a5d99c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf4"}}, "created_on": "2017-06-21T18:46:07.224384+00:00", "summary": {"raw": "I noticed that the SDF parser does not read the child elements of a plugin if the plugin is within an include. 3d19ad2 fixes this bug by calling `readXml` for any plugins identified within an include element. While parsing an SDF, most XML child elements are processed (recursively) using `readXml`, with include elements being an exception, which is why I pursued this solution.\r\n\r\n3d19ad2 also coincidentally fixes a second bug. Before the proposed changes if a plugin within an include is missing a required attribute (\"name\" or \"filename\"), an exception occurs because the parser assumes the plugin has these attributes. With the proposed changes, the parser will exit with an error message as it normally would for an SDF with a missing required field.\r\n\r\nI added two integration tests in plugin_include.cc which fail without the fix. The first tests that plugin child elements are read even within an include. The second tests that `readXml` returns false when a plugin within an include is missing the \"filename\" attribute (instead of raising an exception).", "markup": "markdown", "html": "<p>I noticed that the SDF parser does not read the child elements of a plugin if the plugin is within an include. <a href=\"#!/osrf/sdformat/commits/3d19ad2\" rel=\"nofollow\" class=\"ap-connect-link\">3d19ad2</a> fixes this bug by calling <code>readXml</code> for any plugins identified within an include element. While parsing an SDF, most XML child elements are processed (recursively) using <code>readXml</code>, with include elements being an exception, which is why I pursued this solution.</p>\n<p><a href=\"#!/osrf/sdformat/commits/3d19ad2\" rel=\"nofollow\" class=\"ap-connect-link\">3d19ad2</a> also coincidentally fixes a second bug. Before the proposed changes if a plugin within an include is missing a required attribute (\"name\" or \"filename\"), an exception occurs because the parser assumes the plugin has these attributes. With the proposed changes, the parser will exit with an error message as it normally would for an SDF with a missing required field.</p>\n<p>I added two integration tests in plugin_include.cc which fail without the fix. The first tests that plugin child elements are read even within an include. The second tests that <code>readXml</code> returns false when a plugin within an include is missing the \"filename\" attribute (instead of raising an exception).</p>", "type": "rendered"}, "source": {"commit": {"hash": "d64a9788f5ce", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/sdformat/commit/d64a9788f5ce"}, "html": {"href": "https://bitbucket.org/pchorak/sdformat/commits/d64a9788f5ce"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/pchorak/sdformat"}, "html": {"href": "https://bitbucket.org/pchorak/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{dfc4fc26-772d-4be4-b516-5c5e7160a2a6}ts=c_plus_plus"}}, "type": "repository", "name": "sdformat", "full_name": "pchorak/sdformat", "uuid": "{dfc4fc26-772d-4be4-b516-5c5e7160a2a6}"}, "branch": {"name": "plugin_within_include"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-06-21T19:16:43.482947+00:00", "type": "participant", "approved": false, "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}}, {"role": "PARTICIPANT", "participated_on": "2017-06-22T00:36:04.865066+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-03T18:35:36.944883+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2017-07-03T18:35:43.473904+00:00", "author": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "merge_commit": {"hash": "eaddf57f366e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/eaddf57f366e.json"}, "html": {"href": "#!/osrf/sdformat/commits/eaddf57f366e"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}