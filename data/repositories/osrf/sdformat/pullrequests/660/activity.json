{"pagelen": 50, "values": [{"update": {"description": "Added the surface DOM with a contact object to store surface properties.\r\n\r\nFor now it only implements a single property \\(collide\\_bitmask\\), since it is already a quite large piece of code I thought I\u2019d check if it is correct from a style / idea point of view before adding the rest of the parameters \\(friction related\\).\r\n\r\nApart from the unit tests, a high level test can be done using the new collide\\_bitmask feature in the ign-physics branch, specifically in ign-physics:\r\n\r\n```\r\nhg checkout add_surface_dom\r\n<rebuild>\r\nign gazebo -v 4 shapes_bitmask.sdf\r\n```\r\n\r\nResult on my machine \\(on ogre1\\):\r\n\r\n![](https://bitbucket.org/repo/ak8x4z/images/902803472-image.png)\r\nAny feedback on style, API design, etc. more than welcome as always.\r\n\r\nThe main part I find tricky to understand is how to modify properties in subelements of a root node \\(and if it should be allowed\\).  \r\nFor example, since a function such as \r\n\r\n`const *Contact Cont() const`\r\n\r\nDoesn\u2019t allow modifying all the underlying properties, which means that it\u2019s illegal to do:\r\n\r\n```\r\nsdf::Surface surface;\r\nsurface.Cont()->SetCollideBitmask(0x12);\r\n```\r\n\r\nBut the only way to do such change is to replace the whole Contact subelement:\r\n\r\n```\r\nsdf::Contact contact;\r\ncontact.SetCollideBitmask(0x12);\r\nsurface.SetCont(contact);\r\n```\r\n\r\nIs this behavior intended?", "title": "[WIP] Adding surface DOM", "destination": {"commit": {"hash": "138e9503c4b8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/138e9503c4b8.json"}, "html": {"href": "#!/osrf/sdformat/commits/138e9503c4b8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "reason": "", "source": {"commit": {"hash": "0abb61e6b262", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/0abb61e6b262.json"}, "html": {"href": "#!/osrf/sdformat/commits/0abb61e6b262"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "add_surface_dom"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-02-20T05:41:00.343420+00:00"}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660/comments/135299163.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660/_/diff#comment-135299163"}}, "parent": {"id": 135292816, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660/comments/135292816.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660/_/diff#comment-135292816"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}, "content": {"raw": "I remember we went back to using raw pointers because it was said that some compilers do not guarantee ABI compatibility for unique pointers. For sdformat, I would stick to raw pointers for this reason and also for consistency.", "markup": "markdown", "html": "<p>I remember we went back to using raw pointers because it was said that some compilers do not guarantee ABI compatibility for unique pointers. For sdformat, I would stick to raw pointers for this reason and also for consistency.</p>", "type": "rendered"}, "created_on": "2020-02-11T04:40:28.582680+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-02-11T04:40:28.591085+00:00", "type": "pullrequest_comment", "id": 135299163}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660/comments/135292816.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660/_/diff#comment-135292816"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}, "content": {"raw": "Ok will rename \\(also the Surface getter then\\).\n\nAnother question about the pimpl practice in sdformat, I have found some resources on how to implement the pimpl idiom using smart pointers \\(unique\\_ptr for the dataPtr\\), which would save us a few lines of code and sources of potential bugs \\(at the very least we can get a default destructor\\).  \nWould that be something worth looking into or do you prefer to keep consistency to the rest of the library and just keep using raw pointers?", "markup": "markdown", "html": "<p>Ok will rename (also the Surface getter then).</p>\n<p>Another question about the pimpl practice in sdformat, I have found some resources on how to implement the pimpl idiom using smart pointers (unique_ptr for the dataPtr), which would save us a few lines of code and sources of potential bugs (at the very least we can get a default destructor).<br />\nWould that be something worth looking into or do you prefer to keep consistency to the rest of the library and just keep using raw pointers?</p>", "type": "rendered"}, "created_on": "2020-02-11T02:49:31.483089+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-02-11T02:49:31.488010+00:00", "type": "pullrequest_comment", "id": 135292816}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660/comments/135279470.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660/_/diff#comment-135279470"}}, "parent": {"id": 135279367, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660/comments/135279367.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660/_/diff#comment-135279367"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}, "content": {"raw": "As for the function name `Cont`, it would be nice to use the full name. To avoid function name and class name collision you can do:\n\n```\npublic: const sdf::Contact *Contact() const;\n```\n\n\u200c", "markup": "markdown", "html": "<p>As for the function name <code>Cont</code>, it would be nice to use the full name. To avoid function name and class name collision you can do:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">public</span><span class=\"o\">:</span> <span class=\"kd\">const</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">Contact</span> <span class=\"o\">*</span><span class=\"n\">Contact</span><span class=\"o\">()</span> <span class=\"kd\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-02-10T23:08:15.691392+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-02-10T23:08:15.702503+00:00", "type": "pullrequest_comment", "id": 135279470}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660/comments/135279367.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660/_/diff#comment-135279367"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}, "content": {"raw": "> `const *Contact Cont() const`\n\nI think the `const` return type was meant to make these DOM objects readonly. I found that as we do more integration with ign-gazebo, there\u2019s need to populate these objects manually instead of reading everything from an sdf element. So I think it\u2019s ok to make it non-const, e.g. I didn\u2019t make the return type const [here](#!/osrf/sdformat/src/aab66b9e2f56d50ff345c50dfb4cff0e062fe7bf/include/sdf/Material.hh#lines-187). ", "markup": "markdown", "html": "<blockquote>\n<p><code>const *Contact Cont() const</code></p>\n</blockquote>\n<p>I think the <code>const</code> return type was meant to make these DOM objects readonly. I found that as we do more integration with ign-gazebo, there\u2019s need to populate these objects manually instead of reading everything from an sdf element. So I think it\u2019s ok to make it non-const, e.g. I didn\u2019t make the return type const <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/aab66b9e2f56d50ff345c50dfb4cff0e062fe7bf/include/sdf/Material.hh#lines-187\" rel=\"nofollow\">here</a>. </p>", "type": "rendered"}, "created_on": "2020-02-10T23:06:53.356137+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-02-10T23:06:53.362664+00:00", "type": "pullrequest_comment", "id": 135279367}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"update": {"description": "Added the surface DOM with a contact object to store surface properties.\r\n\r\nFor now it only implements a single property \\(collide\\_bitmask\\), since it is already a quite large piece of code I thought I\u2019d check if it is correct from a style / idea point of view before adding the rest of the parameters \\(friction related\\).\r\n\r\nApart from the unit tests, a high level test can be done using the new collide\\_bitmask feature in the ign-physics branch, specifically in ign-physics:\r\n\r\n```\r\nhg checkout add_surface_dom\r\n<rebuild>\r\nign gazebo -v 4 shapes_bitmask.sdf\r\n```\r\n\r\nResult on my machine \\(on ogre1\\):\r\n\r\n![](https://bitbucket.org/repo/ak8x4z/images/902803472-image.png)\r\nAny feedback on style, API design, etc. more than welcome as always.\r\n\r\nThe main part I find tricky to understand is how to modify properties in subelements of a root node \\(and if it should be allowed\\).  \r\nFor example, since a function such as \r\n\r\n`const *Contact Cont() const`\r\n\r\nDoesn\u2019t allow modifying all the underlying properties, which means that it\u2019s illegal to do:\r\n\r\n```\r\nsdf::Surface surface;\r\nsurface.Cont()->SetCollideBitmask(0x12);\r\n```\r\n\r\nBut the only way to do such change is to replace the whole Contact subelement:\r\n\r\n```\r\nsdf::Contact contact;\r\ncontact.SetCollideBitmask(0x12);\r\nsurface.SetCont(contact);\r\n```\r\n\r\nIs this behavior intended?", "title": "[WIP] Adding surface DOM", "destination": {"commit": {"hash": "b33e09de2c8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b33e09de2c8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/b33e09de2c8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "reason": "", "source": {"commit": {"hash": "36e485e600fc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/36e485e600fc.json"}, "html": {"href": "#!/osrf/sdformat/commits/36e485e600fc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "add_surface_dom"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T08:44:21.558966+00:00"}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"update": {"description": "Added the surface DOM with a contact object to store surface properties.\r\n\r\nFor now it only implements a single property \\(collide\\_bitmask\\), since it is already a quite large piece of code I thought I\u2019d check if it is correct from a style / idea point of view before adding the rest of the parameters \\(friction related\\).\r\n\r\nApart from the unit tests, a high level test can be done using the new collide\\_bitmask feature in the ign-physics branch, specifically in ign-physics:\r\n\r\n```\r\nhg checkout add_surface_dom\r\n<rebuild>\r\nign gazebo -v 4 shapes_bitmask.sdf\r\n```\r\n\r\nResult on my machine \\(on ogre1\\):\r\n\r\n![](https://bitbucket.org/repo/ak8x4z/images/902803472-image.png)\r\nAny feedback on style, API design, etc. more than welcome as always.", "title": "[WIP] Adding surface DOM", "destination": {"commit": {"hash": "b33e09de2c8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b33e09de2c8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/b33e09de2c8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "reason": "", "source": {"commit": {"hash": "36e485e600fc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/36e485e600fc.json"}, "html": {"href": "#!/osrf/sdformat/commits/36e485e600fc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "add_surface_dom"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T08:33:40.728431+00:00"}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"update": {"description": "Added the surface DOM with a contact object to store surface properties.\r\n\r\nFor now it only implements a single property \\(collide\\_bitmask\\), since it is already a quite large piece of code I thought I\u2019d check if it is correct from a style / idea point of view before adding the rest of the parameters \\(friction related\\).\r\n\r\nApart from the unit tests, a high level test can be done using the new collide\\_bitmask feature in the ign-physics branch, specifically in ign-physics:\r\n\r\n```\r\nhg checkout add_surface_dom\r\n<rebuild>\r\nign gazebo -v 4 shapes_bitmask.sdf\r\n```\r\n\r\nResult on my machine \\(on ogre1\\):\r\n\r\n![](https://bitbucket.org/repo/ak8x4z/images/902803472-image.png)\r\nAny feedback on style, API design, etc. more than welcome as always.", "title": "[WIP] Adding surface DOM", "destination": {"commit": {"hash": "b33e09de2c8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b33e09de2c8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/b33e09de2c8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "reason": "", "source": {"commit": {"hash": "d28cfae939f6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/d28cfae939f6.json"}, "html": {"href": "#!/osrf/sdformat/commits/d28cfae939f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "add_surface_dom"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T08:30:09.470787+00:00"}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"update": {"description": "Added the surface DOM with a contact object to store surface properties.\r\n\r\nFor now it only implements a single property \\(collide\\_bitmask\\), since it is already a quite large piece of code I thought I\u2019d check if it is correct from a style / idea point of view before adding the rest of the parameters \\(friction related\\).\r\n\r\nApart from the unit tests, a high level test can be done using the new collide\\_bitmask feature in the ign-physics branch, specifically in ign-physics:\r\n\r\n```\r\nhg checkout add_surface_dom\r\n<rebuild>\r\nign gazebo -v 4 shapes_bitmask.sdf\r\n```\r\n\r\nResult on my machine \\(on ogre1\\):\r\n\r\n![](https://bitbucket.org/repo/ak8x4z/images/902803472-image.png)\r\nAny feedback on style, API design, etc. more than welcome as always.", "title": "[WIP] Adding surface DOM", "destination": {"commit": {"hash": "b33e09de2c8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b33e09de2c8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/b33e09de2c8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "reason": "", "source": {"commit": {"hash": "d28cfae939f6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/d28cfae939f6.json"}, "html": {"href": "#!/osrf/sdformat/commits/d28cfae939f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "add_surface_dom"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T08:30:09.389059+00:00"}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"update": {"description": "Added the surface DOM with a contact object to store surface properties.\r\n\r\nFor now it only implements a single property \\(collide\\_bitmask\\), since it is already a quite large piece of code I thought I\u2019d check if it is correct from a style / idea point of view before adding the rest of the parameters \\(friction related\\).\r\n\r\nApart from the unit tests, a high level test can be done using the new collide\\_bitmask feature in the ign-physics branch, specifically in ign-physics:\r\n\r\n```\r\nhg checkout add_surface_dom\r\n<rebuild>\r\nign gazebo -v 4 shapes_bitmask.sdf\r\n```\r\n\r\nResult on my machine \\(on ogre1\\):\r\n\r\n![](https://bitbucket.org/repo/ak8x4z/images/902803472-image.png)\r\nAny feedback on style, API design, etc. more than welcome as always.", "title": "[WIP] Adding surface DOM", "destination": {"commit": {"hash": "a31f8377a5db", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a31f8377a5db.json"}, "html": {"href": "#!/osrf/sdformat/commits/a31f8377a5db"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "reason": "", "source": {"commit": {"hash": "d28cfae939f6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/d28cfae939f6.json"}, "html": {"href": "#!/osrf/sdformat/commits/d28cfae939f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "add_surface_dom"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T08:29:37.694128+00:00"}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}, {"update": {"description": "Added the surface DOM with a contact object to store surface properties.\r\n\r\nFor now it only implements a single property \\(collide\\_bitmask\\), since it is already a quite large piece of code I thought I\u2019d check if it is correct from a style / idea point of view before adding the rest of the parameters \\(friction related\\).\r\n\r\nApart from the unit tests, a high level test can be done using the new collide\\_bitmask feature in the ign-physics branch, specifically in ign-physics:\r\n\r\n```\r\nhg checkout add_surface_dom\r\n<rebuild>\r\nign gazebo -v 4 shapes_bitmask.sdf\r\n```\r\n\r\nResult on my machine \\(on ogre1\\):\r\n\r\n![](https://bitbucket.org/repo/ak8x4z/images/902803472-image.png)\r\nAny feedback on style, API design, etc. more than welcome as always.", "title": "[WIP] Adding surface DOM", "destination": {"commit": {"hash": "a31f8377a5db", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a31f8377a5db.json"}, "html": {"href": "#!/osrf/sdformat/commits/a31f8377a5db"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "reason": "", "source": {"commit": {"hash": "d28cfae939f6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/d28cfae939f6.json"}, "html": {"href": "#!/osrf/sdformat/commits/d28cfae939f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "add_surface_dom"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T08:29:37.653991+00:00"}, "pull_request": {"type": "pullrequest", "id": 660, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/660.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/660"}}, "title": "[WIP] Adding surface DOM"}}]}