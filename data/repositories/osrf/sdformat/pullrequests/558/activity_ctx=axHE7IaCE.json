{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116899734.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116899734"}}, "parent": {"id": 116899165, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116899165.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116899165"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "I suppose we could use `file` with only 2 slashes for relative paths: `file://relative/path/to/mesh.dae`", "markup": "markdown", "html": "<p>I suppose we could use <code>file</code> with only 2 slashes for relative paths: <code>file://relative/path/to/mesh.dae</code></p>", "type": "rendered"}, "created_on": "2019-09-13T22:12:20.653568+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-13T22:12:20.661925+00:00", "type": "pullrequest_comment", "id": 116899734}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116899165.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116899165"}}, "parent": {"id": 116897673, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116897673.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116897673"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "I would suggest using `<uri>file:///home/user/...</uri>`", "markup": "markdown", "html": "<p>I would suggest using <code>&lt;uri&gt;file:///home/user/...&lt;/uri&gt;</code></p>", "type": "rendered"}, "created_on": "2019-09-13T22:02:01.283231+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-13T22:02:01.294263+00:00", "type": "pullrequest_comment", "id": 116899165}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116897673.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116897673"}}, "parent": {"id": 116894848, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116894848.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116894848"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "I don't know, it still feels odd to me to come up with a new scheme just for this. I feel like there must be a more standard way of handling relative paths, I'm doing some research. From web files, to any files dealing with UNIX systems, a path like `meshes/some_mesh.dae` would be treated like a relative path. Maybe I'm just missing the formal way of describing it?\n\nWe already support `<uri>/home/user/...</uri>`, would we stop supporting that because it doesn't have a scheme?", "markup": "markdown", "html": "<p>I don't know, it still feels odd to me to come up with a new scheme just for this. I feel like there must be a more standard way of handling relative paths, I'm doing some research. From web files, to any files dealing with UNIX systems, a path like <code>meshes/some_mesh.dae</code> would be treated like a relative path. Maybe I'm just missing the formal way of describing it?</p>\n<p>We already support <code>&lt;uri&gt;/home/user/...&lt;/uri&gt;</code>, would we stop supporting that because it doesn't have a scheme?</p>", "type": "rendered"}, "created_on": "2019-09-13T21:37:48.236847+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-09-13T21:37:48.247701+00:00", "type": "pullrequest_comment", "id": 116897673}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116894848.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116894848"}}, "parent": {"id": 116891280, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116891280.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116891280"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "it's not a URI without a scheme, and it's easier to detect when relative paths are in use if they declare themselves as such\n\n`path://` is shorter\n\nalso, scheme's can't have `_` characters https://stackoverflow.com/a/9142331/7179595", "markup": "markdown", "html": "<p>it's not a URI without a scheme, and it's easier to detect when relative paths are in use if they declare themselves as such</p>\n<p><code>path://</code> is shorter</p>\n<p>also, scheme's can't have <code>_</code> characters <a href=\"https://stackoverflow.com/a/9142331/7179595\" rel=\"nofollow\" class=\"ap-connect-link\">https://stackoverflow.com/a/9142331/7179595</a></p>", "type": "rendered"}, "created_on": "2019-09-13T20:55:58.799520+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-13T20:55:58.808725+00:00", "type": "pullrequest_comment", "id": 116894848}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116891280.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116891280"}}, "parent": {"id": 116887834, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116887834.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116887834"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "Oh you're right, I don't think it would be an official \"URI\". I'm not sure what issue the extra `relative_path://` scheme is trying to fix though. My first impulse is not to add a new scheme that needs to be learned, since the use of relative paths is quite common in different applications and should be easier to look and know what it means.", "markup": "markdown", "html": "<p>Oh you're right, I don't think it would be an official \"URI\". I'm not sure what issue the extra <code>relative_path://</code> scheme is trying to fix though. My first impulse is not to add a new scheme that needs to be learned, since the use of relative paths is quite common in different applications and should be easier to look and know what it means.</p>", "type": "rendered"}, "created_on": "2019-09-13T20:14:15.176972+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-09-13T20:14:15.187829+00:00", "type": "pullrequest_comment", "id": 116891280}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116887834.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116887834"}}, "parent": {"id": 116886109, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116886109.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116886109"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "yeah, the attribute isn't needed, but `meshes/some_mesh.dae` isn't really a URI because it doesn't start with `scheme:`. So perhaps we use the following?\n\n~~~\n<uri>relative_path://meshes/some_mesh.dae</uri>\n~~~", "markup": "markdown", "html": "<p>yeah, the attribute isn't needed, but <code>meshes/some_mesh.dae</code> isn't really a URI because it doesn't start with <code>scheme:</code>. So perhaps we use the following?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;uri&gt;</span>relative_path://meshes/some_mesh.dae<span class=\"nt\">&lt;/uri&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-09-13T19:35:36.941409+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-13T19:35:36.951578+00:00", "type": "pullrequest_comment", "id": 116887834}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116886370.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116886370"}}, "parent": {"id": 116760971, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116760971.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116760971"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "No they won't, which is unfortunate but I can't think of a workaround. I think the reason we haven't had issues with relative paths inside COLLADA and OBJ files before is that we never load those files from strings - they always must come from a file on disk. I don't think it would be a good idea to enforce that for SDF though.\n\nI like your idea of at least printing more informative warnings mentioning that a relative path may not have worked because the SDF was loaded from a string.", "markup": "markdown", "html": "<p>No they won't, which is unfortunate but I can't think of a workaround. I think the reason we haven't had issues with relative paths inside COLLADA and OBJ files before is that we never load those files from strings - they always must come from a file on disk. I don't think it would be a good idea to enforce that for SDF though.</p>\n<p>I like your idea of at least printing more informative warnings mentioning that a relative path may not have worked because the SDF was loaded from a string.</p>", "type": "rendered"}, "created_on": "2019-09-13T19:19:55.088028+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-09-13T19:19:55.098930+00:00", "type": "pullrequest_comment", "id": 116886370}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116886109.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116886109"}}, "parent": {"id": 116885492, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116885492.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116885492"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "I think the user should already be getting some warning that the path was not found. We could try to make it more informative mentioning the relative path.\n\nThe `relative_path` attribute seems a bit redundant to me, since we can detect that from the URI pattern, no?", "markup": "markdown", "html": "<p>I think the user should already be getting some warning that the path was not found. We could try to make it more informative mentioning the relative path.</p>\n<p>The <code>relative_path</code> attribute seems a bit redundant to me, since we can detect that from the URI pattern, no?</p>", "type": "rendered"}, "created_on": "2019-09-13T19:17:05.781061+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-09-13T19:17:05.792876+00:00", "type": "pullrequest_comment", "id": 116886109}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116885492.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116885492"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "so this works with the EntityFactory by passing an sdf string with an `<include>` tag:\n\n~~~\n'<sdf version=\\\"1.6\\\">'\\\n'<include>'\\\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/actor - relative paths</uri>'\\\n'</include>'\\\n'</sdf>\" '\n~~~\n\nI think it wouldn't work if you read the model file to a string and pass the string. I don't know how common that use case is, but it would be good to have helpful error messages like \"this model uses relative paths and requires a file path\" or something. Or do we need an attribute saying relative paths are being used?\n\n~~~\n                <geometry>\n                    <mesh>\n                        <uri relative_path=\"true\">meshes/some_mesh.dae</uri>\n                    </mesh>\n                </geometry>\n~~~", "markup": "markdown", "html": "<p>so this works with the EntityFactory by passing an sdf string with an <code>&lt;include&gt;</code> tag:</p>\n<div class=\"codehilite\"><pre><span></span>&#39;<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">\\&quot;1.6\\&quot;</span><span class=\"nt\">&gt;</span>&#39;\\\n&#39;<span class=\"nt\">&lt;include&gt;</span>&#39;\\\n&#39;<span class=\"nt\">&lt;uri&gt;</span>https://fuel.ignitionrobotics.org/1.0/chapulina/models/actor - relative paths<span class=\"nt\">&lt;/uri&gt;</span>&#39;\\\n&#39;<span class=\"nt\">&lt;/include&gt;</span>&#39;\\\n&#39;<span class=\"nt\">&lt;/sdf&gt;</span>&quot; &#39;\n</pre></div>\n\n\n<p>I think it wouldn't work if you read the model file to a string and pass the string. I don't know how common that use case is, but it would be good to have helpful error messages like \"this model uses relative paths and requires a file path\" or something. Or do we need an attribute saying relative paths are being used?</p>\n<div class=\"codehilite\"><pre><span></span>                <span class=\"nt\">&lt;geometry&gt;</span>\n                    <span class=\"nt\">&lt;mesh&gt;</span>\n                        <span class=\"nt\">&lt;uri</span> <span class=\"na\">relative_path=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">&gt;</span>meshes/some_mesh.dae<span class=\"nt\">&lt;/uri&gt;</span>\n                    <span class=\"nt\">&lt;/mesh&gt;</span>\n                <span class=\"nt\">&lt;/geometry&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-09-13T19:09:44.269843+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-13T19:09:44.280598+00:00", "type": "pullrequest_comment", "id": 116885492}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116760971.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116760971"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "so I guess relative paths won't work when the source comes from a `data-string`?", "markup": "markdown", "html": "<p>so I guess relative paths won't work when the source comes from a <code>data-string</code>?</p>", "type": "rendered"}, "created_on": "2019-09-13T04:34:24.508461+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-09-13T04:34:24.515012+00:00", "type": "pullrequest_comment", "id": 116760971}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116008063.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116008063"}}, "parent": {"id": 116007192, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116007192.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116007192"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "Thanks :fingers_crossed: ", "markup": "markdown", "html": "<p>Thanks <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f91e.png\" alt=\"\ud83e\udd1e\" title=\":fingers_crossed:\" data-emoji-short-name=\":fingers_crossed:\" /> </p>", "type": "rendered"}, "created_on": "2019-09-06T22:26:27.346659+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-09-06T22:26:27.356556+00:00", "type": "pullrequest_comment", "id": 116008063}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116007192.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116007192"}}, "parent": {"id": 116004625, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116004625.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116004625"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "maybe fixed in 5fdb220", "markup": "markdown", "html": "<p>maybe fixed in <a href=\"#!/osrf/sdformat/commits/5fdb220\" rel=\"nofollow\" class=\"ap-connect-link\">5fdb220</a></p>", "type": "rendered"}, "created_on": "2019-09-06T22:09:03.615029+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-06T22:09:03.626963+00:00", "type": "pullrequest_comment", "id": 116007192}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<actor><skin><filename>`\r\n* `<actor><animation><filename>` \r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"vehicle\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\nTo try actors, you'll need [this ign-gazebo PR](https://bitbucket.org/mingfeisun/ign-gazebo/pull-requests/4/support-spawning-actors-at-runtime/diff), and you can spawn an actor with relative paths like this (world must use ogre 1):\r\n\r\n```\r\nign service -s /world/actors/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/actor - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"person\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "5fdb22003eb8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/5fdb22003eb8.json"}, "html": {"href": "#!/osrf/sdformat/commits/5fdb22003eb8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-09-06T22:07:33.456036+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/116004625.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-116004625"}}, "parent": {"id": 115861188, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/115861188.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-115861188"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "still failing\n\n~~~\n97: [ RUN      ] Element.FilePath\n97: D:\\Jenkins\\workspace\\sdformat-ci-pr_any-windows7-amd64\\ws\\sdformat\\src\\Element_TEST.cc(190): error: Expected equality of these values:\n97:   \"meshes/collision.dae\"\n97:   uri\n97:     Which is: \"meshes\\\\collision.dae\"\n97: [  FAILED  ] Element.FilePath (0 ms)\n~~~\n\n[![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-windows7-amd64&build=787)](https://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/787/) https://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/787/", "markup": "markdown", "html": "<p>still failing</p>\n<div class=\"codehilite\"><pre><span></span>97: [ RUN      ] Element.FilePath\n97: D:\\Jenkins\\workspace\\sdformat-ci-pr_any-windows7-amd64\\ws\\sdformat\\src\\Element_TEST.cc(190): error: Expected equality of these values:\n97:   &quot;meshes/collision.dae&quot;\n97:   uri\n97:     Which is: &quot;meshes\\\\collision.dae&quot;\n97: [  FAILED  ] Element.FilePath (0 ms)\n</pre></div>\n\n\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/787/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-windows7-amd64&amp;build=787\" /></a> <a href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/787/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/787/</a></p>", "type": "rendered"}, "created_on": "2019-09-06T21:27:54.124486+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-06T21:27:54.133484+00:00", "type": "pullrequest_comment", "id": 116004625}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/115861188.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-115861188"}}, "parent": {"id": 115859545, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/115859545.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-115859545"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "Should be fixed here: 64ac1ab\n\nBut in the long run, ideally we'd convert paths within the SDF file from Unix to Windows, so the same SDF can be used. I don't think we're doing that for full paths yet though.", "markup": "markdown", "html": "<p>Should be fixed here: <a href=\"#!/osrf/sdformat/commits/64ac1ab\" rel=\"nofollow\" class=\"ap-connect-link\">64ac1ab</a></p>\n<p>But in the long run, ideally we'd convert paths within the SDF file from Unix to Windows, so the same SDF can be used. I don't think we're doing that for full paths yet though.</p>", "type": "rendered"}, "created_on": "2019-09-06T01:26:41.498877+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-09-06T01:26:41.507610+00:00", "type": "pullrequest_comment", "id": 115861188}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<actor><skin><filename>`\r\n* `<actor><animation><filename>` \r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"vehicle\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\nTo try actors, you'll need [this ign-gazebo PR](https://bitbucket.org/mingfeisun/ign-gazebo/pull-requests/4/support-spawning-actors-at-runtime/diff), and you can spawn an actor with relative paths like this (world must use ogre 1):\r\n\r\n```\r\nign service -s /world/actors/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/actor - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"person\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "64ac1ab16be9", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/64ac1ab16be9.json"}, "html": {"href": "#!/osrf/sdformat/commits/64ac1ab16be9"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-06T01:19:45.419137+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/115859545.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-115859545"}}, "parent": {"id": 115856542, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/115856542.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-115856542"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "one test failure seems related to a path separator", "markup": "markdown", "html": "<p>one test failure seems related to a path separator</p>", "type": "rendered"}, "created_on": "2019-09-06T00:51:18.990375+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-09-06T00:51:19.000015+00:00", "type": "pullrequest_comment", "id": 115859545}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558/comments/115856542.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558/_/diff#comment-115856542"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}, "content": {"raw": "New Windows build, don't know what happened with the original one: [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-windows7-amd64&build=782)](https://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/782/)", "markup": "markdown", "html": "<p>New Windows build, don't know what happened with the original one: <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-windows7-amd64/782/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-windows7-amd64&amp;build=782\" /></a></p>", "type": "rendered"}, "created_on": "2019-09-05T23:50:13.017402+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-09-05T23:50:13.023859+00:00", "type": "pullrequest_comment", "id": 115856542}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<actor><skin><filename>`\r\n* `<actor><animation><filename>` \r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"vehicle\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\nTo try actors, you'll need [this ign-gazebo PR](https://bitbucket.org/mingfeisun/ign-gazebo/pull-requests/4/support-spawning-actors-at-runtime/diff), and you can spawn an actor with relative paths like this (world must use ogre 1):\r\n\r\n```\r\nign service -s /world/actors/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/actor - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"person\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "5ab7de255d37", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/5ab7de255d37.json"}, "html": {"href": "#!/osrf/sdformat/commits/5ab7de255d37"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T23:43:01.430953+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<actor><skin><filename>`\r\n* `<actor><animation><filename>` \r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "5ab7de255d37", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/5ab7de255d37.json"}, "html": {"href": "#!/osrf/sdformat/commits/5ab7de255d37"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T23:34:56.887289+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<material><script><uri>`\r\n* `<actor><skin><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n* `<actor><animation><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "5ab7de255d37", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/5ab7de255d37.json"}, "html": {"href": "#!/osrf/sdformat/commits/5ab7de255d37"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T23:34:17.734534+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<material><script><uri>`\r\n* `<actor><skin><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n* `<actor><animation><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "1e25a1a74d74", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/1e25a1a74d74.json"}, "html": {"href": "#!/osrf/sdformat/commits/1e25a1a74d74"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T16:33:21.229215+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<material><script><uri>`\r\n* `<actor><skin><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n* `<actor><animation><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "1e25a1a74d74", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/1e25a1a74d74.json"}, "html": {"href": "#!/osrf/sdformat/commits/1e25a1a74d74"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T16:33:03.420529+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<material><script><uri>`\r\n* `<actor><skin><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n* `<actor><animation><filename>` \\(:warning: Just occurred to me, I'll do it tomorrow\\)\r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n\r\n    * Status:\r\n    \r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n        \r\n    \r\n* Absolute path \\(`file:///`, `/`\\)\r\n\r\n    * Status:\r\n    \r\n        * Supported both on Gazebo 9 and Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        \r\n    * Cons:\r\n    \r\n        * Not easily portable from one computer to another\r\n        * Exposes creator's username \\(`/home/username/...`\\)\r\n        \r\n    \r\n* `model://`\r\n\r\n    * Status:\r\n    \r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n        \r\n    * Pros:\r\n    \r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Ambiguous, no owner / host site info\r\n        \r\n    \r\n* Relative path `meshes/`\r\n\r\n    * Status:\r\n    \r\n        * Support added on this PR, to be used by Ignition\r\n        \r\n    * Pros:\r\n    \r\n        * No ambiguity\r\n        * Portable\r\n        \r\n    * Cons:\r\n    \r\n        * Hard to share resources across models\r\n        \r\n    \r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases \\*\\*. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n\\*\\* Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` \\(because the mesh object is serialized\\), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. \\(ok, this is not a question, more like a disclaimer :grimacing: \\)", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "cf757e58627f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/cf757e58627f.json"}, "html": {"href": "#!/osrf/sdformat/commits/cf757e58627f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Alfredo Bencomo", "uuid": "{84891a71-dff2-4b97-8891-9446c16e6f89}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D"}, "html": {"href": "https://bitbucket.org/%7B84891a71-dff2-4b97-8891-9446c16e6f89%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cf75629ff02b50ea27b2817/82be1d48-d490-4d7b-8ddb-a8093b9417a6/128"}}, "nickname": "bencomo", "type": "user", "account_id": "5cf75629ff02b50ea27b2817"}, "date": "2019-09-05T03:22:37.030538+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<material><script><uri>`\r\n* `<actor><skin><filename>` (:warning: Just occurred to me, I'll do it tomorrow)\r\n* `<actor><animation><filename>` (:warning: Just occurred to me, I'll do it tomorrow)\r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n    * Status:\r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n    * Cons:\r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n\r\n* Absolute path (`file:///`, `/`)\r\n    * Status:\r\n        * Supported both on Gazebo 9 and Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n    * Cons:\r\n        * Not easily portable from one computer to another\r\n        * Exposes  creator's username (`/home/username/...`)\r\n* `model://`\r\n    * Status:\r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n    * Pros:\r\n        * Portable\r\n    * Cons:\r\n        * Ambiguous, no owner / host site info\r\n* Relative path `meshes/`\r\n    * Status:\r\n        * Support added on this PR, to be used by Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n        * Portable\r\n    * Cons:\r\n        * Hard to share resources across models\r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases **. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n** Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/default/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 5000 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` (because the mesh object is serialized), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. (ok, this is not a question, more like a disclaimer :grimacing: )", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "cf757e58627f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/cf757e58627f.json"}, "html": {"href": "#!/osrf/sdformat/commits/cf757e58627f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T02:51:05.957391+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<material><script><uri>`\r\n* `<actor><skin><filename>` (:warning: Just occurred to me, I'll do it tomorrow)\r\n* `<actor><animation><filename>` (:warning: Just occurred to me, I'll do it tomorrow)\r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n    * Status:\r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n    * Cons:\r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n\r\n* Absolute path (`file:///`, `/`)\r\n    * Status:\r\n        * Supported both on Gazebo 9 and Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n    * Cons:\r\n        * Not easily portable from one computer to another\r\n        * Exposes  creator's username (`/home/username/...`)\r\n* `model://`\r\n    * Status:\r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n    * Pros:\r\n        * Portable\r\n    * Cons:\r\n        * Ambiguous, no owner / host site info\r\n* Relative path `meshes/`\r\n    * Status:\r\n        * Support added on this PR, to be used by Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n        * Portable\r\n    * Cons:\r\n        * Hard to share resources across models\r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases **. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n** Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/empty/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 300 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` (because the mesh object is serialized), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. (ok, this is not a question, more like a disclaimer :grimacing: )", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "cf757e58627f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/cf757e58627f.json"}, "html": {"href": "#!/osrf/sdformat/commits/cf757e58627f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T02:47:40.757684+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}, {"update": {"description": "tl;dr\r\n\r\nSupport using paths relative to the SDF file within:\r\n\r\n* `<mesh><uri>`\r\n* `<material><script><uri>`\r\n* `<actor><skin><filename>` (:warning: Just occurred to me, I'll do it tomorrow)\r\n* `<actor><animation><filename>` (:warning: Just occurred to me, I'll do it tomorrow)\r\n\r\nThat is, for this file tree:\r\n\r\n```\r\nsome_model/\r\n\u251c\u2500\u2500 meshes\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 some_mesh.dae\r\n\u251c\u2500\u2500 model.config\r\n\u2514\u2500\u2500 model.sdf\r\n```\r\n\r\n`model.sdf` may reference the mesh as follows:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\n## Alternatives\r\n\r\nOn Gazebo classic, it would usually have been like this:\r\n\r\n```\r\n                <geometry>\r\n                    <mesh>\r\n                        <uri>model://some_model/meshes/some_mesh.dae</uri>\r\n                    </mesh>\r\n                </geometry>\r\n```\r\n\r\nWhere `model://` would get substituted by paths in the user's `GAZEBO_MODEL_PATH` until a valid file was found.\r\n\r\nAs we move to models hosted on Ignition Fuel, just the model name becomes insufficient to fully identify a model, so we need better ways of referring to resources.\r\n\r\nSome alternatives considered:\r\n\r\n* `https://`\r\n    * Status:\r\n        * Partial support on Gazebo 9\r\n        * Supported within `<include><uri>` on Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n    * Cons:\r\n        * Full URL must be known while creating model. When referring to resources belonging to the same model, it's a chicken and egg problem: how to know the resource URL before uploading the model to the site?\r\n        * Tied to an online service\r\n\r\n* Absolute path (`file:///`, `/`)\r\n    * Status:\r\n        * Supported both on Gazebo 9 and Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n    * Cons:\r\n        * Not easily portable from one computer to another\r\n        * Exposes  creator's username (`/home/username/...`)\r\n* `model://`\r\n    * Status:\r\n        * Full support on Gazebo 9\r\n        * Partial support for meshes on Ignition. Gets converted to absolute path after downloaded from Fuel.\r\n    * Pros:\r\n        * Portable\r\n    * Cons:\r\n        * Ambiguous, no owner / host site info\r\n* Relative path `meshes/`\r\n    * Status:\r\n        * Support added on this PR, to be used by Ignition\r\n    * Pros:\r\n        * No ambiguity\r\n        * Portable\r\n    * Cons:\r\n        * Hard to share resources across models\r\n\r\nGiven that all alternatives have pros and cons, there isn't one right answer, so we need to support multiple approaches. This pull request adds support for relative paths without breaking any of the previous use cases **. We should still address its \"con\", which is the difficulty of sharing resources across models. But that isn't supported at all on Ignition yet, so I think it can be considered out of the scope of this PR.\r\n\r\nIt's also worth mentioning that we've already been using relative paths inside `DAE` and `OBJ` files for a while, so it's only natural to extend it to SDF.\r\n\r\n** Except for relative paths to the directory `ign gazebo` is called from, which I don't think is a common case.\r\n\r\n## Try it out\r\n\r\nLaunch `ign gazebo`:\r\n\r\n`ign gazebo -v 3`\r\n\r\nSpawn an example model with relative paths that I uploaded to Fuel:\r\n\r\n```\r\nign service -s /world/empty/create \\\r\n--reqtype ignition.msgs.EntityFactory \\\r\n--reptype ignition.msgs.Boolean \\\r\n--timeout 300 \\\r\n--req 'sdf: '\\\r\n'\"<?xml version=\\\"1.0\\\" ?>'\\\r\n'<sdf version=\\\"1.6\\\">'\\\r\n'<include>'\\\r\n'<uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/X1 Config 1 - relative paths</uri>'\\\r\n'</include>'\\\r\n'</sdf>\" '\\\r\n'pose: {position: {z: 1}} '\\\r\n'name: \"house\" '\\\r\n'allow_renaming: true'\r\n```\r\n\r\nSee that all meshes are properly loaded.\r\n\r\n\r\n## Questions\r\n\r\n* With the current implementation, `mesh->Element()->Get<std::string>(\"uri\")` will be different from `mesh->Uri()`. Is it better to also change the `uri` within the element to keep them consistent?\r\n\r\n* It could be argued that SDFormat shouldn't be changing the URI value and instead just reading it and passing it along. I'm fine with that, but for downstream applications that can't rely on `mesh->Element()` (because the mesh object is serialized), we'd need to add things like `Mesh::FilePath`, a `filepath` field to the equivalent ign-msg, etc, which break ABI. (ok, this is not a question, more like a disclaimer :grimacing: )", "title": "Accept relative path in <uri>", "destination": {"commit": {"hash": "6e638eef73d8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6e638eef73d8.json"}, "html": {"href": "#!/osrf/sdformat/commits/6e638eef73d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "reason": "", "source": {"commit": {"hash": "cf757e58627f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/cf757e58627f.json"}, "html": {"href": "#!/osrf/sdformat/commits/cf757e58627f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "rel_path"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-09-05T02:47:40.729193+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/558"}}, "title": "Accept relative path in <uri>"}}]}