{"rendered": {"description": {"raw": "This patch series is the beginning of the removal of some parts of boost from sdformat.  In particular, it gets rid of the use of boost::regex and boost::lexical_cast in Converter.cc.  Along the way, it also adds a number of additional tests to Converter_TEST.cc, in order to test the code paths where these come into play.  Note that there will be additional patches in the future to remove other users of boost in the codebase, so consider this just a start.\r\n\r\n\r\n* Remove an unnecessary check from Converter::Remove.\r\n\r\n* Remove trailing whitespace in 1_5.convert\r\n\r\n* Add in tests for the Converter::Remove method.\r\n\r\n* Significantly simplify Converter::Remove.\r\n\r\n    In particular, it has no reason to use boost:regex to split\r\n    on ::.  It should act a lot more like Add, where it just\r\n    takes a specific element or attribute to remove, and does\r\n    just that.  As an added bonus, we also add the ability to\r\n    remove attributes with this commit.\r\n\r\n* Add in a test for Converter::Remove of attributes.\r\n\r\n* Remove an unnecessary check.\r\n\r\n* Be consistent with curly braces.\r\n\r\n    Always put them after a statement that could be compound,\r\n    even if it is not right now.  It reduces noise, and possibly\r\n    bugs, in future patches.\r\n\r\n* Add a test with an invalid move element\r\n\r\n* Add a test for an invalid move prefix.\r\n\r\n* Add in a test for Converter::Move with copy.\r\n\r\n* Replace use of boost::algorithm::regex with std::regex.\r\n\r\n* Add a test for converting old <gazebo> -> <sdf>\r\n\r\n* Remove use of boost lexical_cast.\r\n\r\n    We can just use the standard library stod instead.", "markup": "markdown", "html": "<p>This patch series is the beginning of the removal of some parts of boost from sdformat.  In particular, it gets rid of the use of boost::regex and boost::lexical_cast in Converter.cc.  Along the way, it also adds a number of additional tests to Converter_TEST.cc, in order to test the code paths where these come into play.  Note that there will be additional patches in the future to remove other users of boost in the codebase, so consider this just a start.</p>\n<ul>\n<li>\n<p>Remove an unnecessary check from Converter::Remove.</p>\n</li>\n<li>\n<p>Remove trailing whitespace in 1_5.convert</p>\n</li>\n<li>\n<p>Add in tests for the Converter::Remove method.</p>\n</li>\n<li>\n<p>Significantly simplify Converter::Remove.</p>\n<p>In particular, it has no reason to use boost:regex to split\non ::.  It should act a lot more like Add, where it just\ntakes a specific element or attribute to remove, and does\njust that.  As an added bonus, we also add the ability to\nremove attributes with this commit.</p>\n</li>\n<li>\n<p>Add in a test for Converter::Remove of attributes.</p>\n</li>\n<li>\n<p>Remove an unnecessary check.</p>\n</li>\n<li>\n<p>Be consistent with curly braces.</p>\n<p>Always put them after a statement that could be compound,\neven if it is not right now.  It reduces noise, and possibly\nbugs, in future patches.</p>\n</li>\n<li>\n<p>Add a test with an invalid move element</p>\n</li>\n<li>\n<p>Add a test for an invalid move prefix.</p>\n</li>\n<li>\n<p>Add in a test for Converter::Move with copy.</p>\n</li>\n<li>\n<p>Replace use of boost::algorithm::regex with std::regex.</p>\n</li>\n<li>\n<p>Add a test for converting old &lt;gazebo&gt; -&gt; &lt;sdf&gt;</p>\n</li>\n<li>\n<p>Remove use of boost lexical_cast.</p>\n<p>We can just use the standard library stod instead.</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Remove parts of boost", "markup": "markdown", "html": "<p>Remove parts of boost</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This patch series is the beginning of the removal of some parts of boost from sdformat.  In particular, it gets rid of the use of boost::regex and boost::lexical_cast in Converter.cc.  Along the way, it also adds a number of additional tests to Converter_TEST.cc, in order to test the code paths where these come into play.  Note that there will be additional patches in the future to remove other users of boost in the codebase, so consider this just a start.\r\n\r\n\r\n* Remove an unnecessary check from Converter::Remove.\r\n\r\n* Remove trailing whitespace in 1_5.convert\r\n\r\n* Add in tests for the Converter::Remove method.\r\n\r\n* Significantly simplify Converter::Remove.\r\n\r\n    In particular, it has no reason to use boost:regex to split\r\n    on ::.  It should act a lot more like Add, where it just\r\n    takes a specific element or attribute to remove, and does\r\n    just that.  As an added bonus, we also add the ability to\r\n    remove attributes with this commit.\r\n\r\n* Add in a test for Converter::Remove of attributes.\r\n\r\n* Remove an unnecessary check.\r\n\r\n* Be consistent with curly braces.\r\n\r\n    Always put them after a statement that could be compound,\r\n    even if it is not right now.  It reduces noise, and possibly\r\n    bugs, in future patches.\r\n\r\n* Add a test with an invalid move element\r\n\r\n* Add a test for an invalid move prefix.\r\n\r\n* Add in a test for Converter::Move with copy.\r\n\r\n* Replace use of boost::algorithm::regex with std::regex.\r\n\r\n* Add a test for converting old <gazebo> -> <sdf>\r\n\r\n* Remove use of boost lexical_cast.\r\n\r\n    We can just use the standard library stod instead.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/302/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diffstat/osrf/sdformat:844050c82041%0D4785596401fe?from_pullrequest_id=302"}, "commits": {"href": "data/repositories/osrf/sdformat/pullrequests/302/commits.json"}, "self": {"href": "data/repositories/osrf/sdformat/pullrequests/302.json"}, "comments": {"href": "data/repositories/osrf/sdformat/pullrequests/302/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/302/merge"}, "html": {"href": "#!/osrf/sdformat/pull-requests/302"}, "activity": {"href": "data/repositories/osrf/sdformat/pullrequests/302/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:844050c82041%0D4785596401fe?from_pullrequest_id=302"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/302/approve"}, "statuses": {"href": "data/repositories/osrf/sdformat/pullrequests/302/statuses_page=1.json"}}, "title": "Remove parts of boost", "close_source_branch": true, "reviewers": [], "id": 302, "destination": {"commit": {"hash": "4785596401fe", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/4785596401fe.json"}, "html": {"href": "#!/osrf/sdformat/commits/4785596401fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "created_on": "2017-02-03T16:12:48.964624+00:00", "summary": {"raw": "This patch series is the beginning of the removal of some parts of boost from sdformat.  In particular, it gets rid of the use of boost::regex and boost::lexical_cast in Converter.cc.  Along the way, it also adds a number of additional tests to Converter_TEST.cc, in order to test the code paths where these come into play.  Note that there will be additional patches in the future to remove other users of boost in the codebase, so consider this just a start.\r\n\r\n\r\n* Remove an unnecessary check from Converter::Remove.\r\n\r\n* Remove trailing whitespace in 1_5.convert\r\n\r\n* Add in tests for the Converter::Remove method.\r\n\r\n* Significantly simplify Converter::Remove.\r\n\r\n    In particular, it has no reason to use boost:regex to split\r\n    on ::.  It should act a lot more like Add, where it just\r\n    takes a specific element or attribute to remove, and does\r\n    just that.  As an added bonus, we also add the ability to\r\n    remove attributes with this commit.\r\n\r\n* Add in a test for Converter::Remove of attributes.\r\n\r\n* Remove an unnecessary check.\r\n\r\n* Be consistent with curly braces.\r\n\r\n    Always put them after a statement that could be compound,\r\n    even if it is not right now.  It reduces noise, and possibly\r\n    bugs, in future patches.\r\n\r\n* Add a test with an invalid move element\r\n\r\n* Add a test for an invalid move prefix.\r\n\r\n* Add in a test for Converter::Move with copy.\r\n\r\n* Replace use of boost::algorithm::regex with std::regex.\r\n\r\n* Add a test for converting old <gazebo> -> <sdf>\r\n\r\n* Remove use of boost lexical_cast.\r\n\r\n    We can just use the standard library stod instead.", "markup": "markdown", "html": "<p>This patch series is the beginning of the removal of some parts of boost from sdformat.  In particular, it gets rid of the use of boost::regex and boost::lexical_cast in Converter.cc.  Along the way, it also adds a number of additional tests to Converter_TEST.cc, in order to test the code paths where these come into play.  Note that there will be additional patches in the future to remove other users of boost in the codebase, so consider this just a start.</p>\n<ul>\n<li>\n<p>Remove an unnecessary check from Converter::Remove.</p>\n</li>\n<li>\n<p>Remove trailing whitespace in 1_5.convert</p>\n</li>\n<li>\n<p>Add in tests for the Converter::Remove method.</p>\n</li>\n<li>\n<p>Significantly simplify Converter::Remove.</p>\n<p>In particular, it has no reason to use boost:regex to split\non ::.  It should act a lot more like Add, where it just\ntakes a specific element or attribute to remove, and does\njust that.  As an added bonus, we also add the ability to\nremove attributes with this commit.</p>\n</li>\n<li>\n<p>Add in a test for Converter::Remove of attributes.</p>\n</li>\n<li>\n<p>Remove an unnecessary check.</p>\n</li>\n<li>\n<p>Be consistent with curly braces.</p>\n<p>Always put them after a statement that could be compound,\neven if it is not right now.  It reduces noise, and possibly\nbugs, in future patches.</p>\n</li>\n<li>\n<p>Add a test with an invalid move element</p>\n</li>\n<li>\n<p>Add a test for an invalid move prefix.</p>\n</li>\n<li>\n<p>Add in a test for Converter::Move with copy.</p>\n</li>\n<li>\n<p>Replace use of boost::algorithm::regex with std::regex.</p>\n</li>\n<li>\n<p>Add a test for converting old &lt;gazebo&gt; -&gt; &lt;sdf&gt;</p>\n</li>\n<li>\n<p>Remove use of boost lexical_cast.</p>\n<p>We can just use the standard library stod instead.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "87c0c6fdd4d1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/87c0c6fdd4d1.json"}, "html": {"href": "#!/osrf/sdformat/commits/87c0c6fdd4d1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "remove-boost-branch"}}, "comment_count": 20, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-02-08T00:48:35.219938+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2017-02-07T21:41:13.157154+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-02-07T22:10:52.468302+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2017-02-08T00:47:26.037307+00:00", "type": "participant", "approved": false, "user": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}}], "reason": "", "updated_on": "2017-02-08T00:48:41.004194+00:00", "author": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "merge_commit": {"hash": "844050c82041", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/844050c82041.json"}, "html": {"href": "#!/osrf/sdformat/commits/844050c82041"}}}, "closed_by": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}}