{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161477.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161477"}}, "parent": {"id": 24161186, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161186.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161186"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "Ok, sounds good. I just thought that an alternative API could be:\n\n\n```\n#!c++\n\nint newDefaultValue;\nauto value = sdf->Get<int>(\"key\"); // If there's no key, return param's default (if existent)\n\nif (value.second)\n  std::cout <<  \"Got value[\" << value.first << \"]\\n\";\nelse\n{\n  // Can always set my desired default later\n  value.first = newDefaultValue;\n  std::cout << \"Using new default value[\" << value.first << \"]\\n\";\n}\n```\n\nBut we wouldn't be able to overload Get with different return types, so nevermind.", "markup": "markdown", "html": "<p>Ok, sounds good. I just thought that an alternative API could be:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">int</span> <span class=\"n\">newDefaultValue</span><span class=\"p\">;</span>\n<span class=\"k\">auto</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;key&quot;</span><span class=\"p\">);</span> <span class=\"c1\">// If there&#39;s no key, return param&#39;s default (if existent)</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">)</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span>  <span class=\"s\">&quot;Got value[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"k\">else</span>\n<span class=\"p\">{</span>\n  <span class=\"c1\">// Can always set my desired default later</span>\n  <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"o\">=</span> <span class=\"n\">newDefaultValue</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Using new default value[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>But we wouldn't be able to overload Get with different return types, so nevermind.</p>", "type": "rendered"}, "created_on": "2016-09-22T23:20:07.042779+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "outdated": false, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-22T23:21:28.720691+00:00", "type": "pullrequest_comment", "id": 24161477}