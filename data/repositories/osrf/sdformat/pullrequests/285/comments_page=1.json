{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24160632.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24160632"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "ping", "markup": "markdown", "html": "<p>ping</p>", "type": "rendered"}, "created_on": "2016-09-22T22:45:51.764948+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-09-22T22:45:51.773439+00:00", "type": "pullrequest_comment", "id": 24160632}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24160918.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24160918"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "How about the param's default value? There's no way to reach that value using this function, right? We'd need to use the other Get?", "markup": "markdown", "html": "<p>How about the param's default value? There's no way to reach that value using this function, right? We'd need to use the other Get?</p>", "type": "rendered"}, "created_on": "2016-09-22T22:57:17.590302+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 369, "from": null, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-22T22:57:17.593192+00:00", "type": "pullrequest_comment", "id": 24160918}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161033.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161033"}}, "parent": {"id": 24160918, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24160918.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24160918"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "Could you explain a bit more? Are you suggesting to use the param's default value in this function instead of the passed in `_defaultValue`?", "markup": "markdown", "html": "<p>Could you explain a bit more? Are you suggesting to use the param's default value in this function instead of the passed in <code>_defaultValue</code>?</p>", "type": "rendered"}, "created_on": "2016-09-22T23:02:44.271332+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-22T23:02:44.276810+00:00", "type": "pullrequest_comment", "id": 24161033}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161155.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161155"}}, "parent": {"id": 24161033, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161033.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161033"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "Yes, that. It's just not clear to me why we would need to pass a default value if there is one already. If the user doesn't want the default given by param, they can always check `result.second` and use the value they would have given as an argument, right?", "markup": "markdown", "html": "<p>Yes, that. It's just not clear to me why we would need to pass a default value if there is one already. If the user doesn't want the default given by param, they can always check <code>result.second</code> and use the value they would have given as an argument, right?</p>", "type": "rendered"}, "created_on": "2016-09-22T23:06:58.593747+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-22T23:06:58.595669+00:00", "type": "pullrequest_comment", "id": 24161155}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161186.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161186"}}, "parent": {"id": 24161155, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161155.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161155"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "A param doesn't necessarily have a default value (values in `<plugins>` for example). There is also a use case for overriding the default value specified in SDF.", "markup": "markdown", "html": "<p>A param doesn't necessarily have a default value (values in <code>&lt;plugins&gt;</code> for example). There is also a use case for overriding the default value specified in SDF.</p>", "type": "rendered"}, "created_on": "2016-09-22T23:08:20.539649+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-22T23:08:20.544437+00:00", "type": "pullrequest_comment", "id": 24161186}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161477.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161477"}}, "parent": {"id": 24161186, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161186.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161186"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "Ok, sounds good. I just thought that an alternative API could be:\n\n\n```\n#!c++\n\nint newDefaultValue;\nauto value = sdf->Get<int>(\"key\"); // If there's no key, return param's default (if existent)\n\nif (value.second)\n  std::cout <<  \"Got value[\" << value.first << \"]\\n\";\nelse\n{\n  // Can always set my desired default later\n  value.first = newDefaultValue;\n  std::cout << \"Using new default value[\" << value.first << \"]\\n\";\n}\n```\n\nBut we wouldn't be able to overload Get with different return types, so nevermind.", "markup": "markdown", "html": "<p>Ok, sounds good. I just thought that an alternative API could be:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">int</span> <span class=\"n\">newDefaultValue</span><span class=\"p\">;</span>\n<span class=\"k\">auto</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;key&quot;</span><span class=\"p\">);</span> <span class=\"c1\">// If there&#39;s no key, return param&#39;s default (if existent)</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">)</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span>  <span class=\"s\">&quot;Got value[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"k\">else</span>\n<span class=\"p\">{</span>\n  <span class=\"c1\">// Can always set my desired default later</span>\n  <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"o\">=</span> <span class=\"n\">newDefaultValue</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Using new default value[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">first</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>But we wouldn't be able to overload Get with different return types, so nevermind.</p>", "type": "rendered"}, "created_on": "2016-09-22T23:20:07.042779+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-22T23:21:28.720691+00:00", "type": "pullrequest_comment", "id": 24161477}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24195210.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24195210"}}, "parent": {"id": 24161477, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24161477.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24161477"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "I believe this function captures the behavior you describe. The param's default value (if present) is used before the passed in `_default` value.", "markup": "markdown", "html": "<p>I believe this function captures the behavior you describe. The param's default value (if present) is used before the passed in <code>_default</code> value.</p>", "type": "rendered"}, "created_on": "2016-09-23T13:46:20.992959+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-23T13:46:20.997085+00:00", "type": "pullrequest_comment", "id": 24195210}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24206968.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:737b8f37af7e..3337093af106?path=include%2Fsdf%2FElement.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24206968"}}, "parent": {"id": 24195210, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24195210.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24195210"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "Oh ok great, yeah that's what I was wondering about.", "markup": "markdown", "html": "<p>Oh ok great, yeah that's what I was wondering about.</p>", "type": "rendered"}, "created_on": "2016-09-23T16:51:52.524728+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "path": "include/sdf/Element.hh"}, "updated_on": "2016-09-23T16:51:52.526921+00:00", "type": "pullrequest_comment", "id": 24206968}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24213430.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24213430"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "I'm not entirely convinced about this change. `HasElement()` and `Get()` have a clear meaning than checking the `.first` and `.second` of a pair. I can be convinced otherwise but the first block reads better to me and looks shorter. What is the advantage of checking `value.second` compared with `HasElement()`?", "markup": "markdown", "html": "<p>I'm not entirely convinced about this change. <code>HasElement()</code> and <code>Get()</code> have a clear meaning than checking the <code>.first</code> and <code>.second</code> of a pair. I can be convinced otherwise but the first block reads better to me and looks shorter. What is the advantage of checking <code>value.second</code> compared with <code>HasElement()</code>?</p>", "type": "rendered"}, "created_on": "2016-09-23T19:20:35.247639+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-09-23T19:20:35.252241+00:00", "type": "pullrequest_comment", "id": 24213430}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24216617.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24216617"}}, "parent": {"id": 24213430, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24213430.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24213430"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "You can still use `HasElement` and `Get`. Without this PR, you have to use `HasElement` in order for `Get` to work. Otherwise an error is printed, and the value returned by `Get` is a default constructed template type.\n\nThis [pull request](https://bitbucket.org/osrf/gazebo/pull-requests/2264) implemented a custom version of this functionality.", "markup": "markdown", "html": "<p>You can still use <code>HasElement</code> and <code>Get</code>. Without this PR, you have to use <code>HasElement</code> in order for <code>Get</code> to work. Otherwise an error is printed, and the value returned by <code>Get</code> is a default constructed template type.</p>\n<p>This <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2264\" rel=\"nofollow\">pull request</a> implemented a custom version of this functionality.</p>", "type": "rendered"}, "created_on": "2016-09-23T20:45:02.443690+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-09-23T20:45:02.449310+00:00", "type": "pullrequest_comment", "id": 24216617}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24219297.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24219297"}}, "parent": {"id": 24216617, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24216617.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24216617"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "I think omer of my comments didn't go through. \n\nThis pair interface also supports std::tie.\n\n```\nbool success;\nstd:: string value;\n\nstd::tie(value, success) = sdf->Get<std::string>(\"key\", \"default\");\n\n```\n\nOr\n\n```\nstd::tie(value, std::ignore) = sdf->Get<std::string>(\"key\", \"default\");\n```", "markup": "markdown", "html": "<p>I think omer of my comments didn't go through. </p>\n<p>This pair interface also supports std::tie.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">bool</span> <span class=\"nt\">success</span><span class=\"o\">;</span>\n<span class=\"nt\">std</span><span class=\"o\">::</span> <span class=\"nt\">string</span> <span class=\"nt\">value</span><span class=\"o\">;</span>\n\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">tie</span><span class=\"o\">(</span><span class=\"nt\">value</span><span class=\"o\">,</span> <span class=\"nt\">success</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">sdf-</span><span class=\"o\">&gt;</span><span class=\"nt\">Get</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"o\">&gt;(</span><span class=\"s2\">&quot;key&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;default&quot;</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>Or</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">tie</span><span class=\"o\">(</span><span class=\"nt\">value</span><span class=\"o\">,</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">ignore</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">sdf-</span><span class=\"o\">&gt;</span><span class=\"nt\">Get</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"o\">&gt;(</span><span class=\"s2\">&quot;key&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;default&quot;</span><span class=\"o\">);</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-09-23T22:22:59.819613+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-09-23T22:22:59.821637+00:00", "type": "pullrequest_comment", "id": 24219297}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24218473.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24218473"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "I see the point now. Looks good to me, just wondering if something like this is more readable than the `std::pair`:\n\n```\n#!c++\n\nbool keyFound = sdf->Get<int>(\"key\", 0, value);\n\nif (keyFound)\n  std::cout <<  \"Got value[\" << value << \"]\\n\";\nelse\n  std::cout << \"Using default value[\" << value << \"]\\n\";\n```\n\nI'll leave it up to you.", "markup": "markdown", "html": "<p>I see the point now. Looks good to me, just wondering if something like this is more readable than the <code>std::pair</code>:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">bool</span> <span class=\"n\">keyFound</span> <span class=\"o\">=</span> <span class=\"n\">sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;key&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">);</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">keyFound</span><span class=\"p\">)</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span>  <span class=\"s\">&quot;Got value[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">value</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"k\">else</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Using default value[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">value</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>I'll leave it up to you.</p>", "type": "rendered"}, "created_on": "2016-09-23T21:48:40.280029+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-09-23T22:13:01.789111+00:00", "type": "pullrequest_comment", "id": 24218473}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24219206.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24219206"}}, "parent": {"id": 24218473, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24218473.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24218473"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "I think we can also support that interface. Feel free to make that addition or capture it an issue.", "markup": "markdown", "html": "<p>I think we can also support that interface. Feel free to make that addition or capture it an issue.</p>", "type": "rendered"}, "created_on": "2016-09-23T22:18:53.696528+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-09-23T22:18:53.698717+00:00", "type": "pullrequest_comment", "id": 24219206}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24219210.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24219210"}}, "parent": {"id": 24218473, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285/comments/24218473.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285/_/diff#comment-24218473"}}, "depth": 1}, "deleted": true, "pullrequest": {"type": "pullrequest", "id": 285, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/285.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/285"}}, "title": "Get improvement"}, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2016-09-23T22:19:02.664845+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-09-23T22:19:36.389995+00:00", "type": "pullrequest_comment", "id": 24219210}], "page": 1, "size": 14}