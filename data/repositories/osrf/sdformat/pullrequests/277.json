{"rendered": {"description": {"raw": "We have a few warnings:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n[src/Param.cc:28]: (performance) Variable 'value' is assigned in constructor body. Consider performing initialization in initialization list.\r\n[src/parser_urdf.cc:3323]: (performance) Inefficient usage of string::find() in condition; string::compare() would be faster.\r\n[src/parser_urdf.cc:3365]: (performance) Inefficient usage of string::find() in condition; string::compare() would be faster.\r\nTotal errors found: 0\r\n```\r\n", "markup": "markdown", "html": "<p>We have a few warnings:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Param</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">28</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">performance</span><span class=\"p\">)</span> <span class=\"n\">Variable</span> <span class=\"err\">&#39;</span><span class=\"n\">value</span><span class=\"err\">&#39;</span> <span class=\"n\">is</span> <span class=\"n\">assigned</span> <span class=\"n\">in</span> <span class=\"n\">constructor</span> <span class=\"n\">body</span><span class=\"p\">.</span> <span class=\"n\">Consider</span> <span class=\"n\">performing</span> <span class=\"n\">initialization</span> <span class=\"n\">in</span> <span class=\"n\">initialization</span> <span class=\"n\">list</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">parser_urdf</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">3323</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">performance</span><span class=\"p\">)</span> <span class=\"n\">Inefficient</span> <span class=\"n\">usage</span> <span class=\"n\">of</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">find</span><span class=\"p\">()</span> <span class=\"n\">in</span> <span class=\"n\">condition</span><span class=\"p\">;</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">compare</span><span class=\"p\">()</span> <span class=\"n\">would</span> <span class=\"n\">be</span> <span class=\"n\">faster</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">parser_urdf</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">3365</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">performance</span><span class=\"p\">)</span> <span class=\"n\">Inefficient</span> <span class=\"n\">usage</span> <span class=\"n\">of</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">find</span><span class=\"p\">()</span> <span class=\"n\">in</span> <span class=\"n\">condition</span><span class=\"p\">;</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">compare</span><span class=\"p\">()</span> <span class=\"n\">would</span> <span class=\"n\">be</span> <span class=\"n\">faster</span><span class=\"p\">.</span>\n<span class=\"n\">Total</span> <span class=\"n\">errors</span> <span class=\"nl\">found</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Fix style checker in Xenial", "markup": "markdown", "html": "<p>Fix style checker in Xenial</p>", "type": "rendered"}}, "type": "pullrequest", "description": "We have a few warnings:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n[src/Param.cc:28]: (performance) Variable 'value' is assigned in constructor body. Consider performing initialization in initialization list.\r\n[src/parser_urdf.cc:3323]: (performance) Inefficient usage of string::find() in condition; string::compare() would be faster.\r\n[src/parser_urdf.cc:3365]: (performance) Inefficient usage of string::find() in condition; string::compare() would be faster.\r\nTotal errors found: 0\r\n```\r\n", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/277/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diffstat/osrf/sdformat:0dd38b0f34b3%0D68b73fbb2fd3?from_pullrequest_id=277"}, "commits": {"href": "data/repositories/osrf/sdformat/pullrequests/277/commits.json"}, "self": {"href": "data/repositories/osrf/sdformat/pullrequests/277.json"}, "comments": {"href": "data/repositories/osrf/sdformat/pullrequests/277/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/277/merge"}, "html": {"href": "#!/osrf/sdformat/pull-requests/277"}, "activity": {"href": "data/repositories/osrf/sdformat/pullrequests/277/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:0dd38b0f34b3%0D68b73fbb2fd3?from_pullrequest_id=277"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/277/approve"}, "statuses": {"href": "data/repositories/osrf/sdformat/pullrequests/277/statuses_page=1.json"}}, "title": "Fix style checker in Xenial", "close_source_branch": true, "reviewers": [], "id": 277, "destination": {"commit": {"hash": "68b73fbb2fd3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/68b73fbb2fd3.json"}, "html": {"href": "#!/osrf/sdformat/commits/68b73fbb2fd3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "created_on": "2016-05-24T23:16:02.454017+00:00", "summary": {"raw": "We have a few warnings:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n[src/Param.cc:28]: (performance) Variable 'value' is assigned in constructor body. Consider performing initialization in initialization list.\r\n[src/parser_urdf.cc:3323]: (performance) Inefficient usage of string::find() in condition; string::compare() would be faster.\r\n[src/parser_urdf.cc:3365]: (performance) Inefficient usage of string::find() in condition; string::compare() would be faster.\r\nTotal errors found: 0\r\n```\r\n", "markup": "markdown", "html": "<p>We have a few warnings:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">Param</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">28</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">performance</span><span class=\"p\">)</span> <span class=\"n\">Variable</span> <span class=\"err\">&#39;</span><span class=\"n\">value</span><span class=\"err\">&#39;</span> <span class=\"n\">is</span> <span class=\"n\">assigned</span> <span class=\"n\">in</span> <span class=\"n\">constructor</span> <span class=\"n\">body</span><span class=\"p\">.</span> <span class=\"n\">Consider</span> <span class=\"n\">performing</span> <span class=\"n\">initialization</span> <span class=\"n\">in</span> <span class=\"n\">initialization</span> <span class=\"n\">list</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">parser_urdf</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">3323</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">performance</span><span class=\"p\">)</span> <span class=\"n\">Inefficient</span> <span class=\"n\">usage</span> <span class=\"n\">of</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">find</span><span class=\"p\">()</span> <span class=\"n\">in</span> <span class=\"n\">condition</span><span class=\"p\">;</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">compare</span><span class=\"p\">()</span> <span class=\"n\">would</span> <span class=\"n\">be</span> <span class=\"n\">faster</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">parser_urdf</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">3365</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"n\">performance</span><span class=\"p\">)</span> <span class=\"n\">Inefficient</span> <span class=\"n\">usage</span> <span class=\"n\">of</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">find</span><span class=\"p\">()</span> <span class=\"n\">in</span> <span class=\"n\">condition</span><span class=\"p\">;</span> <span class=\"n\">string</span><span class=\"o\">::</span><span class=\"n\">compare</span><span class=\"p\">()</span> <span class=\"n\">would</span> <span class=\"n\">be</span> <span class=\"n\">faster</span><span class=\"p\">.</span>\n<span class=\"n\">Total</span> <span class=\"n\">errors</span> <span class=\"nl\">found</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "f9a51f9328d2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/f9a51f9328d2.json"}, "html": {"href": "#!/osrf/sdformat/commits/f9a51f9328d2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "style_xenial"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-06-17T05:43:53.125001+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-06-16T22:27:36.606954+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2016-06-17T17:07:13.694026+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "0dd38b0f34b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/0dd38b0f34b3.json"}, "html": {"href": "#!/osrf/sdformat/commits/0dd38b0f34b3"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}