{"rendered": {"description": {"raw": "It is stated numerous times in the SDF Specification files that name attributes must be unique within a certain scope. This formalizes the requirement to state that if an element's name is given by the value of its name attribute, sibling elements of the same type must have unique names. This adds a check to this effect in `ign sdf --check` and adds several helper functions to the `sdf::Element` class to support the check.\r\n\r\n* `Element::CountNamedElements(std::string)` to aid in checking for unique names\r\n\r\n* `Element::HasUniqueChildNames()` that uses `CountNamedElements()` to determine if there are any duplicate name attribute values among child elements\r\n\r\n* `GetElementTypeNames()` that returns a set of the type names of all the child elements\r\n\r\nI placed the `recursiveSameTypeUniqueNames()` function inside `ign.cc`; it can be moved to the Element class if we want to make it a part of the public API.\r\n\r\nI noticed some issues in the SDF spec documentation too that could be cleaned up, but I haven't addressed in this pull request:\r\n\r\n* [sensor name attribute](http://sdformat.org/spec?ver=1.6&elem=sensor#sensor_name): \"This name must not match another model in the model.\" (model in the model -> sensor in the parent link)\r\n* [joint name attribute](http://sdformat.org/spec?ver=1.6&elem=joint#joint_name): \"A unique name for the joint within the scope of the model.\" (scope of the model -> scope of the parent link)\r\n\r\nEDIT: fixes #216", "markup": "markdown", "html": "<p>It is stated numerous times in the SDF Specification files that name attributes must be unique within a certain scope. This formalizes the requirement to state that if an element's name is given by the value of its name attribute, sibling elements of the same type must have unique names. This adds a check to this effect in <code>ign sdf --check</code> and adds several helper functions to the <code>sdf::Element</code> class to support the check.</p>\n<ul>\n<li>\n<p><code>Element::CountNamedElements(std::string)</code> to aid in checking for unique names</p>\n</li>\n<li>\n<p><code>Element::HasUniqueChildNames()</code> that uses <code>CountNamedElements()</code> to determine if there are any duplicate name attribute values among child elements</p>\n</li>\n<li>\n<p><code>GetElementTypeNames()</code> that returns a set of the type names of all the child elements</p>\n</li>\n</ul>\n<p>I placed the <code>recursiveSameTypeUniqueNames()</code> function inside <code>ign.cc</code>; it can be moved to the Element class if we want to make it a part of the public API.</p>\n<p>I noticed some issues in the SDF spec documentation too that could be cleaned up, but I haven't addressed in this pull request:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=sensor#sensor_name\" rel=\"nofollow\">sensor name attribute</a>: \"This name must not match another model in the model.\" (model in the model -&gt; sensor in the parent link)</li>\n<li><a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=joint#joint_name\" rel=\"nofollow\">joint name attribute</a>: \"A unique name for the joint within the scope of the model.\" (scope of the model -&gt; scope of the parent link)</li>\n</ul>\n<p>EDIT: fixes <a href=\"#!/osrf/sdformat/issues/216/check-the-sdf-elements-have-unique-names\" rel=\"nofollow\" title=\"Check the SDF elements have unique names when parsing\" class=\"ap-connect-link\">#216</a></p>", "type": "rendered"}, "title": {"raw": "Use \"ign sdf --check\" to check sibling elements of the same type for non-unique names", "markup": "markdown", "html": "<p>Use \"ign sdf --check\" to check sibling elements of the same type for non-unique names</p>", "type": "rendered"}}, "type": "pullrequest", "description": "It is stated numerous times in the SDF Specification files that name attributes must be unique within a certain scope. This formalizes the requirement to state that if an element's name is given by the value of its name attribute, sibling elements of the same type must have unique names. This adds a check to this effect in `ign sdf --check` and adds several helper functions to the `sdf::Element` class to support the check.\r\n\r\n* `Element::CountNamedElements(std::string)` to aid in checking for unique names\r\n\r\n* `Element::HasUniqueChildNames()` that uses `CountNamedElements()` to determine if there are any duplicate name attribute values among child elements\r\n\r\n* `GetElementTypeNames()` that returns a set of the type names of all the child elements\r\n\r\nI placed the `recursiveSameTypeUniqueNames()` function inside `ign.cc`; it can be moved to the Element class if we want to make it a part of the public API.\r\n\r\nI noticed some issues in the SDF spec documentation too that could be cleaned up, but I haven't addressed in this pull request:\r\n\r\n* [sensor name attribute](http://sdformat.org/spec?ver=1.6&elem=sensor#sensor_name): \"This name must not match another model in the model.\" (model in the model -> sensor in the parent link)\r\n* [joint name attribute](http://sdformat.org/spec?ver=1.6&elem=joint#joint_name): \"A unique name for the joint within the scope of the model.\" (scope of the model -> scope of the parent link)\r\n\r\nEDIT: fixes #216", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/554/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diffstat/osrf/sdformat:b6e43d632134%0Db6e5ab2378f1?from_pullrequest_id=554"}, "commits": {"href": "data/repositories/osrf/sdformat/pullrequests/554/commits.json"}, "self": {"href": "data/repositories/osrf/sdformat/pullrequests/554.json"}, "comments": {"href": "data/repositories/osrf/sdformat/pullrequests/554/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/554/merge"}, "html": {"href": "#!/osrf/sdformat/pull-requests/554"}, "activity": {"href": "data/repositories/osrf/sdformat/pullrequests/554/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:b6e43d632134%0Db6e5ab2378f1?from_pullrequest_id=554"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/554/approve"}, "statuses": {"href": "data/repositories/osrf/sdformat/pullrequests/554/statuses_page=1.json"}}, "title": "Use \"ign sdf --check\" to check sibling elements of the same type for non-unique names", "close_source_branch": true, "reviewers": [{"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}, {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}], "id": 554, "destination": {"commit": {"hash": "b6e5ab2378f1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b6e5ab2378f1.json"}, "html": {"href": "#!/osrf/sdformat/commits/b6e5ab2378f1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf6"}}, "created_on": "2019-08-13T01:31:36.538202+00:00", "summary": {"raw": "It is stated numerous times in the SDF Specification files that name attributes must be unique within a certain scope. This formalizes the requirement to state that if an element's name is given by the value of its name attribute, sibling elements of the same type must have unique names. This adds a check to this effect in `ign sdf --check` and adds several helper functions to the `sdf::Element` class to support the check.\r\n\r\n* `Element::CountNamedElements(std::string)` to aid in checking for unique names\r\n\r\n* `Element::HasUniqueChildNames()` that uses `CountNamedElements()` to determine if there are any duplicate name attribute values among child elements\r\n\r\n* `GetElementTypeNames()` that returns a set of the type names of all the child elements\r\n\r\nI placed the `recursiveSameTypeUniqueNames()` function inside `ign.cc`; it can be moved to the Element class if we want to make it a part of the public API.\r\n\r\nI noticed some issues in the SDF spec documentation too that could be cleaned up, but I haven't addressed in this pull request:\r\n\r\n* [sensor name attribute](http://sdformat.org/spec?ver=1.6&elem=sensor#sensor_name): \"This name must not match another model in the model.\" (model in the model -> sensor in the parent link)\r\n* [joint name attribute](http://sdformat.org/spec?ver=1.6&elem=joint#joint_name): \"A unique name for the joint within the scope of the model.\" (scope of the model -> scope of the parent link)\r\n\r\nEDIT: fixes #216", "markup": "markdown", "html": "<p>It is stated numerous times in the SDF Specification files that name attributes must be unique within a certain scope. This formalizes the requirement to state that if an element's name is given by the value of its name attribute, sibling elements of the same type must have unique names. This adds a check to this effect in <code>ign sdf --check</code> and adds several helper functions to the <code>sdf::Element</code> class to support the check.</p>\n<ul>\n<li>\n<p><code>Element::CountNamedElements(std::string)</code> to aid in checking for unique names</p>\n</li>\n<li>\n<p><code>Element::HasUniqueChildNames()</code> that uses <code>CountNamedElements()</code> to determine if there are any duplicate name attribute values among child elements</p>\n</li>\n<li>\n<p><code>GetElementTypeNames()</code> that returns a set of the type names of all the child elements</p>\n</li>\n</ul>\n<p>I placed the <code>recursiveSameTypeUniqueNames()</code> function inside <code>ign.cc</code>; it can be moved to the Element class if we want to make it a part of the public API.</p>\n<p>I noticed some issues in the SDF spec documentation too that could be cleaned up, but I haven't addressed in this pull request:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=sensor#sensor_name\" rel=\"nofollow\">sensor name attribute</a>: \"This name must not match another model in the model.\" (model in the model -&gt; sensor in the parent link)</li>\n<li><a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=joint#joint_name\" rel=\"nofollow\">joint name attribute</a>: \"A unique name for the joint within the scope of the model.\" (scope of the model -&gt; scope of the parent link)</li>\n</ul>\n<p>EDIT: fixes <a href=\"#!/osrf/sdformat/issues/216/check-the-sdf-elements-have-unique-names\" rel=\"nofollow\" title=\"Check the SDF elements have unique names when parsing\" class=\"ap-connect-link\">#216</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "6f670f01aceb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6f670f01aceb.json"}, "html": {"href": "#!/osrf/sdformat/commits/6f670f01aceb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "count_named_elements6"}}, "comment_count": 24, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-08-14T17:03:06.038940+00:00", "type": "participant", "approved": true, "user": {"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}}, {"role": "PARTICIPANT", "participated_on": "2019-08-30T21:09:27.115753+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2019-08-29T00:23:48.059578+00:00", "type": "participant", "approved": true, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}], "reason": "", "updated_on": "2019-08-30T22:15:07.994197+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "b6e43d632134", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b6e43d632134.json"}, "html": {"href": "#!/osrf/sdformat/commits/b6e43d632134"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}