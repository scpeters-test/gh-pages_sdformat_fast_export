{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/463/comments/75953245.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:541328d5245b..cd6645a33f78?path=CMakeLists.txt"}, "html": {"href": "#!/osrf/sdformat/pull-requests/463/_/diff#comment-75953245"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 463, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/463.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/463"}}, "title": "Versioned library install"}, "content": {"raw": "what do you think of parameterizing the output cmake config file name?\n\n~~~\ndiff -r 541328d5245b CMakeLists.txt\n--- a/CMakeLists.txt\tTue Sep 11 12:05:13 2018 -0700\n+++ b/CMakeLists.txt\tThu Sep 13 21:20:57 2018 +0000\n@@ -269,9 +269,9 @@\n   ########################################\n   # Make the cmake config files\n   set(PKG_NAME ${PROJECT_NAME})\n-  set(cmake_conf_file \"cmake/sdf_config.cmake\")\n+  set(cmake_conf_file         \"cmake/sdformat${SDF_MAJOR_VERSION}-config.cmake\")\n   set(cmake_conf_version_file \"cmake/sdformat${SDF_MAJOR_VERSION}-config-version.cmake\")\n-  configure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/${cmake_conf_file}.in\" \"${CMAKE_CURRENT_BINARY_DIR}/sdformat${SDF_MAJOR_VERSION}-config.cmake\" @ONLY)\n+  configure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/sdf_config.cmake.in\" \"${CMAKE_CURRENT_BINARY_DIR}/${cmake_conf_file}\" @ONLY)\n   # Use write_basic_package_version_file to generate a ConfigVersion file that\n   # allow users of gazebo to specify the API or version to depend on\n   # TODO: keep this instruction until deprecate Ubuntu/Precise and update with\n@@ -282,7 +282,7 @@\n       VERSION \"${SDF_VERSION_FULL}\"\n       COMPATIBILITY SameMajorVersion)\n   install(FILES\n-    ${CMAKE_CURRENT_BINARY_DIR}/sdformat${SDF_MAJOR_VERSION}-config.cmake\n+    ${CMAKE_CURRENT_BINARY_DIR}/${cmake_conf_file}\n     ${CMAKE_CURRENT_BINARY_DIR}/${cmake_conf_version_file}\n     DESTINATION\n     ${LIB_INSTALL_DIR}/cmake/${PROJECT_NAME_LOWER}${SDF_MAJOR_VERSION}/\n~~~", "markup": "markdown", "html": "<p>what do you think of parameterizing the output cmake config file name?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 541328d5245b CMakeLists.txt</span>\n<span class=\"gd\">--- a/CMakeLists.txt    Tue Sep 11 12:05:13 2018 -0700</span>\n<span class=\"gi\">+++ b/CMakeLists.txt    Thu Sep 13 21:20:57 2018 +0000</span>\n<span class=\"gu\">@@ -269,9 +269,9 @@</span>\n   ########################################\n   # Make the cmake config files\n   set(PKG_NAME ${PROJECT_NAME})\n<span class=\"gd\">-  set(cmake_conf_file &quot;cmake/sdf_config.cmake&quot;)</span>\n<span class=\"gi\">+  set(cmake_conf_file         &quot;cmake/sdformat${SDF_MAJOR_VERSION}-config.cmake&quot;)</span>\n   set(cmake_conf_version_file &quot;cmake/sdformat${SDF_MAJOR_VERSION}-config-version.cmake&quot;)\n<span class=\"gd\">-  configure_file(&quot;${CMAKE_CURRENT_SOURCE_DIR}/${cmake_conf_file}.in&quot; &quot;${CMAKE_CURRENT_BINARY_DIR}/sdformat${SDF_MAJOR_VERSION}-config.cmake&quot; @ONLY)</span>\n<span class=\"gi\">+  configure_file(&quot;${CMAKE_CURRENT_SOURCE_DIR}/cmake/sdf_config.cmake.in&quot; &quot;${CMAKE_CURRENT_BINARY_DIR}/${cmake_conf_file}&quot; @ONLY)</span>\n   # Use write_basic_package_version_file to generate a ConfigVersion file that\n   # allow users of gazebo to specify the API or version to depend on\n   # TODO: keep this instruction until deprecate Ubuntu/Precise and update with\n<span class=\"gu\">@@ -282,7 +282,7 @@</span>\n       VERSION &quot;${SDF_VERSION_FULL}&quot;\n       COMPATIBILITY SameMajorVersion)\n   install(FILES\n<span class=\"gd\">-    ${CMAKE_CURRENT_BINARY_DIR}/sdformat${SDF_MAJOR_VERSION}-config.cmake</span>\n<span class=\"gi\">+    ${CMAKE_CURRENT_BINARY_DIR}/${cmake_conf_file}</span>\n     ${CMAKE_CURRENT_BINARY_DIR}/${cmake_conf_version_file}\n     DESTINATION\n     ${LIB_INSTALL_DIR}/cmake/${PROJECT_NAME_LOWER}${SDF_MAJOR_VERSION}/\n</pre></div>", "type": "rendered"}, "created_on": "2018-09-13T21:26:12.166642+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 285, "from": null, "outdated": true, "path": "CMakeLists.txt"}, "updated_on": "2018-09-13T21:26:12.229836+00:00", "type": "pullrequest_comment", "id": 75953245}