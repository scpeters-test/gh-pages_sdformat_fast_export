{"rendered": {"reason": {"raw": "I'm backporting a version of this to sdf8", "markup": "markdown", "html": "<p>I'm backporting a version of this to sdf8</p>", "type": "rendered"}, "description": {"raw": "SDFormat looks for files defined in `<include>` tags on all paths defined by the `SDF_PATH` environment variable.\r\n\r\nRight now, that only handles relative paths. For example:\r\n\r\n`export SDF_PATH=/tmp`\r\n\r\n~~~\r\n    <include>\r\n      <uri>the_robot</uri>\r\n    </include>\r\n~~~\r\n\r\nWould result in SDFormat loading `/tmp/the_robot`.\r\n\r\nThis PR proposes also handling URIs by stripping their scheme, so this would also be resolved to `/tmp/the_robot`:\r\n\r\n~~~\r\n    <include>\r\n      <uri>custom://the_robot</uri>\r\n    </include>\r\n~~~\r\n\r\nI can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "markup": "markdown", "html": "<p>SDFormat looks for files defined in <code>&lt;include&gt;</code> tags on all paths defined by the <code>SDF_PATH</code> environment variable.</p>\n<p>Right now, that only handles relative paths. For example:</p>\n<p><code>export SDF_PATH=/tmp</code></p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>the_robot<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>Would result in SDFormat loading <code>/tmp/the_robot</code>.</p>\n<p>This PR proposes also handling URIs by stripping their scheme, so this would also be resolved to <code>/tmp/the_robot</code>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>custom://the_robot<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?</p>", "type": "rendered"}, "title": {"raw": "[Proposal] Remove URI scheme when matching SDF_PATH", "markup": "markdown", "html": "<p>[Proposal] Remove URI scheme when matching SDF_PATH</p>", "type": "rendered"}}, "type": "pullrequest", "description": "SDFormat looks for files defined in `<include>` tags on all paths defined by the `SDF_PATH` environment variable.\r\n\r\nRight now, that only handles relative paths. For example:\r\n\r\n`export SDF_PATH=/tmp`\r\n\r\n~~~\r\n    <include>\r\n      <uri>the_robot</uri>\r\n    </include>\r\n~~~\r\n\r\nWould result in SDFormat loading `/tmp/the_robot`.\r\n\r\nThis PR proposes also handling URIs by stripping their scheme, so this would also be resolved to `/tmp/the_robot`:\r\n\r\n~~~\r\n    <include>\r\n      <uri>custom://the_robot</uri>\r\n    </include>\r\n~~~\r\n\r\nI can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/636/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diffstat/osrf/sdformat:28e36804b35a%0D7f141d5491d2?from_pullrequest_id=636"}, "commits": {"href": "data/repositories/osrf/sdformat/pullrequests/636/commits.json"}, "self": {"href": "data/repositories/osrf/sdformat/pullrequests/636.json"}, "comments": {"href": "data/repositories/osrf/sdformat/pullrequests/636/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/636/merge"}, "html": {"href": "#!/osrf/sdformat/pull-requests/636"}, "activity": {"href": "data/repositories/osrf/sdformat/pullrequests/636/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:28e36804b35a%0D7f141d5491d2?from_pullrequest_id=636"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/636/approve"}, "statuses": {"href": "data/repositories/osrf/sdformat/pullrequests/636/statuses_page=1.json"}}, "title": "[Proposal] Remove URI scheme when matching SDF_PATH", "close_source_branch": false, "reviewers": [], "id": 636, "destination": {"commit": {"hash": "7f141d5491d2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/7f141d5491d2.json"}, "html": {"href": "#!/osrf/sdformat/commits/7f141d5491d2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf9"}}, "created_on": "2019-12-18T23:22:51.545256+00:00", "summary": {"raw": "SDFormat looks for files defined in `<include>` tags on all paths defined by the `SDF_PATH` environment variable.\r\n\r\nRight now, that only handles relative paths. For example:\r\n\r\n`export SDF_PATH=/tmp`\r\n\r\n~~~\r\n    <include>\r\n      <uri>the_robot</uri>\r\n    </include>\r\n~~~\r\n\r\nWould result in SDFormat loading `/tmp/the_robot`.\r\n\r\nThis PR proposes also handling URIs by stripping their scheme, so this would also be resolved to `/tmp/the_robot`:\r\n\r\n~~~\r\n    <include>\r\n      <uri>custom://the_robot</uri>\r\n    </include>\r\n~~~\r\n\r\nI can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "markup": "markdown", "html": "<p>SDFormat looks for files defined in <code>&lt;include&gt;</code> tags on all paths defined by the <code>SDF_PATH</code> environment variable.</p>\n<p>Right now, that only handles relative paths. For example:</p>\n<p><code>export SDF_PATH=/tmp</code></p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>the_robot<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>Would result in SDFormat loading <code>/tmp/the_robot</code>.</p>\n<p>This PR proposes also handling URIs by stripping their scheme, so this would also be resolved to <code>/tmp/the_robot</code>:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>custom://the_robot<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?</p>", "type": "rendered"}, "source": {"commit": {"hash": "28e36804b35a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/28e36804b35a.json"}, "html": {"href": "#!/osrf/sdformat/commits/28e36804b35a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "no_scheme_sdf_path"}}, "comment_count": 3, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2020-01-13T18:25:18.560473+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2020-01-08T15:53:19.710519+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2020-01-13T17:38:57.355887+00:00", "type": "participant", "approved": false, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}], "reason": "I'm backporting a version of this to sdf8", "updated_on": "2020-01-24T23:31:20.294514+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}