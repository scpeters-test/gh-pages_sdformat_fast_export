{"rendered": {"description": {"raw": "The material element is extended to support common Physically Based Rendering \\(PBR\\) parameters. The new `<pbr>` element is optional as the extension aims to be backward compatible with the existing SDF 1.6 spec.\r\n\r\nThere are two types of PBR workflows \\(see [element description](#!/osrf/sdformat/src/258ac02ff2709c510744b7908ca952ffdd3c4343/sdf/1.6/material.sdf#lines-49)\\), e.g. OGRE 2.1 and Unity supports both, while Unreal and Threejs use the Metallic/Roughness workflow. Typically, the user should stick to the same workflow for all materials in the entire scene.\r\n\r\nPros and Cons of the new spec:\r\n\r\n**Pros**: Stricter spec, makes validation easier. Less confusion as to what params are needed in each workflow.\r\n\r\n**Cons**: A few elements are duplicated. The users may not know which workflow to use or what the underlying renderer support. In this case, the user could just specify using the old way \\(without `<pbr`\\) or specify both and let the renderer choose. \r\n\r\nAppreciate any feedback on improving the spec", "markup": "markdown", "html": "<p>The material element is extended to support common Physically Based Rendering (PBR) parameters. The new <code>&lt;pbr&gt;</code> element is optional as the extension aims to be backward compatible with the existing SDF 1.6 spec.</p>\n<p>There are two types of PBR workflows (see <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/258ac02ff2709c510744b7908ca952ffdd3c4343/sdf/1.6/material.sdf#lines-49\" rel=\"nofollow\">element description</a>), e.g. OGRE 2.1 and Unity supports both, while Unreal and Threejs use the Metallic/Roughness workflow. Typically, the user should stick to the same workflow for all materials in the entire scene.</p>\n<p>Pros and Cons of the new spec:</p>\n<p><strong>Pros</strong>: Stricter spec, makes validation easier. Less confusion as to what params are needed in each workflow.</p>\n<p><strong>Cons</strong>: A few elements are duplicated. The users may not know which workflow to use or what the underlying renderer support. In this case, the user could just specify using the old way (without <code>&lt;pbr</code>) or specify both and let the renderer choose. </p>\n<p>Appreciate any feedback on improving the spec</p>", "type": "rendered"}, "title": {"raw": "Add PBR material spec", "markup": "markdown", "html": "<p>Add PBR material spec</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The material element is extended to support common Physically Based Rendering \\(PBR\\) parameters. The new `<pbr>` element is optional as the extension aims to be backward compatible with the existing SDF 1.6 spec.\r\n\r\nThere are two types of PBR workflows \\(see [element description](#!/osrf/sdformat/src/258ac02ff2709c510744b7908ca952ffdd3c4343/sdf/1.6/material.sdf#lines-49)\\), e.g. OGRE 2.1 and Unity supports both, while Unreal and Threejs use the Metallic/Roughness workflow. Typically, the user should stick to the same workflow for all materials in the entire scene.\r\n\r\nPros and Cons of the new spec:\r\n\r\n**Pros**: Stricter spec, makes validation easier. Less confusion as to what params are needed in each workflow.\r\n\r\n**Cons**: A few elements are duplicated. The users may not know which workflow to use or what the underlying renderer support. In this case, the user could just specify using the old way \\(without `<pbr`\\) or specify both and let the renderer choose. \r\n\r\nAppreciate any feedback on improving the spec", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/512/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diffstat/osrf/sdformat:da708ad889b3%0D95728b887601?from_pullrequest_id=512"}, "commits": {"href": "data/repositories/osrf/sdformat/pullrequests/512/commits.json"}, "self": {"href": "data/repositories/osrf/sdformat/pullrequests/512.json"}, "comments": {"href": "data/repositories/osrf/sdformat/pullrequests/512/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/512/merge"}, "html": {"href": "#!/osrf/sdformat/pull-requests/512"}, "activity": {"href": "data/repositories/osrf/sdformat/pullrequests/512/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:da708ad889b3%0D95728b887601?from_pullrequest_id=512"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/512/approve"}, "statuses": {"href": "data/repositories/osrf/sdformat/pullrequests/512/statuses_page=1.json"}}, "title": "Add PBR material spec", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}], "id": 512, "destination": {"commit": {"hash": "95728b887601", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/95728b887601.json"}, "html": {"href": "#!/osrf/sdformat/commits/95728b887601"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf8"}}, "created_on": "2019-03-14T21:15:35.786724+00:00", "summary": {"raw": "The material element is extended to support common Physically Based Rendering \\(PBR\\) parameters. The new `<pbr>` element is optional as the extension aims to be backward compatible with the existing SDF 1.6 spec.\r\n\r\nThere are two types of PBR workflows \\(see [element description](#!/osrf/sdformat/src/258ac02ff2709c510744b7908ca952ffdd3c4343/sdf/1.6/material.sdf#lines-49)\\), e.g. OGRE 2.1 and Unity supports both, while Unreal and Threejs use the Metallic/Roughness workflow. Typically, the user should stick to the same workflow for all materials in the entire scene.\r\n\r\nPros and Cons of the new spec:\r\n\r\n**Pros**: Stricter spec, makes validation easier. Less confusion as to what params are needed in each workflow.\r\n\r\n**Cons**: A few elements are duplicated. The users may not know which workflow to use or what the underlying renderer support. In this case, the user could just specify using the old way \\(without `<pbr`\\) or specify both and let the renderer choose. \r\n\r\nAppreciate any feedback on improving the spec", "markup": "markdown", "html": "<p>The material element is extended to support common Physically Based Rendering (PBR) parameters. The new <code>&lt;pbr&gt;</code> element is optional as the extension aims to be backward compatible with the existing SDF 1.6 spec.</p>\n<p>There are two types of PBR workflows (see <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/258ac02ff2709c510744b7908ca952ffdd3c4343/sdf/1.6/material.sdf#lines-49\" rel=\"nofollow\">element description</a>), e.g. OGRE 2.1 and Unity supports both, while Unreal and Threejs use the Metallic/Roughness workflow. Typically, the user should stick to the same workflow for all materials in the entire scene.</p>\n<p>Pros and Cons of the new spec:</p>\n<p><strong>Pros</strong>: Stricter spec, makes validation easier. Less confusion as to what params are needed in each workflow.</p>\n<p><strong>Cons</strong>: A few elements are duplicated. The users may not know which workflow to use or what the underlying renderer support. In this case, the user could just specify using the old way (without <code>&lt;pbr</code>) or specify both and let the renderer choose. </p>\n<p>Appreciate any feedback on improving the spec</p>", "type": "rendered"}, "source": {"commit": {"hash": "b3701b3336ce", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b3701b3336ce.json"}, "html": {"href": "#!/osrf/sdformat/commits/b3701b3336ce"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "material_pbr_8"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-04-04T17:08:57.962315+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2019-04-03T21:22:21.264000+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2019-04-04T20:28:47.785739+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "da708ad889b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/da708ad889b3.json"}, "html": {"href": "#!/osrf/sdformat/commits/da708ad889b3"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}