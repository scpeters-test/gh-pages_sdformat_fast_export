{"rendered": {"description": {"raw": "While reviewing pull request #468, I found some failing test cases:\r\n\r\n* [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-ubuntu_auto-amd64&build=166)](https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/) https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/testReport/(root)/DOMLink/LinkChain/\r\n\r\nCurrently pose data is stored as `Matrix4d` in the vertices of the frame graph, but coordinate transformations really occur along the edges of the frame graph. This pull request refactors a bit so that the edges store a `Matrix4d`. The vertices still store pose data, but also have the pose frame now too. With these changes, the `LinkChain` test is now passing.\r\n\r\nThere were a few expectations in the `FourBar` test that were wrong, so I fixed those too, and added some more expectations for good measure.\r\n\r\nThere is quite a bit of duplicated code for doing this pose math in Collision.cc, Joint.cc, Link.cc, Model.cc, and Visual.cc. We could consider creating a `Frame` class to hold this logic.\r\n\r\nAlso, the `SetPose` methods update the Vertex pose data but don't update the `Matrix4d`s in the edges. This is marked as a `TODO`.", "markup": "markdown", "html": "<p>While reviewing <a href=\"#!/osrf/sdformat/pull-requests/468/pose-dom\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #468</a>, I found some failing test cases:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-ubuntu_auto-amd64&amp;build=166\" /></a> <a href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/testReport/(root)/DOMLink/LinkChain/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/testReport/(root)/DOMLink/LinkChain/</a></li>\n</ul>\n<p>Currently pose data is stored as <code>Matrix4d</code> in the vertices of the frame graph, but coordinate transformations really occur along the edges of the frame graph. This pull request refactors a bit so that the edges store a <code>Matrix4d</code>. The vertices still store pose data, but also have the pose frame now too. With these changes, the <code>LinkChain</code> test is now passing.</p>\n<p>There were a few expectations in the <code>FourBar</code> test that were wrong, so I fixed those too, and added some more expectations for good measure.</p>\n<p>There is quite a bit of duplicated code for doing this pose math in Collision.cc, Joint.cc, Link.cc, Model.cc, and Visual.cc. We could consider creating a <code>Frame</code> class to hold this logic.</p>\n<p>Also, the <code>SetPose</code> methods update the Vertex pose data but don't update the <code>Matrix4d</code>s in the edges. This is marked as a <code>TODO</code>.</p>", "type": "rendered"}, "title": {"raw": "Refactor Pose dom: store Matrix4d in edges instead of vertices", "markup": "markdown", "html": "<p>Refactor Pose dom: store Matrix4d in edges instead of vertices</p>", "type": "rendered"}}, "type": "pullrequest", "description": "While reviewing pull request #468, I found some failing test cases:\r\n\r\n* [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-ubuntu_auto-amd64&build=166)](https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/) https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/testReport/(root)/DOMLink/LinkChain/\r\n\r\nCurrently pose data is stored as `Matrix4d` in the vertices of the frame graph, but coordinate transformations really occur along the edges of the frame graph. This pull request refactors a bit so that the edges store a `Matrix4d`. The vertices still store pose data, but also have the pose frame now too. With these changes, the `LinkChain` test is now passing.\r\n\r\nThere were a few expectations in the `FourBar` test that were wrong, so I fixed those too, and added some more expectations for good measure.\r\n\r\nThere is quite a bit of duplicated code for doing this pose math in Collision.cc, Joint.cc, Link.cc, Model.cc, and Visual.cc. We could consider creating a `Frame` class to hold this logic.\r\n\r\nAlso, the `SetPose` methods update the Vertex pose data but don't update the `Matrix4d`s in the edges. This is marked as a `TODO`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/505/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diffstat/osrf/sdformat:faa3a6cf5977%0Db1a509856e15?from_pullrequest_id=505"}, "commits": {"href": "data/repositories/osrf/sdformat/pullrequests/505/commits.json"}, "self": {"href": "data/repositories/osrf/sdformat/pullrequests/505.json"}, "comments": {"href": "data/repositories/osrf/sdformat/pullrequests/505/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/505/merge"}, "html": {"href": "#!/osrf/sdformat/pull-requests/505"}, "activity": {"href": "data/repositories/osrf/sdformat/pullrequests/505/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:faa3a6cf5977%0Db1a509856e15?from_pullrequest_id=505"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/pullrequests/505/approve"}, "statuses": {"href": "data/repositories/osrf/sdformat/pullrequests/505/statuses_page=1.json"}}, "title": "Refactor Pose dom: store Matrix4d in edges instead of vertices", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}], "id": 505, "destination": {"commit": {"hash": "b1a509856e15", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b1a509856e15.json"}, "html": {"href": "#!/osrf/sdformat/commits/b1a509856e15"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "pose_dom"}}, "created_on": "2019-02-15T08:25:24.743865+00:00", "summary": {"raw": "While reviewing pull request #468, I found some failing test cases:\r\n\r\n* [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-ubuntu_auto-amd64&build=166)](https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/) https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/testReport/(root)/DOMLink/LinkChain/\r\n\r\nCurrently pose data is stored as `Matrix4d` in the vertices of the frame graph, but coordinate transformations really occur along the edges of the frame graph. This pull request refactors a bit so that the edges store a `Matrix4d`. The vertices still store pose data, but also have the pose frame now too. With these changes, the `LinkChain` test is now passing.\r\n\r\nThere were a few expectations in the `FourBar` test that were wrong, so I fixed those too, and added some more expectations for good measure.\r\n\r\nThere is quite a bit of duplicated code for doing this pose math in Collision.cc, Joint.cc, Link.cc, Model.cc, and Visual.cc. We could consider creating a `Frame` class to hold this logic.\r\n\r\nAlso, the `SetPose` methods update the Vertex pose data but don't update the `Matrix4d`s in the edges. This is marked as a `TODO`.", "markup": "markdown", "html": "<p>While reviewing <a href=\"#!/osrf/sdformat/pull-requests/468/pose-dom\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #468</a>, I found some failing test cases:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=sdformat-ci-pr_any-ubuntu_auto-amd64&amp;build=166\" /></a> <a href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/testReport/(root)/DOMLink/LinkChain/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/sdformat-ci-pr_any-ubuntu_auto-amd64/166/testReport/(root)/DOMLink/LinkChain/</a></li>\n</ul>\n<p>Currently pose data is stored as <code>Matrix4d</code> in the vertices of the frame graph, but coordinate transformations really occur along the edges of the frame graph. This pull request refactors a bit so that the edges store a <code>Matrix4d</code>. The vertices still store pose data, but also have the pose frame now too. With these changes, the <code>LinkChain</code> test is now passing.</p>\n<p>There were a few expectations in the <code>FourBar</code> test that were wrong, so I fixed those too, and added some more expectations for good measure.</p>\n<p>There is quite a bit of duplicated code for doing this pose math in Collision.cc, Joint.cc, Link.cc, Model.cc, and Visual.cc. We could consider creating a <code>Frame</code> class to hold this logic.</p>\n<p>Also, the <code>SetPose</code> methods update the Vertex pose data but don't update the <code>Matrix4d</code>s in the edges. This is marked as a <code>TODO</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "14442c15a3c0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/14442c15a3c0.json"}, "html": {"href": "#!/osrf/sdformat/commits/14442c15a3c0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "pose_dom_refactor"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-02-15T20:32:19.436526+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2019-02-15T21:31:07.375577+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "faa3a6cf5977", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/faa3a6cf5977.json"}, "html": {"href": "#!/osrf/sdformat/commits/faa3a6cf5977"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}