{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64997885.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:e6da98ed56f3..f0602c238468?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64997885"}}, "parent": {"id": 64995848, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64995848.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64995848"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "Right, I know. What I am saying is that while you guys work on it, the non-supported features should not leak to the API. The API should get stabilized now. If someone then decides in an SDF to use a `<frame>` tag to provide a different frame, then sdformat should just throw an error message saying that feature is still not supported \\(the SDF specification still allows using the `<frame>` tag for those users writing their own parser from the ground up, it is just that sdformat still doesn\u2019t support it\\).   \nRegarding the API, then you can commit right now, without any extra code, to say that \\`Pose\\(\\)\\` always returns the pose of the joint in the child \\(or model, whichever you prefer\\) frame.  \nOtherwise whenever your optimal solution arrives you\u2019ll have to come back to this code and fix both \\`Pose\\(\\)\\` and its documentation \\(which I\u2019m sure we\u2019ll forget about by when the feature lands\\). Does this make any sense?", "markup": "markdown", "html": "<p>Right, I know. What I am saying is that while you guys work on it, the non-supported features should not leak to the API. The API should get stabilized now. If someone then decides in an SDF to use a <code>&lt;frame&gt;</code> tag to provide a different frame, then sdformat should just throw an error message saying that feature is still not supported (the SDF specification still allows using the <code>&lt;frame&gt;</code> tag for those users writing their own parser from the ground up, it is just that sdformat still doesn\u2019t support it). <br />\nRegarding the API, then you can commit right now, without any extra code, to say that `Pose()` always returns the pose of the joint in the child (or model, whichever you prefer) frame.<br />\nOtherwise whenever your optimal solution arrives you\u2019ll have to come back to this code and fix both `Pose()` and its documentation (which I\u2019m sure we\u2019ll forget about by when the feature lands). Does this make any sense?</p>", "type": "rendered"}, "created_on": "2018-05-23T00:04:11.841624+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-23T00:04:11.933206+00:00", "type": "pullrequest_comment", "id": 64997885}