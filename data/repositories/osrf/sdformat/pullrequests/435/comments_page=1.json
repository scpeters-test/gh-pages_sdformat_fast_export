{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64993228.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:e6da98ed56f3..f0602c238468?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64993228"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "I don\u2019t think this is what we want Nate. Ideally sdformat will always abide to a given contract. With this, you are essentially passing the burden of figuring out frames to the user of sdformat while sdformat should be enforcing them. That is, what do I gain in using sdformat vs using just, say, tinyxml? I believe the gain should be that sdformat already did a lot of the cleanup for me, and in particular to what frames refer.   \nI would suggest \\`Pose\\(\\)\\` always returns the pose of the joint in a same frame, either model, child or any convention that remains fixed no matter how things are specified by a user in the source SDF file.", "markup": "markdown", "html": "<p>I don\u2019t think this is what we want Nate. Ideally sdformat will always abide to a given contract. With this, you are essentially passing the burden of figuring out frames to the user of sdformat while sdformat should be enforcing them. That is, what do I gain in using sdformat vs using just, say, tinyxml? I believe the gain should be that sdformat already did a lot of the cleanup for me, and in particular to what frames refer. <br />\nI would suggest `Pose()` always returns the pose of the joint in a same frame, either model, child or any convention that remains fixed no matter how things are specified by a user in the source SDF file.</p>", "type": "rendered"}, "created_on": "2018-05-22T22:24:08.728572+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": null, "from": 141, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-22T22:24:08.793103+00:00", "type": "pullrequest_comment", "id": 64993228}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64995848.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:e6da98ed56f3..f0602c238468?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64995848"}}, "parent": {"id": 64993228, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64993228.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64993228"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "I agree that it\u2019s not optimal. We are working on a more elegant mechanism that will allow a user the specify the frame in which to get the pose. This functionality will take a bit longer to wrap up.\n\nIn the mean-time, this is the least intrusive work around. Are you okay with this hack for now? Drake can safely operate on the assumption that `Joint::Pose` will use the child link frame, and the default behavior of the newer mechanism won\u2019t change that assumption.", "markup": "markdown", "html": "<p>I agree that it\u2019s not optimal. We are working on a more elegant mechanism that will allow a user the specify the frame in which to get the pose. This functionality will take a bit longer to wrap up.</p>\n<p>In the mean-time, this is the least intrusive work around. Are you okay with this hack for now? Drake can safely operate on the assumption that <code>Joint::Pose</code> will use the child link frame, and the default behavior of the newer mechanism won\u2019t change that assumption.</p>", "type": "rendered"}, "created_on": "2018-05-22T23:16:34.114383+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-22T23:16:34.124661+00:00", "type": "pullrequest_comment", "id": 64995848}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64997885.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:e6da98ed56f3..f0602c238468?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64997885"}}, "parent": {"id": 64995848, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64995848.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64995848"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "Right, I know. What I am saying is that while you guys work on it, the non-supported features should not leak to the API. The API should get stabilized now. If someone then decides in an SDF to use a `<frame>` tag to provide a different frame, then sdformat should just throw an error message saying that feature is still not supported \\(the SDF specification still allows using the `<frame>` tag for those users writing their own parser from the ground up, it is just that sdformat still doesn\u2019t support it\\).   \nRegarding the API, then you can commit right now, without any extra code, to say that \\`Pose\\(\\)\\` always returns the pose of the joint in the child \\(or model, whichever you prefer\\) frame.  \nOtherwise whenever your optimal solution arrives you\u2019ll have to come back to this code and fix both \\`Pose\\(\\)\\` and its documentation \\(which I\u2019m sure we\u2019ll forget about by when the feature lands\\). Does this make any sense?", "markup": "markdown", "html": "<p>Right, I know. What I am saying is that while you guys work on it, the non-supported features should not leak to the API. The API should get stabilized now. If someone then decides in an SDF to use a <code>&lt;frame&gt;</code> tag to provide a different frame, then sdformat should just throw an error message saying that feature is still not supported (the SDF specification still allows using the <code>&lt;frame&gt;</code> tag for those users writing their own parser from the ground up, it is just that sdformat still doesn\u2019t support it). <br />\nRegarding the API, then you can commit right now, without any extra code, to say that `Pose()` always returns the pose of the joint in the child (or model, whichever you prefer) frame.<br />\nOtherwise whenever your optimal solution arrives you\u2019ll have to come back to this code and fix both `Pose()` and its documentation (which I\u2019m sure we\u2019ll forget about by when the feature lands). Does this make any sense?</p>", "type": "rendered"}, "created_on": "2018-05-23T00:04:11.841624+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": null, "from": null, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-23T00:04:11.933206+00:00", "type": "pullrequest_comment", "id": 64997885}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65234801.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:8523119cff57..7ddc056198ee?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65234801"}}, "parent": {"id": 64997885, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64997885.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64997885"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "Right now the `Joint::Pose()` function returns the value in\n\n    \n    <joint>\n       <pose>x y z R P Y</pose>\n    </joint>\n\nThe `Joint::PoseFrame` function returns the frame name, for example \u201cparent\u201d in the following:\n\n    \n    <joint>\n        <pose frame=\"parent\">x y z R P Y</pose>\n    </joint>\n\nThere is value to `Joint::Pose` returning the raw pose value, independent of the frame name.\n\nI\u2019m going to update this documentation to read:\n\nThis is the raw pose value, as set in the SDF file. No transformation has been applied.", "markup": "markdown", "html": "<p>Right now the <code>Joint::Pose()</code> function returns the value in</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;joint&gt;</span>\n   <span class=\"nt\">&lt;pose&gt;</span>x y z R P Y<span class=\"nt\">&lt;/pose&gt;</span>\n<span class=\"nt\">&lt;/joint&gt;</span>\n</pre></div>\n\n\n<p>The <code>Joint::PoseFrame</code> function returns the frame name, for example \u201cparent\u201d in the following:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;joint&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>x y z R P Y<span class=\"nt\">&lt;/pose&gt;</span>\n<span class=\"nt\">&lt;/joint&gt;</span>\n</pre></div>\n\n\n<p>There is value to <code>Joint::Pose</code> returning the raw pose value, independent of the frame name.</p>\n<p>I\u2019m going to update this documentation to read:</p>\n<p>This is the raw pose value, as set in the SDF file. No transformation has been applied.</p>", "type": "rendered"}, "created_on": "2018-05-24T16:20:18.939978+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-24T16:20:18.948946+00:00", "type": "pullrequest_comment", "id": 65234801}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65396013.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:8523119cff57..7ddc056198ee?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65396013"}}, "parent": {"id": 65234801, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65234801.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65234801"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "ok, I see. Since SDF allows for multiple ways to specify this frame pose, maybe the documentation should say \u201cThis is the pose value, as specified in the SDF file with <joint><pose/><joint>\u201d.  \nAs far as I understand, SDF allows you to say something like:\n\n```xml\n<joint>\n  <pose frame=\"frame13_on_link87\">1 2 3 4 5 6</pose>\n  <frame name=\"link326\">\n    <pose>1 0.5 3 1.57 0 2.1<pose>\n    <frame>\"frame24_on_link_127\"</frame>\n  </frame>\n</joint>\n```\n\nwhich really, it is not clear to me what or how it defines the joint frame and/or pose. What you are saying is that `Joint::Pose()` always returns the value in `<joint><pose/><joint>` regardless of all other options to specify the frame? it\u2019d be nice if the documentation for this method would clarify on this.\n\n\u200c\n\n\u200c", "markup": "markdown", "html": "<p>ok, I see. Since SDF allows for multiple ways to specify this frame pose, maybe the documentation should say \u201cThis is the pose value, as specified in the SDF file with &lt;joint&gt;&lt;pose/&gt;&lt;joint&gt;\u201d.<br />\nAs far as I understand, SDF allows you to say something like:</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;joint&gt;</span>\n  <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;frame13_on_link87&quot;</span><span class=\"nt\">&gt;</span>1 2 3 4 5 6<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link326&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>1 0.5 3 1.57 0 2.1<span class=\"nt\">&lt;pose&gt;</span>\n    <span class=\"nt\">&lt;frame&gt;</span>&quot;frame24_on_link_127&quot;<span class=\"nt\">&lt;/frame&gt;</span>\n  <span class=\"nt\">&lt;/frame&gt;</span>\n<span class=\"nt\">&lt;/joint&gt;</span>\n</pre></div>\n\n\n<p>which really, it is not clear to me what or how it defines the joint frame and/or pose. What you are saying is that <code>Joint::Pose()</code> always returns the value in <code>&lt;joint&gt;&lt;pose/&gt;&lt;joint&gt;</code> regardless of all other options to specify the frame? it\u2019d be nice if the documentation for this method would clarify on this.</p>\n<p>\u200c</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2018-05-27T14:52:39.590400+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": null, "from": null, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-27T14:52:39.665813+00:00", "type": "pullrequest_comment", "id": 65396013}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65396082.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:8523119cff57..7ddc056198ee?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65396082"}}, "parent": {"id": 65396013, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65396013.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65396013"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "Also, per your documentation update in \u201cjoint.sdf\u201d, when the user does not specify a frame name in `<pose>`, the method by default returns the name of the child link? should the documentation for \\``Joint::PoseFrame`\\` say that? or does it just return an empty string? is that allowed?", "markup": "markdown", "html": "<p>Also, per your documentation update in \u201cjoint.sdf\u201d, when the user does not specify a frame name in <code>&lt;pose&gt;</code>, the method by default returns the name of the child link? should the documentation for `<code>Joint::PoseFrame</code>` say that? or does it just return an empty string? is that allowed?</p>", "type": "rendered"}, "created_on": "2018-05-27T14:59:10.641453+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": null, "from": null, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-27T14:59:10.707343+00:00", "type": "pullrequest_comment", "id": 65396082}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/70603005.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:234ac552393c..e2948ee05f9f?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-70603005"}}, "parent": {"id": 65396082, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65396082.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65396082"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "The documentation now says \u201c A empty value indicates that the frame is the child link frame\u201d.", "markup": "markdown", "html": "<p>The documentation now says \u201c A empty value indicates that the frame is the child link frame\u201d.</p>", "type": "rendered"}, "created_on": "2018-07-20T15:18:09.204485+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-07-20T15:18:09.213733+00:00", "type": "pullrequest_comment", "id": 70603005}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64993263.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:e6da98ed56f3..f0602c238468?path=sdf%2F1.6%2Fjoint.sdf"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64993263"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "BTW typo, connections", "markup": "markdown", "html": "<p>BTW typo, connections</p>", "type": "rendered"}, "created_on": "2018-05-22T22:24:46.135594+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": 3, "from": null, "path": "sdf/1.6/joint.sdf"}, "updated_on": "2018-05-22T22:24:46.167784+00:00", "type": "pullrequest_comment", "id": 64993263}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64993431.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:e6da98ed56f3..f0602c238468?path=sdf%2F1.6%2Fjoint.sdf"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64993431"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "I think that ideally we\u2019d like to see the frame conventions for <joint> right next to it. I mean, I would like them to get cited \\[here\\]\\([http://sdformat.org/spec?ver=1.6&elem=joint#joint\\_pose](http://sdformat.org/spec?ver=1.6&elem=joint#joint_pose)\\)", "markup": "markdown", "html": "<p>I think that ideally we\u2019d like to see the frame conventions for &lt;joint&gt; right next to it. I mean, I would like them to get cited [here](<a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=joint#joint_pose\" rel=\"nofollow\">http://sdformat.org/spec?ver=1.6&amp;elem=joint#joint_pose</a>)</p>", "type": "rendered"}, "created_on": "2018-05-22T22:27:44.756052+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": null, "from": 241, "path": "sdf/1.6/joint.sdf"}, "updated_on": "2018-05-22T22:27:44.822643+00:00", "type": "pullrequest_comment", "id": 64993431}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65237406.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:8523119cff57..7ddc056198ee?path=sdf%2F1.6%2Fjoint.sdf"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65237406"}}, "parent": {"id": 64993431, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/64993431.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-64993431"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "There is a limitation in our documentation system. Right now I can add a description to an `<include \u2026`. \n\nHere is an issue for this : [#!/osrf/sdformat/issues/190](#!/osrf/sdformat/issues/190)", "markup": "markdown", "html": "<p>There is a limitation in our documentation system. Right now I can add a description to an <code>&lt;include \u2026</code>. </p>\n<p>Here is an issue for this : <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/issues/190\" rel=\"nofollow\">#!/osrf/sdformat/issues/190</a></p>", "type": "rendered"}, "created_on": "2018-05-24T16:44:16.102616+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "sdf/1.6/joint.sdf"}, "updated_on": "2018-05-24T16:44:16.114068+00:00", "type": "pullrequest_comment", "id": 65237406}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65249791.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:8523119cff57..7ddc056198ee?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65249791"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "Maybe I don\u2019t understand the future plane with `<frame>`'s. I would\u2019ve thought that this API would say something like: \u201cReturns the pose X\\_MJ of this joint J in the model frame M\u201d.  \nThe fact that now it says \u201cThis is the raw pose value, as set in the SDF file.\u201d leaves users of the SDF specification free to choose what this pose is, defeating the purpose of a \u201cspecification\u201d as \u201cspecifying\u201d a convention for everyone to follow.   \nAs a user for this API, this would mean that \u201cI\u201d have to keep track of frames and their poses relative to other frames. Why would I then use sdformat for? I could get that with an xml parser.  \nAm I missing something here? I know that `<frame>`'s are a feature not supported yet but, shouldn\u2019t the API reflect the future long term plan? \\(and hopefully not that long term?\\)\n\n\u200c", "markup": "markdown", "html": "<p>Maybe I don\u2019t understand the future plane with <code>&lt;frame&gt;</code>'s. I would\u2019ve thought that this API would say something like: \u201cReturns the pose X_MJ of this joint J in the model frame M\u201d.<br />\nThe fact that now it says \u201cThis is the raw pose value, as set in the SDF file.\u201d leaves users of the SDF specification free to choose what this pose is, defeating the purpose of a \u201cspecification\u201d as \u201cspecifying\u201d a convention for everyone to follow. <br />\nAs a user for this API, this would mean that \u201cI\u201d have to keep track of frames and their poses relative to other frames. Why would I then use sdformat for? I could get that with an xml parser.<br />\nAm I missing something here? I know that <code>&lt;frame&gt;</code>'s are a feature not supported yet but, shouldn\u2019t the API reflect the future long term plan? (and hopefully not that long term?)</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2018-05-24T18:53:52.918159+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": null, "from": 141, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-05-24T18:53:52.999675+00:00", "type": "pullrequest_comment", "id": 65249791}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/70602643.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:234ac552393c..e2948ee05f9f?path=include%2Fsdf%2FJoint.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-70602643"}}, "parent": {"id": 65249791, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/65249791.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-65249791"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "The purpose of this function is to support access to the raw data; a pose that is not transformed. The use case of this function is mostly debugging, and for people who may want to bypass the specification. This pull request does not contain the Pose\\(\\) function that you\u2019re looking for. That eventual function will either require additional data, like the frame you want the pose expressed in \\(probably with a suggested default value\\) or there will be multiple Pose functions with names that indicate their purpose.", "markup": "markdown", "html": "<p>The purpose of this function is to support access to the raw data; a pose that is not transformed. The use case of this function is mostly debugging, and for people who may want to bypass the specification. This pull request does not contain the Pose() function that you\u2019re looking for. That eventual function will either require additional data, like the frame you want the pose expressed in (probably with a suggested default value) or there will be multiple Pose functions with names that indicate their purpose.</p>", "type": "rendered"}, "created_on": "2018-07-20T15:15:35.133588+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/sdf/Joint.hh"}, "updated_on": "2018-07-20T15:15:35.143325+00:00", "type": "pullrequest_comment", "id": 70602643}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435/comments/70603164.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435/_/diff#comment-70603164"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/435.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/435"}}, "title": "Update joint pose documentation"}, "content": {"raw": "@amcastro0622, I\u2019m going to merge this and start to work on the frame issues that you have brought up. Hopefully that will clear things up.", "markup": "markdown", "html": "<p>@amcastro0622, I\u2019m going to merge this and start to work on the frame issues that you have brought up. Hopefully that will clear things up.</p>", "type": "rendered"}, "created_on": "2018-07-20T15:19:19.011763+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-07-20T15:19:19.105401+00:00", "type": "pullrequest_comment", "id": 70603164}], "page": 1, "size": 13}