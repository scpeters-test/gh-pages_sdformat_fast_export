{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/335/comments/35231325.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/335/_/diff#comment-35231325"}}, "parent": {"id": 35229188, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/335/comments/35229188.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/335/_/diff#comment-35229188"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 335, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/335.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/335"}}, "title": "Remove boost 11"}, "content": {"raw": "Good point.  A quick comparison:\n\n* current_path() - Same, except that std:: version returns a \"path\" object instead of a std::string\n* create_directory() - Same, except that std:: version takes a \"path\" object instead of a std::string\n* exists() - Same, except that std:: version takes a \"path\" object instead of a std::string\n* is_directory() - Same, except that std:: version takes a \"path\" object instead of a std::string\n* append() - Not in std::filesystem.  That's mostly because I created that out of whole cloth, since I don't really like the use of the overloaded operator / for this (which is what both boost and std::filesystem do).\n\nWith the minor exception of append, it seems like it will be pretty trivial to convert from this code to C++17 std::filesystem, when the time comes.  However, since we have to support older compilers for a while, I'm going to assume this code will live for a few years.", "markup": "markdown", "html": "<p>Good point.  A quick comparison:</p>\n<ul>\n<li>current_path() - Same, except that std:: version returns a \"path\" object instead of a std::string</li>\n<li>create_directory() - Same, except that std:: version takes a \"path\" object instead of a std::string</li>\n<li>exists() - Same, except that std:: version takes a \"path\" object instead of a std::string</li>\n<li>is_directory() - Same, except that std:: version takes a \"path\" object instead of a std::string</li>\n<li>append() - Not in std::filesystem.  That's mostly because I created that out of whole cloth, since I don't really like the use of the overloaded operator / for this (which is what both boost and std::filesystem do).</li>\n</ul>\n<p>With the minor exception of append, it seems like it will be pretty trivial to convert from this code to C++17 std::filesystem, when the time comes.  However, since we have to support older compilers for a while, I'm going to assume this code will live for a few years.</p>", "type": "rendered"}, "created_on": "2017-04-18T19:20:58.444181+00:00", "user": {"display_name": "clalancette", "uuid": "{02b311e1-297d-4232-89c4-5485d0a02911}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D"}, "html": {"href": "https://bitbucket.org/%7B02b311e1-297d-4232-89c4-5485d0a02911%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f/048a0933-60ac-4910-a6a5-ed058bdea8eb/128"}}, "nickname": "clalancette", "type": "user", "account_id": "557058:ad6ed80b-ec66-45cb-9504-b1094a415b7f"}, "updated_on": "2017-04-18T19:20:58.447859+00:00", "type": "pullrequest_comment", "id": 35231325}