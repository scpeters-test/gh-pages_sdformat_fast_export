{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/225/comments/10104494.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/225/_/diff#comment-10104494"}}, "parent": {"id": 10104374, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/225/comments/10104374.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/225/_/diff#comment-10104374"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 225, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/225.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/225"}}, "title": "Collision_blobs"}, "content": {"raw": "previously, if you have extensions that you want to pass into `<collision>` from urdf extensions, you'll have to do something like this:\n\n~~~\n<gazebo reference=\"link\">\n  <mu>1.5</mu>\n</gazebo>\n~~~\nand the parser (`parser_urdf.cc`) will have to special case `mu` for link, and pass it through into collision element.  The new approach is similar to what visual extension supports right now, i.e.\n~~~\n<gazebo reference=\"link\">\n  <collision>\n    <friction>\n      <ode>\n        <mu>1.5</mu>\n      </ode>\n    </friction>\n  </collision>\n</gazebo>\n~~~\nAnd the entire `<collision>` block in the extension is copied into the resulting sdf collision block verbatim.\n\nThis allows us to add anything in the urdf extension without having to special case every property (e.g. `mu`, `mu2`, etc.), update parser and re-release sdformat when a new collision extension is needed.\n", "markup": "markdown", "html": "<p>previously, if you have extensions that you want to pass into <code>&lt;collision&gt;</code> from urdf extensions, you'll have to do something like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;link&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;mu&gt;</span>1.5<span class=\"nt\">&lt;/mu&gt;</span>\n<span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>and the parser (<code>parser_urdf.cc</code>) will have to special case <code>mu</code> for link, and pass it through into collision element.  The new approach is similar to what visual extension supports right now, i.e.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;gazebo</span> <span class=\"na\">reference=</span><span class=\"s\">&quot;link&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;collision&gt;</span>\n    <span class=\"nt\">&lt;friction&gt;</span>\n      <span class=\"nt\">&lt;ode&gt;</span>\n        <span class=\"nt\">&lt;mu&gt;</span>1.5<span class=\"nt\">&lt;/mu&gt;</span>\n      <span class=\"nt\">&lt;/ode&gt;</span>\n    <span class=\"nt\">&lt;/friction&gt;</span>\n  <span class=\"nt\">&lt;/collision&gt;</span>\n<span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>And the entire <code>&lt;collision&gt;</code> block in the extension is copied into the resulting sdf collision block verbatim.</p>\n<p>This allows us to add anything in the urdf extension without having to special case every property (e.g. <code>mu</code>, <code>mu2</code>, etc.), update parser and re-release sdformat when a new collision extension is needed.</p>", "type": "rendered"}, "created_on": "2015-09-21T23:07:09.082243+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-09-21T23:09:34.602458+00:00", "type": "pullrequest_comment", "id": 10104494}