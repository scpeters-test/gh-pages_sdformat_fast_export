{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534/comments/100607561.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:cdc77e14d37a..29bf62ae2e36?path=src%2FSensor.cc"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534/_/diff#comment-100607561"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 534, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534"}}, "title": "[Blueprint] Copy update rate"}, "content": {"raw": "I'm not sure we want to do this; copy the shared pointer to the sdf element which was originally used to load the sensor. Consider loading a Sensor from an SDF file, and then copying that Sensor. The question is, do we want to keep the pointer back to the sdf::Element? I had not been doing this because the new sensor was not technically parsed from an SDF file. Thoughts?", "markup": "markdown", "html": "<p>I'm not sure we want to do this; copy the shared pointer to the sdf element which was originally used to load the sensor. Consider loading a Sensor from an SDF file, and then copying that Sensor. The question is, do we want to keep the pointer back to the sdf::Element? I had not been doing this because the new sensor was not technically parsed from an SDF file. Thoughts?</p>", "type": "rendered"}, "created_on": "2019-05-01T18:04:06.228901+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 67, "from": null, "path": "src/Sensor.cc"}, "updated_on": "2019-05-01T18:06:32.683656+00:00", "type": "pullrequest_comment", "id": 100607561}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534/comments/100608399.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:cdc77e14d37a..29bf62ae2e36?path=src%2FSensor.cc"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534/_/diff#comment-100608399"}}, "parent": {"id": 100607561, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534/comments/100607561.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534/_/diff#comment-100607561"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 534, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534"}}, "title": "[Blueprint] Copy update rate"}, "content": {"raw": "Yeah I agree it may not be the intention. But it wouldn't be the first class to do it:\n\n~~~\n$ grep -r \"sdf(.*\\.sdf)\" src/\nsrc/Sensor.cc:            sdf(_sensor.sdf),\nsrc/Joint.cc:      sdf(_jointPrivate.sdf)\nsrc/Visual.cc:      sdf(_visualPrivate.sdf)\nsrc/World.cc:      sdf(_worldPrivate.sdf),\n~~~\n\nI think it would also be strange if calling `sensor->Element()` after copying returned null though.\n\nI think we may want to copy the underlying data instead of the shared pointer.", "markup": "markdown", "html": "<p>Yeah I agree it may not be the intention. But it wouldn't be the first class to do it:</p>\n<div class=\"codehilite\"><pre><span></span>$ grep -r <span class=\"s2\">&quot;sdf(.*\\.sdf)&quot;</span> src/\nsrc/Sensor.cc:            sdf<span class=\"o\">(</span>_sensor.sdf<span class=\"o\">)</span>,\nsrc/Joint.cc:      sdf<span class=\"o\">(</span>_jointPrivate.sdf<span class=\"o\">)</span>\nsrc/Visual.cc:      sdf<span class=\"o\">(</span>_visualPrivate.sdf<span class=\"o\">)</span>\nsrc/World.cc:      sdf<span class=\"o\">(</span>_worldPrivate.sdf<span class=\"o\">)</span>,\n</pre></div>\n\n\n<p>I think it would also be strange if calling <code>sensor-&gt;Element()</code> after copying returned null though.</p>\n<p>I think we may want to copy the underlying data instead of the shared pointer.</p>", "type": "rendered"}, "created_on": "2019-05-01T18:13:02.154684+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 67, "from": null, "path": "src/Sensor.cc"}, "updated_on": "2019-05-01T18:13:30.807083+00:00", "type": "pullrequest_comment", "id": 100608399}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534/comments/100608835.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:cdc77e14d37a..29bf62ae2e36?path=src%2FSensor.cc"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534/_/diff#comment-100608835"}}, "parent": {"id": 100608399, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534/comments/100608399.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534/_/diff#comment-100608399"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 534, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/534.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/534"}}, "title": "[Blueprint] Copy update rate"}, "content": {"raw": "Ahaha. Awesome. So I was extremely inconsistent. Approving.", "markup": "markdown", "html": "<p>Ahaha. Awesome. So I was extremely inconsistent. Approving.</p>", "type": "rendered"}, "created_on": "2019-05-01T18:18:11.219711+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 67, "from": null, "path": "src/Sensor.cc"}, "updated_on": "2019-05-01T18:18:11.231519+00:00", "type": "pullrequest_comment", "id": 100608835}], "page": 1, "size": 3}