{"pagelen": 50, "values": [{"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "bfb7b3ef2a0a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/bfb7b3ef2a0a.json"}, "html": {"href": "#!/osrf/sdformat/commits/bfb7b3ef2a0a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "MERGED", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2013-11-23T18:41:14.381337+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"approval": {"date": "2013-11-22T22:15:01.794329+00:00", "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/857022.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-857022"}}, "parent": {"id": 856830, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856830.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856830"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "I can not find more relevant duplicates with the ones in urdf ROS. I would go with the current state, which should fix most of the problems out there.", "markup": "markdown", "html": "<p>I can not find more relevant duplicates with the ones in urdf ROS. I would go with the current state, which should fix most of the problems out there.</p>", "type": "rendered"}, "created_on": "2013-11-22T22:00:48.433945+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-22T22:00:48.441024+00:00", "type": "pullrequest_comment", "id": 857022}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856830.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856830"}}, "parent": {"id": 856788, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856788.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856788"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Now I just see this:\n~~~\n$ objdump -T libsdformat.so | grep urdf | c++filt\n0000000000077a90  w   DF .text\t00000000000000a5  Base        boost::shared_ptr<urdf::Collision>* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*>(boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*)\n0000000000076640  w   DF .text\t0000000000000049  Base        void std::_Destroy_aux<false>::__destroy<boost::shared_ptr<urdf::Collision>*>(boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*)\n0000000000077de0  w   DF .text\t00000000000000a5  Base        boost::shared_ptr<urdf::Visual>* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*>(boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*)\n0000000000074a60  w   DF .text\t00000000000000a7  Base        sdf::Console::ConsoleStream& sdf::Console::ConsoleStream::operator<< <urdf::Joint::{unnamed type#1}>(urdf::Joint::{unnamed type#1} const&)\n00000000000747a0  w   DF .text\t00000000000000a7  Base        sdf::Console::ConsoleStream& sdf::Console::ConsoleStream::operator<< <urdf::Geometry::{unnamed type#1}>(urdf::Geometry::{unnamed type#1} const&)\n0000000000076a40  w   DF .text\t0000000000000049  Base        void std::_Destroy_aux<false>::__destroy<boost::shared_ptr<urdf::Visual>*>(boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*)\n~~~\nNot sure if these are a problem.\n\nEDIT: maybe the ConsoleStream ones are from [parser_urdf.cc:1731](#!/osrf/sdformat/src/6a3e4fb70f367d43efd83910417bd00819133120/src/parser_urdf.cc?at=default#cl-1731) and [parser_urdf.cc:2413](#!/osrf/sdformat/src/6a3e4fb70f367d43efd83910417bd00819133120/src/parser_urdf.cc?at=default#cl-2413)", "markup": "markdown", "html": "<p>Now I just see this:</p>\n<div class=\"codehilite\"><pre><span></span>$ objdump -T libsdformat.so <span class=\"p\">|</span> grep urdf <span class=\"p\">|</span> c++filt\n0000000000077a90  w   DF .text  00000000000000a5  Base        boost::shared_ptr&lt;urdf::Collision&gt;* std::__copy_move_backward&lt;false, false, std::random_access_iterator_tag&gt;::__copy_move_b&lt;boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*<span class=\"o\">)</span>\n<span class=\"m\">0000000000076640</span>  w   DF .text  <span class=\"m\">0000000000000049</span>  Base        void std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;urdf::Collision&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*<span class=\"o\">)</span>\n0000000000077de0  w   DF .text  00000000000000a5  Base        boost::shared_ptr&lt;urdf::Visual&gt;* std::__copy_move_backward&lt;false, false, std::random_access_iterator_tag&gt;::__copy_move_b&lt;boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*<span class=\"o\">)</span>\n0000000000074a60  w   DF .text  00000000000000a7  Base        sdf::Console::ConsoleStream<span class=\"p\">&amp;</span> sdf::Console::ConsoleStream::operator&lt;&lt; &lt;urdf::Joint::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span>&gt;<span class=\"o\">(</span>urdf::Joint::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span> const<span class=\"p\">&amp;</span><span class=\"o\">)</span>\n00000000000747a0  w   DF .text  00000000000000a7  Base        sdf::Console::ConsoleStream<span class=\"p\">&amp;</span> sdf::Console::ConsoleStream::operator&lt;&lt; &lt;urdf::Geometry::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span>&gt;<span class=\"o\">(</span>urdf::Geometry::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span> const<span class=\"p\">&amp;</span><span class=\"o\">)</span>\n0000000000076a40  w   DF .text  <span class=\"m\">0000000000000049</span>  Base        void std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;urdf::Visual&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>Not sure if these are a problem.</p>\n<p>EDIT: maybe the ConsoleStream ones are from <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/6a3e4fb70f367d43efd83910417bd00819133120/src/parser_urdf.cc?at=default#cl-1731\" rel=\"nofollow\">parser_urdf.cc:1731</a> and <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/6a3e4fb70f367d43efd83910417bd00819133120/src/parser_urdf.cc?at=default#cl-2413\" rel=\"nofollow\">parser_urdf.cc:2413</a></p>", "type": "rendered"}, "created_on": "2013-11-22T21:04:05.453521+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-11-22T21:07:46.389622+00:00", "type": "pullrequest_comment", "id": 856830}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "bfb7b3ef2a0a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/bfb7b3ef2a0a.json"}, "html": {"href": "#!/osrf/sdformat/commits/bfb7b3ef2a0a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2013-11-22T20:52:05.449946+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856788.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856788"}}, "parent": {"id": 856589, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856589.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856589"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Should be fixed in 6d1e169. [ABI report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-ROS_to_any-devel-saucy-amd64/9/) is still sane.", "markup": "markdown", "html": "<p>Should be fixed in <a href=\"#!/osrf/sdformat/commits/6d1e169\" rel=\"nofollow\" class=\"ap-connect-link\">6d1e169</a>. <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-ROS_to_any-devel-saucy-amd64/9/\" rel=\"nofollow\">ABI report</a> is still sane.</p>", "type": "rendered"}, "created_on": "2013-11-22T20:51:33.026995+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-22T20:51:33.035585+00:00", "type": "pullrequest_comment", "id": 856788}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "6d1e16938647", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/6d1e16938647.json"}, "html": {"href": "#!/osrf/sdformat/commits/6d1e16938647"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2013-11-22T20:49:51.520749+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856589.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856589"}}, "parent": {"id": 856512, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856512.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856512"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "I believe those symbols originate [here](#!/osrf/sdformat/src/6a3e4fb70f367d43efd83910417bd00819133120/src/urdf/urdf_parser/urdf_parser.h?at=default)", "markup": "markdown", "html": "<p>I believe those symbols originate <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/6a3e4fb70f367d43efd83910417bd00819133120/src/urdf/urdf_parser/urdf_parser.h?at=default\" rel=\"nofollow\">here</a></p>", "type": "rendered"}, "created_on": "2013-11-22T19:56:51.740490+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2013-11-22T19:56:51.751117+00:00", "type": "pullrequest_comment", "id": 856589}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856558.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856558"}}, "parent": {"id": 852631, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/852631.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-852631"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Agree. Proper fix is implemented in pull request #76. However, we would need this to fix current ROS problem where we can introduce a package which breaks the ABI.", "markup": "markdown", "html": "<p>Agree. Proper fix is implemented in <a href=\"#!/osrf/sdformat/pull-requests/76/initial-work-on-support-visibility-hidden\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #76</a>. However, we would need this to fix current ROS problem where we can introduce a package which breaks the ABI.</p>", "type": "rendered"}, "created_on": "2013-11-22T19:49:33.742256+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-22T19:49:33.754645+00:00", "type": "pullrequest_comment", "id": 856558}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/856512.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-856512"}}, "parent": {"id": 851245, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/851245.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-851245"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "~~~\n$ objdump -T libsdformat.so | grep urdf | c++filt\n0000000000077b70  w   DF .text\t00000000000000a5  Base        boost::shared_ptr<urdf::Collision>* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*>(boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*)\n00000000000a3c10 g    DF .text\t00000000000004f2  Base        urdf_export_helpers::values2str(unsigned int, double const*, double (*)(double))\n0000000000076720  w   DF .text\t0000000000000049  Base        void std::_Destroy_aux<false>::__destroy<boost::shared_ptr<urdf::Collision>*>(boost::shared_ptr<urdf::Collision>*, boost::shared_ptr<urdf::Collision>*)\n0000000000077ec0  w   DF .text\t00000000000000a5  Base        boost::shared_ptr<urdf::Visual>* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*>(boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*)\n00000000000a43c0 g    DF .text\t0000000000000028  Base        urdf_export_helpers::values2str(double)\n0000000000074b40  w   DF .text\t00000000000000a7  Base        sdf::Console::ConsoleStream& sdf::Console::ConsoleStream::operator<< <urdf::Joint::{unnamed type#1}>(urdf::Joint::{unnamed type#1} const&)\n0000000000074880  w   DF .text\t00000000000000a7  Base        sdf::Console::ConsoleStream& sdf::Console::ConsoleStream::operator<< <urdf::Geometry::{unnamed type#1}>(urdf::Geometry::{unnamed type#1} const&)\n0000000000076b20  w   DF .text\t0000000000000049  Base        void std::_Destroy_aux<false>::__destroy<boost::shared_ptr<urdf::Visual>*>(boost::shared_ptr<urdf::Visual>*, boost::shared_ptr<urdf::Visual>*)\n~~~", "markup": "markdown", "html": "<div class=\"codehilite\"><pre><span></span>$ objdump -T libsdformat.so <span class=\"p\">|</span> grep urdf <span class=\"p\">|</span> c++filt\n0000000000077b70  w   DF .text  00000000000000a5  Base        boost::shared_ptr&lt;urdf::Collision&gt;* std::__copy_move_backward&lt;false, false, std::random_access_iterator_tag&gt;::__copy_move_b&lt;boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*<span class=\"o\">)</span>\n00000000000a3c10 g    DF .text  00000000000004f2  Base        urdf_export_helpers::values2str<span class=\"o\">(</span>unsigned int, double const*, double <span class=\"o\">(</span>*<span class=\"o\">)(</span>double<span class=\"o\">))</span>\n<span class=\"m\">0000000000076720</span>  w   DF .text  <span class=\"m\">0000000000000049</span>  Base        void std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;urdf::Collision&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Collision&gt;*, boost::shared_ptr&lt;urdf::Collision&gt;*<span class=\"o\">)</span>\n0000000000077ec0  w   DF .text  00000000000000a5  Base        boost::shared_ptr&lt;urdf::Visual&gt;* std::__copy_move_backward&lt;false, false, std::random_access_iterator_tag&gt;::__copy_move_b&lt;boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*<span class=\"o\">)</span>\n00000000000a43c0 g    DF .text  <span class=\"m\">0000000000000028</span>  Base        urdf_export_helpers::values2str<span class=\"o\">(</span>double<span class=\"o\">)</span>\n0000000000074b40  w   DF .text  00000000000000a7  Base        sdf::Console::ConsoleStream<span class=\"p\">&amp;</span> sdf::Console::ConsoleStream::operator&lt;&lt; &lt;urdf::Joint::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span>&gt;<span class=\"o\">(</span>urdf::Joint::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span> const<span class=\"p\">&amp;</span><span class=\"o\">)</span>\n<span class=\"m\">0000000000074880</span>  w   DF .text  00000000000000a7  Base        sdf::Console::ConsoleStream<span class=\"p\">&amp;</span> sdf::Console::ConsoleStream::operator&lt;&lt; &lt;urdf::Geometry::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span>&gt;<span class=\"o\">(</span>urdf::Geometry::<span class=\"o\">{</span>unnamed type#1<span class=\"o\">}</span> const<span class=\"p\">&amp;</span><span class=\"o\">)</span>\n0000000000076b20  w   DF .text  <span class=\"m\">0000000000000049</span>  Base        void std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;urdf::Visual&gt;*&gt;<span class=\"o\">(</span>boost::shared_ptr&lt;urdf::Visual&gt;*, boost::shared_ptr&lt;urdf::Visual&gt;*<span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2013-11-22T19:42:23.703133+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-11-22T19:42:23.714444+00:00", "type": "pullrequest_comment", "id": 856512}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "fe17a32a1835", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/fe17a32a1835.json"}, "html": {"href": "#!/osrf/sdformat/commits/fe17a32a1835"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2013-11-22T19:40:28.974319+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/852632.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-852632"}}, "parent": {"id": 852495, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/852495.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-852495"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "It seems so. However if you are leaking more symbols such as the one reported before then they will be part of your ABI starting from the next release and removing the leaked symbols will then break the ABI at N+1. That's why it would probably be preferable to double check that the leaked symbols are really useful.\n", "markup": "markdown", "html": "<p>It seems so. However if you are leaking more symbols such as the one reported before then they will be part of your ABI starting from the next release and removing the leaked symbols will then break the ABI at N+1. That's why it would probably be preferable to double check that the leaked symbols are really useful.</p>", "type": "rendered"}, "created_on": "2013-11-22T02:33:37.810692+00:00", "user": {"display_name": "Thomas Moulard", "uuid": "{e1f47898-cedc-4c14-a637-d0c43400e843}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D"}, "html": {"href": "https://bitbucket.org/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomas_moulard/avatar/"}}, "nickname": "thomas_moulard", "type": "user", "account_id": null}, "updated_on": "2013-11-22T02:33:37.945947+00:00", "type": "pullrequest_comment", "id": 852632}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/852631.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-852631"}}, "parent": {"id": 852421, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/852421.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-852421"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "You can use `c++filt` to go back to the c++ prototype. Apparently, some functions are still leaked... You must also tag functions if necessary. Some are missing here apparently (unless they are really part of the ABI).\n\nFor instance:\n\n```\n$ c++filt _ZN19urdf_export_helpers10values2strEd\nurdf_export_helpers::values2str(double)\n```\n\nThis is another reason why putting everything hidden and then uncovering the necessary symbols is an easier approach ;)", "markup": "markdown", "html": "<p>You can use <code>c++filt</code> to go back to the c++ prototype. Apparently, some functions are still leaked... You must also tag functions if necessary. Some are missing here apparently (unless they are really part of the ABI).</p>\n<p>For instance:</p>\n<div class=\"codehilite\"><pre><span></span>$ c++filt _ZN19urdf_export_helpers10values2strEd\nurdf_export_helpers::values2str<span class=\"o\">(</span>double<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>This is another reason why putting everything hidden and then uncovering the necessary symbols is an easier approach ;)</p>", "type": "rendered"}, "created_on": "2013-11-22T02:32:28.866343+00:00", "user": {"display_name": "Thomas Moulard", "uuid": "{e1f47898-cedc-4c14-a637-d0c43400e843}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D"}, "html": {"href": "https://bitbucket.org/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomas_moulard/avatar/"}}, "nickname": "thomas_moulard", "type": "user", "account_id": null}, "updated_on": "2013-11-22T02:32:29.005710+00:00", "type": "pullrequest_comment", "id": 852631}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/852495.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-852495"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "For the records, seems like the ABI checker from 1.4.7 version (currently in ROS) to this pull request [is sane](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any_to_any-abichecker-quantal-amd64/8/API_ABI_report/?).", "markup": "markdown", "html": "<p>For the records, seems like the ABI checker from 1.4.7 version (currently in ROS) to this pull request <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any_to_any-abichecker-quantal-amd64/8/API_ABI_report/\" rel=\"nofollow\">is sane</a>.</p>", "type": "rendered"}, "created_on": "2013-11-22T01:37:03.466196+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-22T01:37:03.476570+00:00", "type": "pullrequest_comment", "id": 852495}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/852421.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-852421"}}, "parent": {"id": 851245, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/851245.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-851245"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Being totally intuitive (sorry no deeper understanding of symbol generation) I would say that most of them come from classes using templates which at any point are instantiated using urdf classes. I believe that the point is not to find URDF symbols coming from urdf files, like class declarations (look for Sphere, Vecto3r, etc).", "markup": "markdown", "html": "<p>Being totally intuitive (sorry no deeper understanding of symbol generation) I would say that most of them come from classes using templates which at any point are instantiated using urdf classes. I believe that the point is not to find URDF symbols coming from urdf files, like class declarations (look for Sphere, Vecto3r, etc).</p>", "type": "rendered"}, "created_on": "2013-11-22T01:10:44.704203+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-22T01:10:44.713186+00:00", "type": "pullrequest_comment", "id": 852421}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/851245.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-851245"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "I'm a noob on this kind of stuff. I've verified that this maintains ABI compatibility, though I still see some results from the `objdump -T`:\n~~~\n$ objdump -T libsdformat.so | grep urdf\n0000000000077b70  w   DF .text\t00000000000000a5  Base        _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN5boost10shared_ptrIN4urdf9CollisionEEES8_EET0_T_SA_S9_\n00000000000a3c10 g    DF .text\t00000000000004f2  Base        _ZN19urdf_export_helpers10values2strEjPKdPFddE\n0000000000076720  w   DF .text\t0000000000000049  Base        _ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost10shared_ptrIN4urdf9CollisionEEEEEvT_S8_\n0000000000077ec0  w   DF .text\t00000000000000a5  Base        _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN5boost10shared_ptrIN4urdf6VisualEEES8_EET0_T_SA_S9_\n00000000000a43c0 g    DF .text\t0000000000000028  Base        _ZN19urdf_export_helpers10values2strEd\n0000000000074b40  w   DF .text\t00000000000000a7  Base        _ZN3sdf7Console13ConsoleStreamlsIN4urdf5JointUt_EEERS1_RKT_\n0000000000074880  w   DF .text\t00000000000000a7  Base        _ZN3sdf7Console13ConsoleStreamlsIN4urdf8GeometryUt_EEERS1_RKT_\n0000000000076b20  w   DF .text\t0000000000000049  Base        _ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost10shared_ptrIN4urdf6VisualEEEEEvT_S8_\n~~~\nNot sure what to make of that.", "markup": "markdown", "html": "<p>I'm a noob on this kind of stuff. I've verified that this maintains ABI compatibility, though I still see some results from the <code>objdump -T</code>:</p>\n<div class=\"codehilite\"><pre><span></span>$ objdump -T libsdformat.so <span class=\"p\">|</span> grep urdf\n0000000000077b70  w   DF .text  00000000000000a5  Base        _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN5boost10shared_ptrIN4urdf9CollisionEEES8_EET0_T_SA_S9_\n00000000000a3c10 g    DF .text  00000000000004f2  Base        _ZN19urdf_export_helpers10values2strEjPKdPFddE\n<span class=\"m\">0000000000076720</span>  w   DF .text  <span class=\"m\">0000000000000049</span>  Base        _ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost10shared_ptrIN4urdf9CollisionEEEEEvT_S8_\n0000000000077ec0  w   DF .text  00000000000000a5  Base        _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN5boost10shared_ptrIN4urdf6VisualEEES8_EET0_T_SA_S9_\n00000000000a43c0 g    DF .text  <span class=\"m\">0000000000000028</span>  Base        _ZN19urdf_export_helpers10values2strEd\n0000000000074b40  w   DF .text  00000000000000a7  Base        _ZN3sdf7Console13ConsoleStreamlsIN4urdf5JointUt_EEERS1_RKT_\n<span class=\"m\">0000000000074880</span>  w   DF .text  00000000000000a7  Base        _ZN3sdf7Console13ConsoleStreamlsIN4urdf8GeometryUt_EEERS1_RKT_\n0000000000076b20  w   DF .text  <span class=\"m\">0000000000000049</span>  Base        _ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost10shared_ptrIN4urdf6VisualEEEEEvT_S8_\n</pre></div>\n\n\n<p>Not sure what to make of that.</p>", "type": "rendered"}, "created_on": "2013-11-21T20:04:09.439265+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2013-11-21T20:04:09.455262+00:00", "type": "pullrequest_comment", "id": 851245}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/846273.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-846273"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Another person confirmed the bug via mail to me and I was able to get access to a testing case. The problem seems to be solved for me after replacing the sdformat in ROS by one built using this pull request.", "markup": "markdown", "html": "<p>Another person confirmed the bug via mail to me and I was able to get access to a testing case. The problem seems to be solved for me after replacing the sdformat in ROS by one built using this pull request.</p>", "type": "rendered"}, "created_on": "2013-11-21T03:09:48.106822+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-21T03:09:48.114383+00:00", "type": "pullrequest_comment", "id": 846273}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/831961.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-831961"}}, "parent": {"id": 829134, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/829134.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-829134"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Sounds good to me, pull request #76. \n\nThat approach will break ABI (expected), so I'm thinking on using this current pull request for the 1.4 branch in order to solve issue #29 and switch to pull request #76 as soon as sdformat2 is released.", "markup": "markdown", "html": "<p>Sounds good to me, <a href=\"#!/osrf/sdformat/pull-requests/76/initial-work-on-support-visibility-hidden\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #76</a>. </p>\n<p>That approach will break ABI (expected), so I'm thinking on using this current pull request for the 1.4 branch in order to solve issue <a href=\"#!/osrf/sdformat/issues/29/incompatibility-between-sdformats-urdf-and\" rel=\"nofollow\" title=\"incompatibility between sdformat&#39;s URDF and github&#39;s URDF\" class=\"ap-connect-link\"><s>#29</s></a> and switch to <a href=\"#!/osrf/sdformat/pull-requests/76/initial-work-on-support-visibility-hidden\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #76</a> as soon as sdformat2 is released.</p>", "type": "rendered"}, "created_on": "2013-11-18T17:47:30.808884+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-18T17:47:30.822883+00:00", "type": "pullrequest_comment", "id": 831961}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/829134.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-829134"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "I just took a look at the commit and this should be the other way around: everything which is not set should be hidden.\nI.e. the public symbols should be tagged with visible and you should change the default visibility to hidden in the CMakeLists.txt.\n\nThere is two reason to do so:\n1. What you are doing here won't work on Windows and other linkers which makes the assumption symbols are hidden by default.\n2. It is better to tag what is in the ABI whereas we just don't care too much about the rest. For instance if you make it the other way you will be able to grep and count the number of visible symbols. You can then compare with the output of nm to see if this seems coherent!", "markup": "markdown", "html": "<p>I just took a look at the commit and this should be the other way around: everything which is not set should be hidden.\nI.e. the public symbols should be tagged with visible and you should change the default visibility to hidden in the CMakeLists.txt.</p>\n<p>There is two reason to do so:\n1. What you are doing here won't work on Windows and other linkers which makes the assumption symbols are hidden by default.\n2. It is better to tag what is in the ABI whereas we just don't care too much about the rest. For instance if you make it the other way you will be able to grep and count the number of visible symbols. You can then compare with the output of nm to see if this seems coherent!</p>", "type": "rendered"}, "created_on": "2013-11-18T08:33:22.482054+00:00", "user": {"display_name": "Thomas Moulard", "uuid": "{e1f47898-cedc-4c14-a637-d0c43400e843}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D"}, "html": {"href": "https://bitbucket.org/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomas_moulard/avatar/"}}, "nickname": "thomas_moulard", "type": "user", "account_id": null}, "updated_on": "2013-11-18T08:33:22.622237+00:00", "type": "pullrequest_comment", "id": 829134}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/828826.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-828826"}}, "parent": {"id": 827491, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/827491.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-827491"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Are you referring to the C++ namespace? They do not impact the symbol visibility unfortunately. A valid way to reduce symbol visibility is to use the \"static\" C-keyword on functions. However, there is no such mechanism for classes or methods. Also, static is stricter than a \"not exported\" symbol. \"static\" reduce visibility to the same object file whereas not exporting a symbol is limiting the ABI to the current DSO (Dynamic Shared Object). You can play with \"nm\" or \"objdump\" and you will see that namespaces will change your symbols *names* not your symbols *types*.\n\nAlso, fighting with symbols is also fighting against the leakage of unwanted symbols defined by the libraries you depend on (Boost, for instance). If properly wrapped and used internally only, you really have one library A using Boost 1.39 and another library B using Boost 1.40 without any issue even if the ABI is different on the two releases. As long as no Boost types are exposed in the API it will be ok. By making all symbols hidden by default, you will also tag as hidden all the Boost related symbols you will create by instating templates. Therefore, it is very easy to see a 50% drop in the number of symbols by just tagging symbols explicitly. See http://gcc.gnu.org/wiki/Visibility for more information.", "markup": "markdown", "html": "<p>Are you referring to the C++ namespace? They do not impact the symbol visibility unfortunately. A valid way to reduce symbol visibility is to use the \"static\" C-keyword on functions. However, there is no such mechanism for classes or methods. Also, static is stricter than a \"not exported\" symbol. \"static\" reduce visibility to the same object file whereas not exporting a symbol is limiting the ABI to the current DSO (Dynamic Shared Object). You can play with \"nm\" or \"objdump\" and you will see that namespaces will change your symbols <em>names</em> not your symbols <em>types</em>.</p>\n<p>Also, fighting with symbols is also fighting against the leakage of unwanted symbols defined by the libraries you depend on (Boost, for instance). If properly wrapped and used internally only, you really have one library A using Boost 1.39 and another library B using Boost 1.40 without any issue even if the ABI is different on the two releases. As long as no Boost types are exposed in the API it will be ok. By making all symbols hidden by default, you will also tag as hidden all the Boost related symbols you will create by instating templates. Therefore, it is very easy to see a 50% drop in the number of symbols by just tagging symbols explicitly. See <a href=\"http://gcc.gnu.org/wiki/Visibility\" rel=\"nofollow\" class=\"ap-connect-link\">http://gcc.gnu.org/wiki/Visibility</a> for more information.</p>", "type": "rendered"}, "created_on": "2013-11-18T06:18:09.806330+00:00", "user": {"display_name": "Thomas Moulard", "uuid": "{e1f47898-cedc-4c14-a637-d0c43400e843}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D"}, "html": {"href": "https://bitbucket.org/%7Be1f47898-cedc-4c14-a637-d0c43400e843%7D/"}, "avatar": {"href": "https://bitbucket.org/account/thomas_moulard/avatar/"}}, "nickname": "thomas_moulard", "type": "user", "account_id": null}, "updated_on": "2013-11-18T06:18:09.926345+00:00", "type": "pullrequest_comment", "id": 828826}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/827491.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-827491"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "I am now out of town for a few days but will try it soon. Thank you for the effort.\n\nJust a naive question, though, if we just need to prevent dynamic linking of these symbols, why don't we just use a different namespace?", "markup": "markdown", "html": "<p>I am now out of town for a few days but will try it soon. Thank you for the effort.</p>\n<p>Just a naive question, though, if we just need to prevent dynamic linking of these symbols, why don't we just use a different namespace?</p>", "type": "rendered"}, "created_on": "2013-11-17T15:50:12.656079+00:00", "user": {"display_name": "Paul Mathieu", "uuid": "{c5c34c75-e3ca-495f-a49a-623b1e159fca}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc5c34c75-e3ca-495f-a49a-623b1e159fca%7D"}, "html": {"href": "https://bitbucket.org/%7Bc5c34c75-e3ca-495f-a49a-623b1e159fca%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4808dc3f5ee7a7a70e527f4b794fd18ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPM-6.png"}}, "nickname": "po1", "type": "user", "account_id": "5a42f956b7c4b33a38a18aac"}, "updated_on": "2013-11-17T15:50:12.898350+00:00", "type": "pullrequest_comment", "id": 827491}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "200288dae730", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/200288dae730.json"}, "html": {"href": "#!/osrf/sdformat/commits/200288dae730"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2013-11-16T18:23:14.411423+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75/comments/826111.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75/_/diff#comment-826111"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}, "content": {"raw": "Sorry @thomas_moulard bitbucket does not allow me to set you as reviewer today ... please give it a look.", "markup": "markdown", "html": "<p>Sorry @thomas_moulard bitbucket does not allow me to set you as reviewer today ... please give it a look.</p>", "type": "rendered"}, "created_on": "2013-11-16T00:34:35.415383+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2013-11-16T00:34:35.429230+00:00", "type": "pullrequest_comment", "id": 826111}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "200288dae730", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/200288dae730.json"}, "html": {"href": "#!/osrf/sdformat/commits/200288dae730"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2013-11-16T00:33:14.874270+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "200288dae730", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/200288dae730.json"}, "html": {"href": "#!/osrf/sdformat/commits/200288dae730"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2013-11-16T00:31:33.002760+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}, {"update": {"description": "Motivation in issue #29.\r\n\r\nThis implementation came from pull request #74 and the need of keep the ABI stable while hidden urdf symbols.\r\n\r\nIn this case I've changed the priority to don't change imported urdf code by ABI stability, so the current implementation go URDF class by URDF class defining hidden attribute for them. I would prefer the approach in pull request #74, but we can go this until new sdformat2 appear. \r\n\r\nThe [ABI/API report](http://build.osrfoundation.org/view/API_ABI%20checker/job/sdformat-any-abichecker-quantal-amd64/20/) looks sane.\r\n\r\n@po1 if you can confirm that this approach works for your case, perfect.", "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)", "destination": {"commit": {"hash": "a0445175ba24", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/a0445175ba24.json"}, "html": {"href": "#!/osrf/sdformat/commits/a0445175ba24"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "sdf_1.4"}}, "reason": "", "source": {"commit": {"hash": "200288dae730", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/200288dae730.json"}, "html": {"href": "#!/osrf/sdformat/commits/200288dae730"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "hidden_visibility_urdf_classes"}}, "state": "OPEN", "author": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "date": "2013-11-16T00:31:32.948594+00:00"}, "pull_request": {"type": "pullrequest", "id": 75, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/75.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/75"}}, "title": "Do not export urdf symbols in sdformat 1.4 (-> sdf_1.4)"}}]}