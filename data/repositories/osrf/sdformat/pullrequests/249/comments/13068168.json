{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13068168.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13068168"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "We've started using `std::unique_ptr` in our PIMPL pattern in gazebo. I think it could be used in this pull request:\n\nSince this is targeting default, we can change the private data pointer type and not worry about the ABI implications. Then the explicit `delete` isn't needed in the destructor.\n\n~~~\ndiff -r e720a29dc3df include/sdf/Console.hh\n--- a/include/sdf/Console.hh\tWed Dec 02 13:28:00 2015 -0800\n+++ b/include/sdf/Console.hh\tMon Dec 28 14:06:44 2015 -0800\n@@ -115,7 +115,7 @@\n                                const std::string &file,\n                                unsigned int line);\n \n-    private: ConsolePrivate *dataPtr;\n+    private: std::unique_ptr<ConsolePrivate> dataPtr;\n   };\n \n   /// \\internal\n~~~\n\nAlso, maybe the following could be used in parser_urdf.cc:\n\n~~~\ndiff -r e720a29dc3df src/parser_urdf.cc\n--- a/src/parser_urdf.cc\tWed Dec 02 13:28:00 2015 -0800\n+++ b/src/parser_urdf.cc\tMon Dec 28 14:06:44 2015 -0800\n@@ -1694,7 +1694,10 @@\n \n               // print for debug\n               std::ostringstream origStream;\n-              origStream << *(*blob)->Clone();\n+              {\n+                std::unique_ptr<TiXmlNode> blobClone((*blob)->Clone());\n+                origStream << *blobClone;\n+              }\n               // std::cerr << \"collision extension [\"\n               //           << origStream.str() << \"]\\n\";\n \n~~~\n\nI haven't tested either of these patches yet", "markup": "markdown", "html": "<p>We've started using <code>std::unique_ptr</code> in our PIMPL pattern in gazebo. I think it could be used in this pull request:</p>\n<p>Since this is targeting default, we can change the private data pointer type and not worry about the ABI implications. Then the explicit <code>delete</code> isn't needed in the destructor.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r e720a29dc3df include/sdf/Console.hh</span>\n<span class=\"gd\">--- a/include/sdf/Console.hh    Wed Dec 02 13:28:00 2015 -0800</span>\n<span class=\"gi\">+++ b/include/sdf/Console.hh    Mon Dec 28 14:06:44 2015 -0800</span>\n<span class=\"gu\">@@ -115,7 +115,7 @@</span>\n                                const std::string &amp;file,\n                                unsigned int line);\n\n<span class=\"gd\">-    private: ConsolePrivate *dataPtr;</span>\n<span class=\"gi\">+    private: std::unique_ptr&lt;ConsolePrivate&gt; dataPtr;</span>\n   };\n\n   /// \\internal\n</pre></div>\n\n\n<p>Also, maybe the following could be used in parser_urdf.cc:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r e720a29dc3df src/parser_urdf.cc</span>\n<span class=\"gd\">--- a/src/parser_urdf.cc    Wed Dec 02 13:28:00 2015 -0800</span>\n<span class=\"gi\">+++ b/src/parser_urdf.cc    Mon Dec 28 14:06:44 2015 -0800</span>\n<span class=\"gu\">@@ -1694,7 +1694,10 @@</span>\n\n               // print for debug\n               std::ostringstream origStream;\n<span class=\"gd\">-              origStream &lt;&lt; *(*blob)-&gt;Clone();</span>\n<span class=\"gi\">+              {</span>\n<span class=\"gi\">+                std::unique_ptr&lt;TiXmlNode&gt; blobClone((*blob)-&gt;Clone());</span>\n<span class=\"gi\">+                origStream &lt;&lt; *blobClone;</span>\n<span class=\"gi\">+              }</span>\n               // std::cerr &lt;&lt; &quot;collision extension [&quot;\n               //           &lt;&lt; origStream.str() &lt;&lt; &quot;]\\n&quot;;\n</pre></div>\n\n\n<p>I haven't tested either of these patches yet</p>", "type": "rendered"}, "created_on": "2015-12-28T22:12:09.717876+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-12-28T22:12:09.720173+00:00", "type": "pullrequest_comment", "id": 13068168}