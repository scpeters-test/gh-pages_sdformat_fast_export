{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13065392.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13065392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "PR without trailing white space removal : #!/osrf/sdformat/pull-requests/249/fix_memory_leaks/diff?w=1 . ", "markup": "markdown", "html": "<p>PR without trailing white space removal : <a href=\"#!/osrf/sdformat/pull-requests/249/fix_memory_leaks/diff?w=1\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/pull-requests/249/fix_memory_leaks/diff?w=1</a> . </p>", "type": "rendered"}, "created_on": "2015-12-28T19:18:10.313605+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2015-12-28T21:13:29.598242+00:00", "type": "pullrequest_comment", "id": 13065392}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13068110.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13068110"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "Thanks for finding these! I like the idea of a valgrind helper too, though I haven't tested it yet.", "markup": "markdown", "html": "<p>Thanks for finding these! I like the idea of a valgrind helper too, though I haven't tested it yet.</p>", "type": "rendered"}, "created_on": "2015-12-28T22:07:32.729919+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-12-28T22:07:32.733143+00:00", "type": "pullrequest_comment", "id": 13068110}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13068168.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13068168"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "We've started using `std::unique_ptr` in our PIMPL pattern in gazebo. I think it could be used in this pull request:\n\nSince this is targeting default, we can change the private data pointer type and not worry about the ABI implications. Then the explicit `delete` isn't needed in the destructor.\n\n~~~\ndiff -r e720a29dc3df include/sdf/Console.hh\n--- a/include/sdf/Console.hh\tWed Dec 02 13:28:00 2015 -0800\n+++ b/include/sdf/Console.hh\tMon Dec 28 14:06:44 2015 -0800\n@@ -115,7 +115,7 @@\n                                const std::string &file,\n                                unsigned int line);\n \n-    private: ConsolePrivate *dataPtr;\n+    private: std::unique_ptr<ConsolePrivate> dataPtr;\n   };\n \n   /// \\internal\n~~~\n\nAlso, maybe the following could be used in parser_urdf.cc:\n\n~~~\ndiff -r e720a29dc3df src/parser_urdf.cc\n--- a/src/parser_urdf.cc\tWed Dec 02 13:28:00 2015 -0800\n+++ b/src/parser_urdf.cc\tMon Dec 28 14:06:44 2015 -0800\n@@ -1694,7 +1694,10 @@\n \n               // print for debug\n               std::ostringstream origStream;\n-              origStream << *(*blob)->Clone();\n+              {\n+                std::unique_ptr<TiXmlNode> blobClone((*blob)->Clone());\n+                origStream << *blobClone;\n+              }\n               // std::cerr << \"collision extension [\"\n               //           << origStream.str() << \"]\\n\";\n \n~~~\n\nI haven't tested either of these patches yet", "markup": "markdown", "html": "<p>We've started using <code>std::unique_ptr</code> in our PIMPL pattern in gazebo. I think it could be used in this pull request:</p>\n<p>Since this is targeting default, we can change the private data pointer type and not worry about the ABI implications. Then the explicit <code>delete</code> isn't needed in the destructor.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r e720a29dc3df include/sdf/Console.hh</span>\n<span class=\"gd\">--- a/include/sdf/Console.hh    Wed Dec 02 13:28:00 2015 -0800</span>\n<span class=\"gi\">+++ b/include/sdf/Console.hh    Mon Dec 28 14:06:44 2015 -0800</span>\n<span class=\"gu\">@@ -115,7 +115,7 @@</span>\n                                const std::string &amp;file,\n                                unsigned int line);\n\n<span class=\"gd\">-    private: ConsolePrivate *dataPtr;</span>\n<span class=\"gi\">+    private: std::unique_ptr&lt;ConsolePrivate&gt; dataPtr;</span>\n   };\n\n   /// \\internal\n</pre></div>\n\n\n<p>Also, maybe the following could be used in parser_urdf.cc:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r e720a29dc3df src/parser_urdf.cc</span>\n<span class=\"gd\">--- a/src/parser_urdf.cc    Wed Dec 02 13:28:00 2015 -0800</span>\n<span class=\"gi\">+++ b/src/parser_urdf.cc    Mon Dec 28 14:06:44 2015 -0800</span>\n<span class=\"gu\">@@ -1694,7 +1694,10 @@</span>\n\n               // print for debug\n               std::ostringstream origStream;\n<span class=\"gd\">-              origStream &lt;&lt; *(*blob)-&gt;Clone();</span>\n<span class=\"gi\">+              {</span>\n<span class=\"gi\">+                std::unique_ptr&lt;TiXmlNode&gt; blobClone((*blob)-&gt;Clone());</span>\n<span class=\"gi\">+                origStream &lt;&lt; *blobClone;</span>\n<span class=\"gi\">+              }</span>\n               // std::cerr &lt;&lt; &quot;collision extension [&quot;\n               //           &lt;&lt; origStream.str() &lt;&lt; &quot;]\\n&quot;;\n</pre></div>\n\n\n<p>I haven't tested either of these patches yet</p>", "type": "rendered"}, "created_on": "2015-12-28T22:12:09.717876+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-12-28T22:12:09.720173+00:00", "type": "pullrequest_comment", "id": 13068168}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13068611.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13068611"}}, "parent": {"id": 13068168, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13068168.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13068168"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "Done in https://bitbucket.org/traversaro/sdformat/commits/45adb5df704f188e8e0886003d9722246918fa80?at=default , working fine!", "markup": "markdown", "html": "<p>Done in <a href=\"https://bitbucket.org/traversaro/sdformat/commits/45adb5df704f188e8e0886003d9722246918fa80?at=default\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/traversaro/sdformat/commits/45adb5df704f188e8e0886003d9722246918fa80?at=default</a> , working fine!</p>", "type": "rendered"}, "created_on": "2015-12-28T22:41:29.651023+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2015-12-28T22:41:29.714573+00:00", "type": "pullrequest_comment", "id": 13068611}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13068874.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13068874"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "One more thing, we should check if `valgrind` is found successfully. If not, give a console warning and skip the tests.\n\n~~~\ndiff -r 45adb5df704f cmake/SDFUtils.cmake\n--- a/cmake/SDFUtils.cmake\tMon Dec 28 23:39:04 2015 +0100\n+++ b/cmake/SDFUtils.cmake\tMon Dec 28 15:02:55 2015 -0800\n@@ -194,7 +194,7 @@\n                ${CMAKE_BINARY_DIR}/test_results/${BINARY_NAME}.xml)\n     endif()\n \n-    if(SDFORMAT_RUN_VALGRIND_TESTS)\n+    if(SDFORMAT_RUN_VALGRIND_TESTS AND VALGRIND_PROGRAM)\n       add_test(memcheck_${BINARY_NAME} ${VALGRIND_PROGRAM} --leak-check=full\n                --error-exitcode=1 --show-leak-kinds=all ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_NAME})\n     endif()\ndiff -r 45adb5df704f cmake/SearchForStuff.cmake\n--- a/cmake/SearchForStuff.cmake\tMon Dec 28 23:39:04 2015 +0100\n+++ b/cmake/SearchForStuff.cmake\tMon Dec 28 15:02:55 2015 -0800\n@@ -107,6 +107,9 @@\n find_program(VALGRIND_PROGRAM NAMES valgrind PATH ${VALGRIND_ROOT}/bin)\n option(SDFORMAT_RUN_VALGRIND_TESTS \"Run sdformat tests with Valgrind\" FALSE)\n mark_as_advanced(SDFORMAT_RUN_VALGRIND_TESTS)\n+if (SDFORMAT_RUN_VALGRIND_TESTS AND NOT VALGRIND_PROGRAM)\n+  BUILD_WARNING(\"valgrind not found. Memory check tests will be skipped.\")\n+endif()\n \n ################################################\n # Find ruby executable to produce xml schemas\n~~~", "markup": "markdown", "html": "<p>One more thing, we should check if <code>valgrind</code> is found successfully. If not, give a console warning and skip the tests.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 45adb5df704f cmake/SDFUtils.cmake</span>\n<span class=\"gd\">--- a/cmake/SDFUtils.cmake  Mon Dec 28 23:39:04 2015 +0100</span>\n<span class=\"gi\">+++ b/cmake/SDFUtils.cmake  Mon Dec 28 15:02:55 2015 -0800</span>\n<span class=\"gu\">@@ -194,7 +194,7 @@</span>\n                ${CMAKE_BINARY_DIR}/test_results/${BINARY_NAME}.xml)\n     endif()\n\n<span class=\"gd\">-    if(SDFORMAT_RUN_VALGRIND_TESTS)</span>\n<span class=\"gi\">+    if(SDFORMAT_RUN_VALGRIND_TESTS AND VALGRIND_PROGRAM)</span>\n       add_test(memcheck_${BINARY_NAME} ${VALGRIND_PROGRAM} --leak-check=full\n                --error-exitcode=1 --show-leak-kinds=all ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_NAME})\n     endif()\n<span class=\"gh\">diff -r 45adb5df704f cmake/SearchForStuff.cmake</span>\n<span class=\"gd\">--- a/cmake/SearchForStuff.cmake    Mon Dec 28 23:39:04 2015 +0100</span>\n<span class=\"gi\">+++ b/cmake/SearchForStuff.cmake    Mon Dec 28 15:02:55 2015 -0800</span>\n<span class=\"gu\">@@ -107,6 +107,9 @@</span>\n find_program(VALGRIND_PROGRAM NAMES valgrind PATH ${VALGRIND_ROOT}/bin)\n option(SDFORMAT_RUN_VALGRIND_TESTS &quot;Run sdformat tests with Valgrind&quot; FALSE)\n mark_as_advanced(SDFORMAT_RUN_VALGRIND_TESTS)\n<span class=\"gi\">+if (SDFORMAT_RUN_VALGRIND_TESTS AND NOT VALGRIND_PROGRAM)</span>\n<span class=\"gi\">+  BUILD_WARNING(&quot;valgrind not found. Memory check tests will be skipped.&quot;)</span>\n<span class=\"gi\">+endif()</span>\n\n ################################################\n # Find ruby executable to produce xml schemas\n</pre></div>", "type": "rendered"}, "created_on": "2015-12-28T23:04:04.499452+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-12-28T23:04:04.501665+00:00", "type": "pullrequest_comment", "id": 13068874}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13074157.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13074157"}}, "parent": {"id": 13068874, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13068874.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13068874"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "Done in https://bitbucket.org/traversaro/sdformat/commits/171b143d7d270f639f6f71a64d975c4b7236e611?at=default .", "markup": "markdown", "html": "<p>Done in <a href=\"https://bitbucket.org/traversaro/sdformat/commits/171b143d7d270f639f6f71a64d975c4b7236e611?at=default\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/traversaro/sdformat/commits/171b143d7d270f639f6f71a64d975c4b7236e611?at=default</a> .</p>", "type": "rendered"}, "created_on": "2015-12-29T09:03:07.543288+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2015-12-29T09:03:07.589690+00:00", "type": "pullrequest_comment", "id": 13074157}, {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249/comments/13086125.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249/_/diff#comment-13086125"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/249.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/249"}}, "title": "Fix memory leaks"}, "content": {"raw": "Thank you!", "markup": "markdown", "html": "<p>Thank you!</p>", "type": "rendered"}, "created_on": "2015-12-29T17:46:16.283388+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-12-29T17:46:16.285680+00:00", "type": "pullrequest_comment", "id": 13086125}], "page": 1, "size": 7}