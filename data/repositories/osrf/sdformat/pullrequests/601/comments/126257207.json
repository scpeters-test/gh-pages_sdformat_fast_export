{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/601/comments/126257207.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:209053df8d08..eba4878d6a3d?path=include%2Fsdf%2FModel.hh"}, "html": {"href": "#!/osrf/sdformat/pull-requests/601/_/diff#comment-126257207"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 601, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/601.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/601"}}, "title": "[Citadel] sdf 1.7: add `//model/@canonical_link` attribute and require models to have at least one link"}, "content": {"raw": "It would be nice to have a function that returns a pointer to the canonical link. Without it, users have to handle the two cases where `CanonicalLinkName` returns an empty string or a link name and call `LinkByIndex` or `LinkByName` accordingly.", "markup": "markdown", "html": "<p>It would be nice to have a function that returns a pointer to the canonical link. Without it, users have to handle the two cases where <code>CanonicalLinkName</code> returns an empty string or a link name and call <code>LinkByIndex</code> or <code>LinkByName</code> accordingly.</p>", "type": "rendered"}, "created_on": "2019-11-25T22:45:21.906560+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": null, "from": 201, "outdated": true, "path": "include/sdf/Model.hh"}, "updated_on": "2019-11-25T22:45:21.912608+00:00", "type": "pullrequest_comment", "id": 126257207}