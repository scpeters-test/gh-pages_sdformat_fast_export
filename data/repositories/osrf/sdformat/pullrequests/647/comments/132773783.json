{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/647/comments/132773783.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:829cee005356..f4b3d6196d37?path=src%2Fparser_TEST.cc"}, "html": {"href": "#!/osrf/sdformat/pull-requests/647/_/diff#comment-132773783"}}, "parent": {"id": 132772965, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/647/comments/132772965.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/647/_/diff#comment-132772965"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 647, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/647.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/647"}}, "title": "Parser: add boolean parameter to `readFile` and `readString` for disabling conversion to latest SDF spec."}, "content": {"raw": "The downside of making a new function is that we'd have to repeat some code. For example, `bool readFile(const std::string &_filename, SDFPtr _sdf, Errors &_errors)` used to actually load the file before calling `readDoc`. If I understand correctly, making `sdf::readFileWithoutConversion` would need the same file loading code before calling `readDoc`. I think it would be better to have an overload than to repeat code.\n", "markup": "markdown", "html": "<p>The downside of making a new function is that we'd have to repeat some code. For example, <code>bool readFile(const std::string &amp;_filename, SDFPtr _sdf, Errors &amp;_errors)</code> used to actually load the file before calling <code>readDoc</code>. If I understand correctly, making <code>sdf::readFileWithoutConversion</code> would need the same file loading code before calling <code>readDoc</code>. I think it would be better to have an overload than to repeat code.</p>", "type": "rendered"}, "created_on": "2020-01-23T00:01:51.379929+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 105, "from": null, "outdated": true, "path": "src/parser_TEST.cc"}, "updated_on": "2020-01-23T00:01:51.387709+00:00", "type": "pullrequest_comment", "id": 132773783}