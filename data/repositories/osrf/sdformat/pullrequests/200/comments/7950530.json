{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/200/comments/7950530.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/asymingt/sdformat:dbbc83025dee..052a15093457?path=sdf%2F1.5%2Fclock.sdf"}, "html": {"href": "#!/osrf/sdformat/pull-requests/200/_/diff#comment-7950530"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 200, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/200.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/200"}}, "title": "Added a clock to SDF, which will be used to perturb sensor time stamps"}, "content": {"raw": "I'm starting to think that having parameters of the clock model explicitly encoded in this way is not a good idea, as it prescribes a particular way of thinking. We can rather add a generic, arbitrary polynomial component to the ```<noise>```  tag, and include the noise tag in the clock model. To illustrate what I mean, have a look at the modified generic noise model SDF below, which is a work in progress:\n\n```\n<element name=\"noise\" required=\"0\">\n  <description>The properties of a noise model.</description>\n\n  <!-- Fixed error component  -->\n  <element name=\"fixed\" type=\"double\" default=\"0.0\" required=\"0\">\n    <description>\n      A fixed error quantity that is independent of time or sensor value, which\n      remains constant across all runs. This may, for example, represent manu-\n      facturing variations between sensors.\n    </description>\n  </element>\n\n  <!-- Run-to-run error component  -->\n  <element name=\"run_to_run\" required=\"0\">\n    <description>\n      A deterministic error component, expressed as a polynomial with offset in\n      the form e = a(1)*(x-k)^0 + a(2)*(x-k)^1 ... a(N)*(x-k)^N, where i is the\n      order, a(i) is the scale factor for the ith term, x is the sensor value \n      and k is a constant offset. Unspecified scale factors are assumed zero.\n      The distributions are used to draw the initial value for each term in the\n      expression once at startup. Thereafter, they remain fixed for the duration\n      of the simulation. For example, this can be used to represent an unknown \n      initial gyroscope bias, or model clock drift using an order-3 polynomial.\n    </description>\n    <attribute name=\"offset\" type=\"double\" default=\"0.0\" required=\"1\"/>\n    <element name=\"term\" required=\"*\">\n      <attribute name=\"order\" type=\"double\" default=\"0.0\" required=\"1\"/>\n      <attribute name=\"type\" type=\"string\" default=\"none\" required=\"1\">\n        <description>One of the following noise distributions:\n                        constant,\n                        uniform,\n                        exponential,\n                        gaussian\n        </description>\n      </attribute>\n      <include filename=\"constant.sdf\" required=\"0\"/>\n      <include filename=\"uniform.sdf\" required=\"0\"/>\n      <include filename=\"exponential.sdf\" required=\"0\"/>\n      <include filename=\"gaussian.sdf\" required=\"0\"/>\n    </element>\n  </element>\n\n  <!-- In run error component-->\n  <element name=\"in_run\" required=\"0\">\n    <description>\n      A stochastic error component, where error is drawn from a distribution. \n      This error may be independently drawn (uniform, exponential, gaussian),\n      correlated in time (wiener, ornstein_uhlenbeck), or space (gpmap).\n    </description>\n    <attribute name=\"type\" type=\"string\" default=\"none\" required=\"1\">\n      <description>One of the following noise distributions:\n                    uniform,\n                    exponential,\n                    gaussian,\n                    wiener,\n                    ornstein_uhlenbeck\n      </description>\n    </attribute>\n    <include filename=\"uniform.sdf\" required=\"0\"/>\n    <include filename=\"exponential.sdf\" required=\"0\"/>\n    <include filename=\"gaussian.sdf\" required=\"0\"/>\n    <include filename=\"wiener.sdf\" required=\"0\"/>\n    <include filename=\"ornstein_uhlenbeck.sdf\" required=\"0\"/>\n    <element name=\"map\" type=\"string\" required=\"0\">\n      <description>\n        Specify statistical parameters as a function of space and time using a\n        map file. The file must be a comma separated file in the format \n        [time, x, y, z, p1, ..., pN], where t is the global time, (x,y,z) is the\n        global point in space and p1 ... pN are the parameters for the\n        distribution specified above. For example, a spatial Gaussian\n        ....\n        # time, x, y, z, mean, stddev\n        0,  1, 4, 5, 0, 3.9\n        0, -5, 4, 6, 0, 3.8\n        ....\n        Note that the order of the parameters does not matter, but their names\n        must match exactly those specified by the distribution. Otherwise, the\n        file will be rejected by the parser.\n      </description>\n    </element> \n  </element>\n\n  <!-- Quantization due to finite sensing precision -->\n  <element name=\"quantization\" type=\"double\" default=\"0.0\" required=\"0\">\n    <description>\n      The precision of output signals. A value of zero implies infinite \n      precision, and therefore no quantization.\n    </description>\n  </element>\n\n  <!-- Clamping signal values to minimum and maximum values -->\n  <element name=\"min\" type=\"double\" required=\"0\">\n    <description>\n      Clamp error to a minimum value.\n    </description>\n  </element>\n  <element name=\"max\" type=\"double\" required=\"0\">\n    <description>\n      Clamp error to a maximum value.\n    </description>\n  </element>\n\n</element>\n```", "markup": "markdown", "html": "<p>I'm starting to think that having parameters of the clock model explicitly encoded in this way is not a good idea, as it prescribes a particular way of thinking. We can rather add a generic, arbitrary polynomial component to the <code>&lt;noise&gt;</code>  tag, and include the noise tag in the clock model. To illustrate what I mean, have a look at the modified generic noise model SDF below, which is a work in progress:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;noise&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;description&gt;</span>The properties of a noise model.<span class=\"nt\">&lt;/description&gt;</span>\n\n  <span class=\"c\">&lt;!-- Fixed error component  --&gt;</span>\n  <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;fixed&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;description&gt;</span>\n      A fixed error quantity that is independent of time or sensor value, which\n      remains constant across all runs. This may, for example, represent manu-\n      facturing variations between sensors.\n    <span class=\"nt\">&lt;/description&gt;</span>\n  <span class=\"nt\">&lt;/element&gt;</span>\n\n  <span class=\"c\">&lt;!-- Run-to-run error component  --&gt;</span>\n  <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;run_to_run&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;description&gt;</span>\n      A deterministic error component, expressed as a polynomial with offset in\n      the form e = a(1)*(x-k)^0 + a(2)*(x-k)^1 ... a(N)*(x-k)^N, where i is the\n      order, a(i) is the scale factor for the ith term, x is the sensor value \n      and k is a constant offset. Unspecified scale factors are assumed zero.\n      The distributions are used to draw the initial value for each term in the\n      expression once at startup. Thereafter, they remain fixed for the duration\n      of the simulation. For example, this can be used to represent an unknown \n      initial gyroscope bias, or model clock drift using an order-3 polynomial.\n    <span class=\"nt\">&lt;/description&gt;</span>\n    <span class=\"nt\">&lt;attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;offset&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;term&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;*&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;order&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;type&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;none&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;description&gt;</span>One of the following noise distributions:\n                        constant,\n                        uniform,\n                        exponential,\n                        gaussian\n        <span class=\"nt\">&lt;/description&gt;</span>\n      <span class=\"nt\">&lt;/attribute&gt;</span>\n      <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;constant.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;uniform.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;exponential.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;gaussian.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/element&gt;</span>\n  <span class=\"nt\">&lt;/element&gt;</span>\n\n  <span class=\"c\">&lt;!-- In run error component--&gt;</span>\n  <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;in_run&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;description&gt;</span>\n      A stochastic error component, where error is drawn from a distribution. \n      This error may be independently drawn (uniform, exponential, gaussian),\n      correlated in time (wiener, ornstein_uhlenbeck), or space (gpmap).\n    <span class=\"nt\">&lt;/description&gt;</span>\n    <span class=\"nt\">&lt;attribute</span> <span class=\"na\">name=</span><span class=\"s\">&quot;type&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;none&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;description&gt;</span>One of the following noise distributions:\n                    uniform,\n                    exponential,\n                    gaussian,\n                    wiener,\n                    ornstein_uhlenbeck\n      <span class=\"nt\">&lt;/description&gt;</span>\n    <span class=\"nt\">&lt;/attribute&gt;</span>\n    <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;uniform.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;exponential.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;gaussian.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;wiener.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;include</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;ornstein_uhlenbeck.sdf&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;map&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;description&gt;</span>\n        Specify statistical parameters as a function of space and time using a\n        map file. The file must be a comma separated file in the format \n        [time, x, y, z, p1, ..., pN], where t is the global time, (x,y,z) is the\n        global point in space and p1 ... pN are the parameters for the\n        distribution specified above. For example, a spatial Gaussian\n        ....\n        # time, x, y, z, mean, stddev\n        0,  1, 4, 5, 0, 3.9\n        0, -5, 4, 6, 0, 3.8\n        ....\n        Note that the order of the parameters does not matter, but their names\n        must match exactly those specified by the distribution. Otherwise, the\n        file will be rejected by the parser.\n      <span class=\"nt\">&lt;/description&gt;</span>\n    <span class=\"nt\">&lt;/element&gt;</span> \n  <span class=\"nt\">&lt;/element&gt;</span>\n\n  <span class=\"c\">&lt;!-- Quantization due to finite sensing precision --&gt;</span>\n  <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;quantization&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">default=</span><span class=\"s\">&quot;0.0&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;description&gt;</span>\n      The precision of output signals. A value of zero implies infinite \n      precision, and therefore no quantization.\n    <span class=\"nt\">&lt;/description&gt;</span>\n  <span class=\"nt\">&lt;/element&gt;</span>\n\n  <span class=\"c\">&lt;!-- Clamping signal values to minimum and maximum values --&gt;</span>\n  <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;min&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;description&gt;</span>\n      Clamp error to a minimum value.\n    <span class=\"nt\">&lt;/description&gt;</span>\n  <span class=\"nt\">&lt;/element&gt;</span>\n  <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;max&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">required=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;description&gt;</span>\n      Clamp error to a maximum value.\n    <span class=\"nt\">&lt;/description&gt;</span>\n  <span class=\"nt\">&lt;/element&gt;</span>\n\n<span class=\"nt\">&lt;/element&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-07-01T19:05:42.060898+00:00", "user": {"display_name": "Andrew Symington", "uuid": "{db1311fc-02e6-442e-84a1-4bb85dfee5ba}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D"}, "html": {"href": "https://bitbucket.org/%7Bdb1311fc-02e6-442e-84a1-4bb85dfee5ba%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:cab3b56e-7c24-487c-b07f-05e0600adf54/8a009f21-29b8-4d43-98ed-2677428e17ff/128"}}, "nickname": "asymingt", "type": "user", "account_id": "557058:cab3b56e-7c24-487c-b07f-05e0600adf54"}, "inline": {"to": 5, "from": null, "outdated": false, "path": "sdf/1.5/clock.sdf"}, "updated_on": "2015-07-01T19:05:42.217580+00:00", "type": "pullrequest_comment", "id": 7950530}