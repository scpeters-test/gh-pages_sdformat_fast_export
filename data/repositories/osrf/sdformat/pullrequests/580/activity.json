{"pagelen": 50, "values": [{"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.\r\n\r\nUPDATE: re-targeted to default.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "67f63fc0243c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/67f63fc0243c.json"}, "html": {"href": "#!/osrf/sdformat/commits/67f63fc0243c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "15c1f23788a8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/15c1f23788a8.json"}, "html": {"href": "#!/osrf/sdformat/commits/15c1f23788a8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-11-15T21:06:43.722714+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/125064979.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-125064979"}}, "parent": {"id": 125035792, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/125035792.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-125035792"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "issue #222", "markup": "markdown", "html": "<p>issue <a href=\"#!/osrf/sdformat/issues/222/converter-map-only-maps-first-of-sibling\" rel=\"nofollow\" title=\"Converter::Map only maps first of sibling elements\" class=\"ap-connect-link\">#222</a></p>", "type": "rendered"}, "created_on": "2019-11-15T21:06:18.108518+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-11-15T21:06:18.114837+00:00", "type": "pullrequest_comment", "id": 125064979}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/125035792.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-125035792"}}, "parent": {"id": 124963894, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124963894.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124963894"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "Oh I understand now. Thank you for the clarification. Creating an issue sounds good, thanks!", "markup": "markdown", "html": "<p>Oh I understand now. Thank you for the clarification. Creating an issue sounds good, thanks!</p>", "type": "rendered"}, "created_on": "2019-11-15T16:27:45.424510+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-11-15T16:27:45.433192+00:00", "type": "pullrequest_comment", "id": 125035792}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.\r\n\r\nUPDATE: re-targeted to default.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "1dcb3d1ed413", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/1dcb3d1ed413.json"}, "html": {"href": "#!/osrf/sdformat/commits/1dcb3d1ed413"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "15c1f23788a8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/15c1f23788a8.json"}, "html": {"href": "#!/osrf/sdformat/commits/15c1f23788a8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-11-15T09:42:02.088786+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124963894.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124963894"}}, "parent": {"id": 124924537, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124924537.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124924537"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "that is still correct and refers to the xml in the `.convert` file. I was trying to refer to the xml that is to be converted, and that only the first of repeated elements would be mapped\n\nfor example some convert xml:\n\n~~~\n<map>\n  <from name='elemD'>\n    <value>d</value>\n    <value>D</value>\n  </from>\n  <to name='elemF'>\n    <value>f</value>\n    <value>F</value>\n  </to>\n</map>\n~~~\n\nthat operates on the following xml:\n\n~~~\n<elemC attrC='C'>\n  <elemD>D</elemD>\n  <elemD>D</elemD>\n  <elemD>d</elemD>\n  <elemD>d</elemD>\n</elemC>\n~~~\n\ncurrently it only maps the first element, so the output would be the following (all the original `elemD` elements plus one new `elemF` element):\n\n~~~\n<elemC attrC='C'>\n  <elemD>D</elemD>\n  <elemD>D</elemD>\n  <elemD>d</elemD>\n  <elemD>d</elemD>\n  <elemF>F</elemF>\n</elemC>\n~~~", "markup": "markdown", "html": "<p>that is still correct and refers to the xml in the <code>.convert</code> file. I was trying to refer to the xml that is to be converted, and that only the first of repeated elements would be mapped</p>\n<p>for example some convert xml:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;map&gt;</span>\n  <span class=\"nt\">&lt;from</span> <span class=\"na\">name=</span><span class=\"s\">&#39;elemD&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>d<span class=\"nt\">&lt;/value&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>D<span class=\"nt\">&lt;/value&gt;</span>\n  <span class=\"nt\">&lt;/from&gt;</span>\n  <span class=\"nt\">&lt;to</span> <span class=\"na\">name=</span><span class=\"s\">&#39;elemF&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>f<span class=\"nt\">&lt;/value&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>F<span class=\"nt\">&lt;/value&gt;</span>\n  <span class=\"nt\">&lt;/to&gt;</span>\n<span class=\"nt\">&lt;/map&gt;</span>\n</pre></div>\n\n\n<p>that operates on the following xml:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;elemC</span> <span class=\"na\">attrC=</span><span class=\"s\">&#39;C&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n<span class=\"nt\">&lt;/elemC&gt;</span>\n</pre></div>\n\n\n<p>currently it only maps the first element, so the output would be the following (all the original <code>elemD</code> elements plus one new <code>elemF</code> element):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;elemC</span> <span class=\"na\">attrC=</span><span class=\"s\">&#39;C&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemF&gt;</span>F<span class=\"nt\">&lt;/elemF&gt;</span>\n<span class=\"nt\">&lt;/elemC&gt;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-11-15T09:36:29.324040+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-11-15T09:36:29.335148+00:00", "type": "pullrequest_comment", "id": 124963894}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124924537.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124924537"}}, "parent": {"id": 124920617, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124920617.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124920617"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "> this implementation only maps the first value, and doesn't map sibling elements\n\nOh my understanding was different. The PR description says \"_If there are an equal number of //from/value and //to/value elements, then the map is constructed with the //from/value mapped to //to/value based on the order they are specified (1st with 1st, 2nd with 2nd, etc)\"_.", "markup": "markdown", "html": "<blockquote>\n<p>this implementation only maps the first value, and doesn't map sibling elements</p>\n</blockquote>\n<p>Oh my understanding was different. The PR description says \"<em>If there are an equal number of //from/value and //to/value elements, then the map is constructed with the //from/value mapped to //to/value based on the order they are specified (1st with 1st, 2nd with 2nd, etc)\"</em>.</p>", "type": "rendered"}, "created_on": "2019-11-15T02:10:11.409218+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-11-15T02:10:11.416380+00:00", "type": "pullrequest_comment", "id": 124924537}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124920617.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124920617"}}, "parent": {"id": 124916188, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124916188.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124916188"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "I just added some more thorough tests with repeated sibling elements like the following to test mapping multiple values:\n\n~~~\n<elemC attrC='C'>\n  <elemD>D</elemD>\n  <elemD>D</elemD>\n  <elemD>d</elemD>\n  <elemD>d</elemD>\n</elemC>\n~~~\n\nbut then I remembered that this implementation only maps the first value, and doesn't map sibling elements. Is it ok if I push that test to a branch and create an issue?", "markup": "markdown", "html": "<p>I just added some more thorough tests with repeated sibling elements like the following to test mapping multiple values:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;elemC</span> <span class=\"na\">attrC=</span><span class=\"s\">&#39;C&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n<span class=\"nt\">&lt;/elemC&gt;</span>\n</pre></div>\n\n\n<p>but then I remembered that this implementation only maps the first value, and doesn't map sibling elements. Is it ok if I push that test to a branch and create an issue?</p>", "type": "rendered"}, "created_on": "2019-11-15T00:47:33.626670+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-11-15T00:47:33.634956+00:00", "type": "pullrequest_comment", "id": 124920617}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124918822.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124918822"}}, "parent": {"id": 124915962, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124915962.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124915962"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "32b9e0366c71", "markup": "markdown", "html": "<p><a href=\"#!/osrf/sdformat/commits/32b9e0366c71\" rel=\"nofollow\" class=\"ap-connect-link\">32b9e0366c71</a></p>", "type": "rendered"}, "created_on": "2019-11-15T00:18:32.875001+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-11-15T00:18:32.895313+00:00", "type": "pullrequest_comment", "id": 124918822}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.\r\n\r\nUPDATE: re-targeted to default.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "4b03755ccf8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/4b03755ccf8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/4b03755ccf8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "32b9e0366c71", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/32b9e0366c71.json"}, "html": {"href": "#!/osrf/sdformat/commits/32b9e0366c71"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-11-15T00:18:28.745057+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"approval": {"date": "2019-11-14T23:39:27.989798+00:00", "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124916232.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124916232"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "LGTM, I just have a couple of suggestions for some more tests which I'll leave up to you.", "markup": "markdown", "html": "<p>LGTM, I just have a couple of suggestions for some more tests which I'll leave up to you.</p>", "type": "rendered"}, "created_on": "2019-11-14T23:39:26.140643+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-11-14T23:39:26.146756+00:00", "type": "pullrequest_comment", "id": 124916232}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124916188.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124916188"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "The tests are already pretty thorough, but I'll just point out that *I think* there isn't any test showing that mapping multiple values works for all the values. There isn't also a test with more `to` values than `from` values. Just details, not strictly necessary.", "markup": "markdown", "html": "<p>The tests are already pretty thorough, but I'll just point out that <em>I think</em> there isn't any test showing that mapping multiple values works for all the values. There isn't also a test with more <code>to</code> values than <code>from</code> values. Just details, not strictly necessary.</p>", "type": "rendered"}, "created_on": "2019-11-14T23:38:46.576680+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-11-14T23:38:46.583013+00:00", "type": "pullrequest_comment", "id": 124916188}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124915962.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124915962"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "This test could check that the element texts and the attribute values are still the same", "markup": "markdown", "html": "<p>This test could check that the element texts and the attribute values are still the same</p>", "type": "rendered"}, "created_on": "2019-11-14T23:35:47.228743+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-11-14T23:35:47.234238+00:00", "type": "pullrequest_comment", "id": 124915962}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"approval": {"date": "2019-11-13T22:06:35.984138+00:00", "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124511312.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124511312"}}, "parent": {"id": 124509560, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124509560.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124509560"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "I would be open to that", "markup": "markdown", "html": "<p>I would be open to that</p>", "type": "rendered"}, "created_on": "2019-11-12T20:58:19.819477+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-11-12T20:58:19.831965+00:00", "type": "pullrequest_comment", "id": 124511312}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124509560.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124509560"}}, "parent": {"id": 124501082, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124501082.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124501082"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "I like the new approach. Are you proposing we change the syntax for the other operators as well at some point?", "markup": "markdown", "html": "<p>I like the new approach. Are you proposing we change the syntax for the other operators as well at some point?</p>", "type": "rendered"}, "created_on": "2019-11-12T20:44:43.962847+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2019-11-12T20:44:43.973772+00:00", "type": "pullrequest_comment", "id": 124509560}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124501082.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124501082"}}, "parent": {"id": 124480479, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124480479.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124480479"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "Yeah, the syntax is different than the `Move` operator and inspired by XPath, probably because I spent some time making an xslt for converting the `//axis/use_parent_model_frame` to `//axis/xyz/@expressed_in`. It was easier for me to implement this function using XPath syntax, and it is different, but we invented all the converter syntax anyway, so I thought we could experiment with a different approach.\n\nIf we decide to change it, it will take a few hours because we'll have to change the tests in addition to the code.", "markup": "markdown", "html": "<p>Yeah, the syntax is different than the <code>Move</code> operator and inspired by XPath, probably because I spent some time making an xslt for converting the <code>//axis/use_parent_model_frame</code> to <code>//axis/xyz/@expressed_in</code>. It was easier for me to implement this function using XPath syntax, and it is different, but we invented all the converter syntax anyway, so I thought we could experiment with a different approach.</p>\n<p>If we decide to change it, it will take a few hours because we'll have to change the tests in addition to the code.</p>", "type": "rendered"}, "created_on": "2019-11-12T19:39:32.742836+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-11-12T19:39:32.754166+00:00", "type": "pullrequest_comment", "id": 124501082}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124481322.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124481322"}}, "parent": {"id": 124480479, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124480479.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124480479"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "The `@` token is also used for attributes in the XPATH like syntax, but all other existing operators, such as `Move` and `Rename`, use the attributes `element` and `attribute` in the `from` and `to` tags.", "markup": "markdown", "html": "<p>The <code>@</code> token is also used for attributes in the XPATH like syntax, but all other existing operators, such as <code>Move</code> and <code>Rename</code>, use the attributes <code>element</code> and <code>attribute</code> in the <code>from</code> and <code>to</code> tags.</p>", "type": "rendered"}, "created_on": "2019-11-12T17:19:09.664411+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2019-11-12T17:19:09.675240+00:00", "type": "pullrequest_comment", "id": 124481322}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580/comments/124480479.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580/_/diff#comment-124480479"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}, "content": {"raw": "Although I like the XPATH like syntax, it seems like a departure from the syntax used elsewhere in the converter. For example, the delimiter between parent and child elements in the `Move` operator is `::` instead of `/`.", "markup": "markdown", "html": "<p>Although I like the XPATH like syntax, it seems like a departure from the syntax used elsewhere in the converter. For example, the delimiter between parent and child elements in the <code>Move</code> operator is <code>::</code> instead of <code>/</code>.</p>", "type": "rendered"}, "created_on": "2019-11-12T17:14:18.221346+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2019-11-12T17:14:18.227068+00:00", "type": "pullrequest_comment", "id": 124480479}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.\r\n\r\nUPDATE: re-targeted to default.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "4b03755ccf8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/4b03755ccf8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/4b03755ccf8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "865ec13fa80e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/865ec13fa80e.json"}, "html": {"href": "#!/osrf/sdformat/commits/865ec13fa80e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-11-09T00:17:52.014319+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.\r\n\r\nUPDATE: re-targeted to default.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "4b03755ccf8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/4b03755ccf8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/4b03755ccf8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "94db0b715f07", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/94db0b715f07.json"}, "html": {"href": "#!/osrf/sdformat/commits/94db0b715f07"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-11-09T00:16:57.002175+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.\r\n\r\nUPDATE: re-targeted to default.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "4b03755ccf8d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/4b03755ccf8d.json"}, "html": {"href": "#!/osrf/sdformat/commits/4b03755ccf8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "94db0b715f07", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/94db0b715f07.json"}, "html": {"href": "#!/osrf/sdformat/commits/94db0b715f07"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-11-09T00:16:56.961276+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "425a6126c609", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/425a6126c609.json"}, "html": {"href": "#!/osrf/sdformat/commits/425a6126c609"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "94db0b715f07", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/94db0b715f07.json"}, "html": {"href": "#!/osrf/sdformat/commits/94db0b715f07"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-11-09T00:16:37.816927+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "174bb0a402e0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/174bb0a402e0.json"}, "html": {"href": "#!/osrf/sdformat/commits/174bb0a402e0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1232290326bb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/1232290326bb.json"}, "html": {"href": "#!/osrf/sdformat/commits/1232290326bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-10-22T03:54:25.831489+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "b8af9d84a2be", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/b8af9d84a2be.json"}, "html": {"href": "#!/osrf/sdformat/commits/b8af9d84a2be"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "81ddfa3300fc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/81ddfa3300fc.json"}, "html": {"href": "#!/osrf/sdformat/commits/81ddfa3300fc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-10-22T00:38:49.795576+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "2077d3d18a67", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/2077d3d18a67.json"}, "html": {"href": "#!/osrf/sdformat/commits/2077d3d18a67"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cde9f81f6551", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/cde9f81f6551.json"}, "html": {"href": "#!/osrf/sdformat/commits/cde9f81f6551"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-10-18T23:06:48.856032+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}, {"update": {"description": "Part of the [SDF frame semantics proposal](http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&#replace-joint-axis-use_parent_model_frame-with-joint-axis-xyz-expressed_in) is replacing the `//axis/use_parent_model_frame` element with an attribute `//axis/@expressed_in`. The migration script should map `//axis[use_parent_model_frame='true'` to `//axis[@expressed_in='__model__'`, but there are no mechanisms in the `sdf::Converter` class to support this. So this pull request adds the `Converter::Map` function that reads `<map>` elements that specifies a map of fixed input values to fixed output values.\r\n\r\nFor example, a portion of the `<convert>` specification for the `//use_parent_model_frame` migration is as follows:\r\n\r\n~~~\r\n<convert name=\"model\">\r\n  <convert name=\"joint\">\r\n    <convert name=\"axis\">\r\n      <map>\r\n        <from name=\"use_parent_model_frame\">\r\n          <value>true</value>\r\n          <value>True</value>\r\n          <value>TRUE</value>\r\n          <value>1</value>\r\n        </from>\r\n        <to name=\"xyz/@expressed_in\">\r\n          <value>__model__</value>\r\n        </to>\r\n      </map>\r\n      <remove element=\"use_parent_model_frame\"/>\r\n    </convert>\r\n  </convert>\r\n</convert>\r\n~~~\r\n\r\nThe `//convert/map/from` element has a `@name` attribute that specifies the name of the source to convert from. The name is a little like XPATH, with `/` as a delimiter between parent and child elements, and `@` indicating an attribute. The `//from/value` elements specify input values that will trigger an output value to be created.\r\n\r\nThe `//convert/map/to` element also has a `@name` attribute that specifies the destination of the map operation, with the same interpretation of `/` and `@`. The `//to/value` elements specify output values corresponding to a `//from/value` input.\r\n\r\nIf there are an equal number of `//from/value` and `//to/value` elements, then the map is constructed with the `//from/value` mapped to `//to/value` based on the order they are specified (1st with 1st, 2nd with 2nd, etc).\r\n\r\nIf there are fewer `//from/value` elements than `//to/value` elements, then the excess `//to/value` elements are ignored, and the matching `//to/value` elements are mapped 1:1 with the available `//from/value` elements.\r\n\r\nIf there are more `//from/value` elements than `//to/value` elements, then the excess `//from/value` elements are mapped to the last `//to/value` element. This is the case for the `//use_parent_model_frame` example above in which all 4 `//from` values are mapped to a single `//to` value.", "title": "Converter: add `<map>` element for converting fixed values", "destination": {"commit": {"hash": "2077d3d18a67", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/2077d3d18a67.json"}, "html": {"href": "#!/osrf/sdformat/commits/2077d3d18a67"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cde9f81f6551", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/sdformat/commit/cde9f81f6551.json"}, "html": {"href": "#!/osrf/sdformat/commits/cde9f81f6551"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "branch": {"name": "converter_map"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-10-18T23:06:48.811685+00:00"}, "pull_request": {"type": "pullrequest", "id": 580, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/580.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/580"}}, "title": "Converter: add `<map>` element for converting fixed values"}}]}