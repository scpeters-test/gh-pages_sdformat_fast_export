{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/411/comments/55961300.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/411/_/diff#comment-55961300"}}, "parent": {"id": 55959397, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/411/comments/55959397.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/411/_/diff#comment-55959397"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 411, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/411.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/411"}}, "title": "Add inertial parsing"}, "content": {"raw": "Not loading a model on an error is a known problem that has to be addressed in a separate PR. We need a mechanism to specify the severity of an error. Right now all errors are considered fatal.\n\nCan you disable the test or comment it out, and then we can re-enable it when error handling is improved?", "markup": "markdown", "html": "<p>Not loading a model on an error is a known problem that has to be addressed in a separate PR. We need a mechanism to specify the severity of an error. Right now all errors are considered fatal.</p>\n<p>Can you disable the test or comment it out, and then we can re-enable it when error handling is improved?</p>", "type": "rendered"}, "created_on": "2018-02-09T17:51:58.077624+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-02-09T17:51:58.080981+00:00", "type": "pullrequest_comment", "id": 55961300}