{"pagelen": 100, "previous": "data/repositories/osrf/sdformat/issues_page=2.json", "values": [{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/201/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/201.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/201/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/201/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/201/add-point-object-to-sdf-format"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/201/vote"}}, "reporter": null, "title": "Add Point object to SDF format", "component": null, "votes": 0, "watches": null, "content": {"raw": "Previously E-mailed May 15, 2017 to Nate Koening (OSRF) from Paul Mitiguy. \r\n\r\nFrom 2017 meetings about SDF format/parsers with input from Nate Koening (OSRF), Adam Leeper (Google), Terry Denery (Mathworks), Paul Mitiguy (TRI/Stanford).\r\n\r\nIf this has not already been done, \r\nplease add a Point object (described below) as a physical object in SDF format.  \r\n\r\nA point is a 0-dimensional object having translational properties, e.g., \r\nposition from another point, velocity, acceleration, jerk, and force.\r\n A point does not have rotational properties, e.g., a point does not have orientation or  angular velocity. \r\n\r\nA point may or may not be part of (physically welded to) a rigid body\r\nIf part of a rigid body, it must be apparent in the .sdf format.  \r\n\r\nPoints may be the origin of a frame, the center of mass of a body,  a point on a rigid body where a force is applied, or a convenience for tracking out the path (trajectory) of contact of an object with another object.  \r\n\r\nNote: A point may represent a computed location such as the center of mass of a system of bodies and/or particles and may be transient such as a contact point between two bodies.", "markup": "markdown", "html": "<p>Previously E-mailed May 15, 2017 to Nate Koening (OSRF) from Paul Mitiguy. </p>\n<p>From 2017 meetings about SDF format/parsers with input from Nate Koening (OSRF), Adam Leeper (Google), Terry Denery (Mathworks), Paul Mitiguy (TRI/Stanford).</p>\n<p>If this has not already been done, \nplease add a Point object (described below) as a physical object in SDF format.  </p>\n<p>A point is a 0-dimensional object having translational properties, e.g., \nposition from another point, velocity, acceleration, jerk, and force.\n A point does not have rotational properties, e.g., a point does not have orientation or  angular velocity. </p>\n<p>A point may or may not be part of (physically welded to) a rigid body\nIf part of a rigid body, it must be apparent in the .sdf format.  </p>\n<p>Points may be the origin of a frame, the center of mass of a body,  a point on a rigid body where a force is applied, or a convenience for tracking out the path (trajectory) of contact of an object with another object.  </p>\n<p>Note: A point may represent a computed location such as the center of mass of a system of bodies and/or particles and may be transient such as a contact point between two bodies.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2018-09-10T20:40:03.644177+00:00", "milestone": null, "updated_on": "2018-09-10T20:40:03.644177+00:00", "type": "issue", "id": 201}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/202/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/202.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/202/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/202/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/202/bad_any_cast-after-element-getany-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/202/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "bad_any_cast after Element::GetAny with gz11 on homebrew", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There are [two failing tests](https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/) for the `gz11` branch on macOS mojave.\r\n\r\n* https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/(root)/SDF/UpdateElement/\r\n* https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/(root)/SDF/GetAny/\r\n\r\nI started by investigating the `GetAny` test failure from `UNIT_SDF_TEST`, which failed at [line 418](#!/osrf/sdformat/src/c8c23c1dc382d2eccb814bc3a857098048f58e61/src/SDF_TEST.cc#lines-418), which occurs when a `std::bad_any_cast` is thrown after calling `std::any_cast<ignition::math::Pose3d>(anyValue)`. I added some print statements to confirm that `anyValue` should have the right type:\r\n\r\n~~~\r\ndiff -r c8c23c1dc382 src/SDF_TEST.cc\r\n--- a/src/SDF_TEST.cc\tFri Sep 14 00:49:58 2018 +0000\r\n+++ b/src/SDF_TEST.cc\tThu Sep 13 17:59:35 2018 -0700\r\n@@ -410,6 +410,13 @@\r\n     std::any anyValue = poseElem->GetAny();\r\n     try\r\n     {\r\n+      using Pose = ignition::math::Pose3d;\r\n+      std::cerr << typeid(Pose).name()\r\n+                << \", \" << typeid(Pose).hash_code()\r\n+                << std::endl;\r\n+      std::cerr << anyValue.type().name()\r\n+                << \", \" << anyValue.type().hash_code()\r\n+                << std::endl;\r\n       EXPECT_EQ(std::any_cast<ignition::math::Pose3d>(anyValue),\r\n           ignition::math::Pose3d(0, 1, 2, 0, 0, 0));\r\n     }\r\n~~~\r\n\r\nwhich gives the following output, showing that the types have matching names, but different `hash_code`s.\r\n\r\n~~~\r\n[ RUN      ] SDF.GetAny\r\nN8ignition4math2v65Pose3IdEE, 4381304960\r\nN8ignition4math2v65Pose3IdEE, 4382335968\r\n/Users/jenkins/workspace/sdformat-ci-pr_any-homebrew-amd64-mojave/sdformat/src/SDF_TEST.cc:425: Failure\r\nFailed\r\n[  FAILED  ] SDF.GetAny (57 ms)\r\n~~~\r\n\r\nAfter some googling, I found an [issue with clang](https://bugs.llvm.org/show_bug.cgi?id=38485) with a reproducible test case (that was originally reported on [stackoverflow](https://stackoverflow.com/questions/51693605/clang-compiled-program-throws-stdbad-any-cast-during-stdany-cast)). I think it's an issue with `std::any` in clang, because the reproducible test case works with gcc or if you switch from `std::any` to `boost::any`.\r\n\r\nI think we see the issue because `ignition::math::Pose3d` is a template type, and it may be seeing different versions of of that type from different shared libraries and not recognizing that they are the same. I have requested a llvm.org account so that I can comment on that issue.", "markup": "markdown", "html": "<p>There are <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/\" rel=\"nofollow\">two failing tests</a> for the <code>gz11</code> branch on macOS mojave.</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/(root)/SDF/UpdateElement/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/(root)/SDF/UpdateElement/</a></li>\n<li><a href=\"https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/(root)/SDF/GetAny/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/sdformat-ci-pr_any-homebrew-amd64-mojave/1/testReport/(root)/SDF/GetAny/</a></li>\n</ul>\n<p>I started by investigating the <code>GetAny</code> test failure from <code>UNIT_SDF_TEST</code>, which failed at <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/c8c23c1dc382d2eccb814bc3a857098048f58e61/src/SDF_TEST.cc#lines-418\" rel=\"nofollow\">line 418</a>, which occurs when a <code>std::bad_any_cast</code> is thrown after calling <code>std::any_cast&lt;ignition::math::Pose3d&gt;(anyValue)</code>. I added some print statements to confirm that <code>anyValue</code> should have the right type:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r c8c23c1dc382 src/SDF_TEST.cc</span>\n<span class=\"gd\">--- a/src/SDF_TEST.cc   Fri Sep 14 00:49:58 2018 +0000</span>\n<span class=\"gi\">+++ b/src/SDF_TEST.cc   Thu Sep 13 17:59:35 2018 -0700</span>\n<span class=\"gu\">@@ -410,6 +410,13 @@</span>\n     std::any anyValue = poseElem-&gt;GetAny();\n     try\n     {\n<span class=\"gi\">+      using Pose = ignition::math::Pose3d;</span>\n<span class=\"gi\">+      std::cerr &lt;&lt; typeid(Pose).name()</span>\n<span class=\"gi\">+                &lt;&lt; &quot;, &quot; &lt;&lt; typeid(Pose).hash_code()</span>\n<span class=\"gi\">+                &lt;&lt; std::endl;</span>\n<span class=\"gi\">+      std::cerr &lt;&lt; anyValue.type().name()</span>\n<span class=\"gi\">+                &lt;&lt; &quot;, &quot; &lt;&lt; anyValue.type().hash_code()</span>\n<span class=\"gi\">+                &lt;&lt; std::endl;</span>\n       EXPECT_EQ(std::any_cast&lt;ignition::math::Pose3d&gt;(anyValue),\n           ignition::math::Pose3d(0, 1, 2, 0, 0, 0));\n     }\n</pre></div>\n\n\n<p>which gives the following output, showing that the types have matching names, but different <code>hash_code</code>s.</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] SDF.GetAny\nN8ignition4math2v65Pose3IdEE, 4381304960\nN8ignition4math2v65Pose3IdEE, 4382335968\n/Users/jenkins/workspace/sdformat-ci-pr_any-homebrew-amd64-mojave/sdformat/src/SDF_TEST.cc:425: Failure\nFailed\n[  FAILED  ] SDF.GetAny (57 ms)\n</pre></div>\n\n\n<p>After some googling, I found an <a data-is-external-link=\"true\" href=\"https://bugs.llvm.org/show_bug.cgi?id=38485\" rel=\"nofollow\">issue with clang</a> with a reproducible test case (that was originally reported on <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/questions/51693605/clang-compiled-program-throws-stdbad-any-cast-during-stdany-cast\" rel=\"nofollow\">stackoverflow</a>). I think it's an issue with <code>std::any</code> in clang, because the reproducible test case works with gcc or if you switch from <code>std::any</code> to <code>boost::any</code>.</p>\n<p>I think we see the issue because <code>ignition::math::Pose3d</code> is a template type, and it may be seeing different versions of of that type from different shared libraries and not recognizing that they are the same. I have requested a llvm.org account so that I can comment on that issue.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-09-14T01:12:33.564021+00:00", "milestone": null, "updated_on": "2019-03-06T06:33:34.881957+00:00", "type": "issue", "id": 202}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/203/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/203.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/203/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/203/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/203/new-sdformat6-release"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/203/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "New sdformat6 release", "component": null, "votes": 0, "watches": 2, "content": {"raw": "There have been quite a few changes to the sdf6 branch since the 6.0.0 release:\r\n\r\n* #!/osrf/sdformat/branches/compare/sdf6%0Dsdformat6_6.0.0\r\n\r\nWe need some of these changes for the following gazebo pull request:\r\n\r\n* https://bitbucket.org/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/diff\r\n\r\nI think we should make a new sdformat 6.1 release.\r\n\r\ncc @azeey @\\_jrivero_", "markup": "markdown", "html": "<p>There have been quite a few changes to the sdf6 branch since the 6.0.0 release:</p>\n<ul>\n<li><a href=\"#!/osrf/sdformat/branches/compare/sdf6%0Dsdformat6_6.0.0\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/branches/compare/sdf6%0Dsdformat6_6.0.0</a></li>\n</ul>\n<p>We need some of these changes for the following gazebo pull request:</p>\n<ul>\n<li><a href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/diff\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/pull-requests/2956/dart-heightmap-with-bullet-and-ode/diff</a></li>\n</ul>\n<p>I think we should make a new sdformat 6.1 release.</p>\n<p>cc @azeey @_jrivero_</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-09-29T10:17:31.369958+00:00", "milestone": null, "updated_on": "2018-11-09T23:26:50.387996+00:00", "type": "issue", "id": 203}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/204/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/204.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/204/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/204/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/204/joint-support-specifying-frames-in-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/204/vote"}}, "reporter": {"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}, "title": "joint: Support specifying frames in `<child>` and `<parent>`", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nAt present, the `<child>` and `<parent>` elements of `<joint>` are constrained to be links:\r\nhttp://sdformat.org/spec?ver=1.6&elem=joint#joint_parent\r\n\r\nIt would be excellent if the specification permitted using frames. Per #200, if a link creates an implicit frame, then this change will be backwards-compatible at a specification level.\r\n\r\n# Motivation\r\n\r\nWhen specifying a world in SDF, it would be nice to specify joints with more semantics than just a link and an offset; e.g. if I want to weld a mug to the top of a table, I can specify two frames (completely invariant of the model frames) on the mug and table, and then just weld those two frames together. For a robot with revolute joints, you can embed better semantics when assembling the robot.\r\n\r\nI am willing to provide a draft change to the spec, and possibly to the API as well to accommodate this change while considering backwards compatibility.\r\n\r\n# Describe alternatives you've considered\r\n\r\nTTBOMK, the alternative is to use the present state, which is to manually compute the kinematics; while feasible, this is brittle due to numerics. Xacros / ruby templates shouldn't be necessary for conveniently joining things.\r\n\r\n# Additional context\r\n\r\nIf this proposal is accepted, I would like to ensure that this feature is implemented in Drake here:\r\nhttps://drake.mit.edu/doxygen_cxx/namespacedrake_1_1multibody_1_1parsing.html#a3e9bff0197c6c7f86f9ff6f8854def53\r\nhttps://drake.mit.edu/pydrake/pydrake.multibody.multibody_tree.parsing.html#pydrake.multibody.multibody_tree.parsing.AddModelFromSdfFile\r\nDownstream issue: https://github.com/RobotLocomotion/drake/issues/9910\r\n\r\n\\cc @nkoenig", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>At present, the <code>&lt;child&gt;</code> and <code>&lt;parent&gt;</code> elements of <code>&lt;joint&gt;</code> are constrained to be links:\n<a href=\"http://sdformat.org/spec?ver=1.6&amp;elem=joint#joint_parent\" rel=\"nofollow\" class=\"ap-connect-link\">http://sdformat.org/spec?ver=1.6&amp;elem=joint#joint_parent</a></p>\n<p>It would be excellent if the specification permitted using frames. Per <a href=\"#!/osrf/sdformat/issues/200/support-multiple-frames-in-a-single-parent\" rel=\"nofollow\" title=\"&lt;frame/&gt;: Support multiple frames in a single parent? Intended scope of frames? Use link names as frames?\" class=\"ap-connect-link\"><s>#200</s></a>, if a link creates an implicit frame, then this change will be backwards-compatible at a specification level.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>When specifying a world in SDF, it would be nice to specify joints with more semantics than just a link and an offset; e.g. if I want to weld a mug to the top of a table, I can specify two frames (completely invariant of the model frames) on the mug and table, and then just weld those two frames together. For a robot with revolute joints, you can embed better semantics when assembling the robot.</p>\n<p>I am willing to provide a draft change to the spec, and possibly to the API as well to accommodate this change while considering backwards compatibility.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>TTBOMK, the alternative is to use the present state, which is to manually compute the kinematics; while feasible, this is brittle due to numerics. Xacros / ruby templates shouldn't be necessary for conveniently joining things.</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>\n<p>If this proposal is accepted, I would like to ensure that this feature is implemented in Drake here:\n<a href=\"https://drake.mit.edu/doxygen_cxx/namespacedrake_1_1multibody_1_1parsing.html#a3e9bff0197c6c7f86f9ff6f8854def53\" rel=\"nofollow\" class=\"ap-connect-link\">https://drake.mit.edu/doxygen_cxx/namespacedrake_1_1multibody_1_1parsing.html#a3e9bff0197c6c7f86f9ff6f8854def53</a>\n<a href=\"https://drake.mit.edu/pydrake/pydrake.multibody.multibody_tree.parsing.html#pydrake.multibody.multibody_tree.parsing.AddModelFromSdfFile\" rel=\"nofollow\" class=\"ap-connect-link\">https://drake.mit.edu/pydrake/pydrake.multibody.multibody_tree.parsing.html#pydrake.multibody.multibody_tree.parsing.AddModelFromSdfFile</a>\nDownstream issue: <a href=\"https://github.com/RobotLocomotion/drake/issues/9910\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/RobotLocomotion/drake/issues/9910</a></p>\n<p>\\cc @nkoenig</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-02T15:15:37.553553+00:00", "milestone": null, "updated_on": "2018-11-02T15:17:51.045731+00:00", "type": "issue", "id": 204}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/205/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/205.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/205/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/205/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/205/pass-parameter-to-plugin-from-parent-model"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/205/vote"}}, "reporter": {"display_name": "Lorenzo Rapetti", "uuid": "{163ad6dd-2725-4cbb-9d5f-7078d8891005}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B163ad6dd-2725-4cbb-9d5f-7078d8891005%7D"}, "html": {"href": "https://bitbucket.org/%7B163ad6dd-2725-4cbb-9d5f-7078d8891005%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a42e8a6e30920121a4955f5/eb43c756-42e6-493a-a268-482525c964d7/128"}}, "nickname": "lorrapetti", "type": "user", "account_id": "5a42e8a6e30920121a4955f5"}, "title": "Pass parameter to plugin from parent model", "component": null, "votes": 1, "watches": 2, "content": {"raw": "When using nested models, I have the necessity of changing the parameters of a plugin directly from the parent model SDF without changing the SDF of the model that is included (e.g. if I want multiple instances of the same model but with different parameters).\r\n\r\nA possible solution is having a plugin that search for the configuration not only in the `plugin SDF`,  but also looking a the parent `model SDF` using [GetParent()](http://osrf-distributions.s3.amazonaws.com/sdformat/api/3.0/classsdf_1_1Element.html#a38fd0c101a51816d5ef5a9e179ae4525):  \r\ne.g.\r\n\r\n**original model**\r\n```xml\r\n<model name=\"myModel\">\r\n  <plugin name=\"myPlugin\" filename=\"myPlugin.so\">\r\n    <PluginConfiguration> ... </PluginConfiguration>\r\n  </plugin>\r\n  ...\r\n</model>\r\n```\r\n\r\n**overritten model**\r\n```xml\r\n<model name=\"overritenModel\">\r\n  <configurationOverride plugin_name='myPlugin'> ... </configurationOverride>\r\n  <include>\r\n    <uri>model://myModel</uri>\r\n  </include>\r\n</model>\r\n```\r\nHowever, this is not feasible since it is not possible to add a custom SDF <element> to a model. \r\nA custom SDF <element> can be add only in a <plugin> (thanks to special class defined in [plugin.sdf](#!/osrf/sdformat/src/d5372e7cf352d09586f6e08d60a624597f2bd4c0/sdf/1.6/plugin.sdf?at=sdf6&fileviewer=file-view-default#plugin.sdf-10)), so at the moment the solution works only using a dummy plugin that doesn't do anything:  \r\n**overritten model**\r\n```xml\r\n<model name=\"overritenModel\">\r\n  <plugin name='override_plugin' filename='dummy_plugin.so'>\r\n    <configurationOverride plugin_name='myPlugin'> ... </configurationOverride>\r\n  </plugin>\r\n  <include>\r\n    <uri>model://myModel</uri>\r\n  </include>\r\n</model>\r\n```\r\n\r\nIt would be great to have a clean way to pass parameters to a plugin in a nested model. A good way might be having those parameters as element of the <model>, and reading them from the plugin.\r\n\r\n(original discussion in gazebo-yarp-plugin at https://github.com/robotology/gazebo-yarp-plugins/issues/392)", "markup": "markdown", "html": "<p>When using nested models, I have the necessity of changing the parameters of a plugin directly from the parent model SDF without changing the SDF of the model that is included (e.g. if I want multiple instances of the same model but with different parameters).</p>\n<p>A possible solution is having a plugin that search for the configuration not only in the <code>plugin SDF</code>,  but also looking a the parent <code>model SDF</code> using <a data-is-external-link=\"true\" href=\"http://osrf-distributions.s3.amazonaws.com/sdformat/api/3.0/classsdf_1_1Element.html#a38fd0c101a51816d5ef5a9e179ae4525\" rel=\"nofollow\">GetParent()</a>:<br />\ne.g.</p>\n<p><strong>original model</strong></p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;myModel&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;myPlugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;myPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;PluginConfiguration&gt;</span> ... <span class=\"nt\">&lt;/PluginConfiguration&gt;</span>\n  <span class=\"nt\">&lt;/plugin&gt;</span>\n  ...\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p><strong>overritten model</strong></p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;overritenModel&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;configurationOverride</span> <span class=\"na\">plugin_name=</span><span class=\"s\">&#39;myPlugin&#39;</span><span class=\"nt\">&gt;</span> ... <span class=\"nt\">&lt;/configurationOverride&gt;</span>\n  <span class=\"nt\">&lt;include&gt;</span>\n    <span class=\"nt\">&lt;uri&gt;</span>model://myModel<span class=\"nt\">&lt;/uri&gt;</span>\n  <span class=\"nt\">&lt;/include&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>However, this is not feasible since it is not possible to add a custom SDF &lt;element&gt; to a model. \nA custom SDF &lt;element&gt; can be add only in a &lt;plugin&gt; (thanks to special class defined in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/d5372e7cf352d09586f6e08d60a624597f2bd4c0/sdf/1.6/plugin.sdf?at=sdf6&amp;fileviewer=file-view-default#plugin.sdf-10\" rel=\"nofollow\">plugin.sdf</a>), so at the moment the solution works only using a dummy plugin that doesn't do anything:<br />\n<strong>overritten model</strong></p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;overritenModel&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&#39;override_plugin&#39;</span> <span class=\"na\">filename=</span><span class=\"s\">&#39;dummy_plugin.so&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;configurationOverride</span> <span class=\"na\">plugin_name=</span><span class=\"s\">&#39;myPlugin&#39;</span><span class=\"nt\">&gt;</span> ... <span class=\"nt\">&lt;/configurationOverride&gt;</span>\n  <span class=\"nt\">&lt;/plugin&gt;</span>\n  <span class=\"nt\">&lt;include&gt;</span>\n    <span class=\"nt\">&lt;uri&gt;</span>model://myModel<span class=\"nt\">&lt;/uri&gt;</span>\n  <span class=\"nt\">&lt;/include&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>It would be great to have a clean way to pass parameters to a plugin in a nested model. A good way might be having those parameters as element of the &lt;model&gt;, and reading them from the plugin.</p>\n<p>(original discussion in gazebo-yarp-plugin at <a href=\"https://github.com/robotology/gazebo-yarp-plugins/issues/392\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/robotology/gazebo-yarp-plugins/issues/392</a>)</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-05T14:03:50.647799+00:00", "milestone": null, "updated_on": "2018-11-05T14:05:32.291904+00:00", "type": "issue", "id": 205}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/206/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/206.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/206/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/206/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/206/getelementcount-for-specific-element-name"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/206/vote"}}, "reporter": {"display_name": "Lorenzo Rapetti", "uuid": "{163ad6dd-2725-4cbb-9d5f-7078d8891005}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B163ad6dd-2725-4cbb-9d5f-7078d8891005%7D"}, "html": {"href": "https://bitbucket.org/%7B163ad6dd-2725-4cbb-9d5f-7078d8891005%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a42e8a6e30920121a4955f5/eb43c756-42e6-493a-a268-482525c964d7/128"}}, "nickname": "lorrapetti", "type": "user", "account_id": "5a42e8a6e30920121a4955f5"}, "title": "GetElementCount for specific element name", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Given that it is allowed to have multiple elements with the same name in a plugin, I think a function like `GetElementCount(<element_name>)` returning the number of element with a given name can be helpful.\r\n\r\nFor example when multiple elements with the same name are present in a plugin, using `GetElement(<element_name>)` returns a pointer to the first element found and you have no notice on the presence of other element with the same name (so sometimes it may be useful to check the presence of multiple elements with the given name).", "markup": "markdown", "html": "<p>Given that it is allowed to have multiple elements with the same name in a plugin, I think a function like <code>GetElementCount(&lt;element_name&gt;)</code> returning the number of element with a given name can be helpful.</p>\n<p>For example when multiple elements with the same name are present in a plugin, using <code>GetElement(&lt;element_name&gt;)</code> returns a pointer to the first element found and you have no notice on the presence of other element with the same name (so sometimes it may be useful to check the presence of multiple elements with the given name).</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-08T16:53:26.413656+00:00", "milestone": null, "updated_on": "2018-11-08T16:53:26.413656+00:00", "type": "issue", "id": 206}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/207/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/207.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/207/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/207/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/207/error-when-starting-ign-gazebo-if"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/207/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "Error when starting ign-gazebo if LC_NUMERIC in set to a locale with comma as a decimal separator", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* [x] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nRemake of #!/osrf/sdformat/issues/60/error-when-starting-gazebo-if-lc_numeric . : )\r\n\r\nI recently tried to test the work in progress version of ign-gazebo, and on my system I got a locale-related error (similar to\r\n#!/osrf/sdformat/issues/60/error-when-starting-gazebo-if-lc_numeric  , https://github.com/ros/urdfdom/issues/98 \r\nand https://github.com/ros/urdfdom/issues/98). \r\n\r\n# Steps to Reproduce\r\n\r\nLaunch `ign-gazebo` with a locale in  which the decimal separator is not `.`: \r\n~~~\r\nLC_NUMERIC=it_IT ign-gazebo\r\n~~~ \r\n\r\n**Expected behavior:**  \r\nIf launched with the `C` locale, `ign-gazebo` start correctly:\r\n~~~\r\nstraversaro@iiticublap103:~/src/gazebo-superbuild/build-ign-gcc-8/install/bin$ LC_ALL=\"C\" ./ign-gazebo --verbose 3\r\n[Msg] Ignition Gazebo v0.1.0~pre1\r\n[GUI] [Msg] Loading config [/home/straversaro/src/gazebo-superbuild/build-ign-gcc-8/install/share/ignition/gazebo0/gui/gui.config]\r\n[GUI] [Msg] World [default] initialized with [default_physics] physics profile.\r\n[GUI] [Msg] Loading plugin [Scene3D]\r\n[GUI] [Msg] Added plugin [3D View] to main window\r\n[GUI] [Msg] Loading plugin [WorldControl]\r\n[GUI] [Msg] Added plugin [World control] to main window\r\n[GUI] [Msg] Loading plugin [WorldStats]\r\n[GUI] [Msg] Added plugin [World stats] to main window\r\n[GUI] [Msg] Serving scene information on [/world/default/scene/info]\r\n[GUI] [Msg] Serving scene graph on [/world/default/scene/graph]\r\n[GUI] [Msg] Publishing pose messages on [/world/default/pose/info]\r\n[GUI] [Msg] Loading plugin [ignition-rendering1-ogre]\r\n~~~\r\n\r\n**Actual behavior:**\r\n\r\n~~~\r\nstraversaro@iiticublap103:~/src/gazebo-superbuild/build-ign-gcc-8/install/bin$ ./ign-gazebo --verbose 3\r\n[Msg] Ignition Gazebo v0.1.0~pre1\r\n[GUI] [Msg] Loading config [/home/straversaro/src/gazebo-superbuild/build-ign-gcc-8/install/share/ignition/gazebo0/gui/gui.config]\r\nError [Param.cc:395] Invalid argument. Unable to set value [.1 ] for key[near].\r\nException [Param.cc:44] SDF ASSERTION                     \r\nInvalid parameter\r\nIn function       : Param\r\nAssert expression : this->ValueFromString(_default)\r\nterminate called after throwing an instance of 'sdf::v8::AssertionInternalError'\r\nAborted (core dumped)\r\n~~~  \r\n\r\n**Reproduces how often:** \r\n\r\nEverytime. \r\n\r\n# Versions\r\n\r\nUbuntu 18.04\r\nsdformat branch : `gz11` \r\n\r\n# Additional Information\r\nChecking the backtrace, it seems that the call sequence is: \r\nsdf::Element::AddValue --> sdf::Element::CreateParam --> sdf::Param::Param --> sdf::Param::ValueFromString\r\n\r\nA related commit is #!/osrf/sdformat/commits/f6af03cf3a63d3a6dd1492a2f6031475625a71cd , \r\nbut I am not sure why I never experienced this,  as `template<typename T> void Param::Init(const std::string &_value)` \r\nmethod was prone to this locale error as well.\r\n\r\nA proper solution could be to substitute calls to `str::stod` with a locale-safe custom function as done in \r\nhttps://github.com/ros/urdfdom_headers/pull/42/files . An alternative, for the branch of SDFormat that support C++17\r\nwould be to use [`std::from_chars`](https://en.cppreference.com/w/cpp/utility/from_chars). Unfortunately, not all the strings\r\nthat represent a valid XML floating point number are valid inputs to `std::from_chars` (for example, `+1.0` is not a valid input to\r\n`std::to_chars`), so even this is not a trivial solution.", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[x] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>Remake of <a href=\"#!/osrf/sdformat/issues/60/error-when-starting-gazebo-if-lc_numeric\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/issues/60/error-when-starting-gazebo-if-lc_numeric</a> . : )</p>\n<p>I recently tried to test the work in progress version of ign-gazebo, and on my system I got a locale-related error (similar to\n<a href=\"#!/osrf/sdformat/issues/60/error-when-starting-gazebo-if-lc_numeric\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/issues/60/error-when-starting-gazebo-if-lc_numeric</a>  , <a href=\"https://github.com/ros/urdfdom/issues/98\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros/urdfdom/issues/98</a> \nand <a href=\"https://github.com/ros/urdfdom/issues/98\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros/urdfdom/issues/98</a>). </p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<p>Launch <code>ign-gazebo</code> with a locale in  which the decimal separator is not <code>.</code>: </p>\n<div class=\"codehilite\"><pre><span></span>LC_NUMERIC=it_IT ign-gazebo\n</pre></div>\n\n\n<p><strong>Expected behavior:</strong><br />\nIf launched with the <code>C</code> locale, <code>ign-gazebo</code> start correctly:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">straversaro</span><span class=\"p\">@</span><span class=\"nl\">iiticublap103</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"n\">superbuild</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">gcc</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"err\">$</span> <span class=\"n\">LC_ALL</span><span class=\"o\">=</span><span class=\"s\">&quot;C&quot;</span> <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">gazebo</span> <span class=\"o\">--</span><span class=\"n\">verbose</span> <span class=\"mi\">3</span>\n<span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Ignition</span> <span class=\"n\">Gazebo</span> <span class=\"n\">v0</span><span class=\"mf\">.1.0</span><span class=\"o\">~</span><span class=\"n\">pre1</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Loading</span> <span class=\"n\">config</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">straversaro</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo</span><span class=\"o\">-</span><span class=\"n\">superbuild</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">gcc</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">install</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">gazebo0</span><span class=\"o\">/</span><span class=\"n\">gui</span><span class=\"o\">/</span><span class=\"n\">gui</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">World</span> <span class=\"p\">[</span><span class=\"k\">default</span><span class=\"p\">]</span> <span class=\"n\">initialized</span> <span class=\"n\">with</span> <span class=\"p\">[</span><span class=\"n\">default_physics</span><span class=\"p\">]</span> <span class=\"n\">physics</span> <span class=\"n\">profile</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Loading</span> <span class=\"n\">plugin</span> <span class=\"p\">[</span><span class=\"n\">Scene3D</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Added</span> <span class=\"n\">plugin</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"n\">D</span> <span class=\"n\">View</span><span class=\"p\">]</span> <span class=\"n\">to</span> <span class=\"n\">main</span> <span class=\"n\">window</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Loading</span> <span class=\"n\">plugin</span> <span class=\"p\">[</span><span class=\"n\">WorldControl</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Added</span> <span class=\"n\">plugin</span> <span class=\"p\">[</span><span class=\"n\">World</span> <span class=\"n\">control</span><span class=\"p\">]</span> <span class=\"n\">to</span> <span class=\"n\">main</span> <span class=\"n\">window</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Loading</span> <span class=\"n\">plugin</span> <span class=\"p\">[</span><span class=\"n\">WorldStats</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Added</span> <span class=\"n\">plugin</span> <span class=\"p\">[</span><span class=\"n\">World</span> <span class=\"n\">stats</span><span class=\"p\">]</span> <span class=\"n\">to</span> <span class=\"n\">main</span> <span class=\"n\">window</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Serving</span> <span class=\"n\">scene</span> <span class=\"n\">information</span> <span class=\"n\">on</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">world</span><span class=\"o\">/</span><span class=\"k\">default</span><span class=\"o\">/</span><span class=\"n\">scene</span><span class=\"o\">/</span><span class=\"n\">info</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Serving</span> <span class=\"n\">scene</span> <span class=\"n\">graph</span> <span class=\"n\">on</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">world</span><span class=\"o\">/</span><span class=\"k\">default</span><span class=\"o\">/</span><span class=\"n\">scene</span><span class=\"o\">/</span><span class=\"n\">graph</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Publishing</span> <span class=\"n\">pose</span> <span class=\"n\">messages</span> <span class=\"n\">on</span> <span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">world</span><span class=\"o\">/</span><span class=\"k\">default</span><span class=\"o\">/</span><span class=\"n\">pose</span><span class=\"o\">/</span><span class=\"n\">info</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">GUI</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"n\">Msg</span><span class=\"p\">]</span> <span class=\"n\">Loading</span> <span class=\"n\">plugin</span> <span class=\"p\">[</span><span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">rendering1</span><span class=\"o\">-</span><span class=\"n\">ogre</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p><strong>Actual behavior:</strong></p>\n<div class=\"codehilite\"><pre><span></span>straversaro@iiticublap103:~/src/gazebo-superbuild/build-ign-gcc-8/install/bin$ ./ign-gazebo --verbose 3\n[Msg] Ignition Gazebo v0.1.0~pre1\n[GUI] [Msg] Loading config [/home/straversaro/src/gazebo-superbuild/build-ign-gcc-8/install/share/ignition/gazebo0/gui/gui.config]\nError [Param.cc:395] Invalid argument. Unable to set value [.1 ] for key[near].\nException [Param.cc:44] SDF ASSERTION                     \nInvalid parameter\nIn function       : Param\nAssert expression : this-&gt;ValueFromString(_default)\nterminate called after throwing an instance of &#39;sdf::v8::AssertionInternalError&#39;\nAborted (core dumped)\n</pre></div>\n\n\n<p><strong>Reproduces how often:</strong> </p>\n<p>Everytime. </p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>Ubuntu 18.04\nsdformat branch : <code>gz11</code> </p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>Checking the backtrace, it seems that the call sequence is: \nsdf::Element::AddValue --&gt; sdf::Element::CreateParam --&gt; sdf::Param::Param --&gt; sdf::Param::ValueFromString</p>\n<p>A related commit is <a href=\"#!/osrf/sdformat/commits/f6af03cf3a63d3a6dd1492a2f6031475625a71cd\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/commits/f6af03cf3a63d3a6dd1492a2f6031475625a71cd</a> , \nbut I am not sure why I never experienced this,  as <code>template&lt;typename T&gt; void Param::Init(const std::string &amp;_value)</code> \nmethod was prone to this locale error as well.</p>\n<p>A proper solution could be to substitute calls to <code>str::stod</code> with a locale-safe custom function as done in \n<a href=\"https://github.com/ros/urdfdom_headers/pull/42/files\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ros/urdfdom_headers/pull/42/files</a> . An alternative, for the branch of SDFormat that support C++17\nwould be to use <a data-is-external-link=\"true\" href=\"https://en.cppreference.com/w/cpp/utility/from_chars\" rel=\"nofollow\"><code>std::from_chars</code></a>. Unfortunately, not all the strings\nthat represent a valid XML floating point number are valid inputs to <code>std::from_chars</code> (for example, <code>+1.0</code> is not a valid input to\n<code>std::to_chars</code>), so even this is not a trivial solution.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-11-13T00:15:25.332623+00:00", "milestone": null, "updated_on": "2019-01-04T23:01:50.256835+00:00", "type": "issue", "id": 207}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/208/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/208.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/208/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/208/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/208/please-respect-the-build_testing-variable"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/208/vote"}}, "reporter": {"display_name": "yurivict", "uuid": "{7012cf74-23b1-4689-8f6d-63be51ab0d44}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7012cf74-23b1-4689-8f6d-63be51ab0d44%7D"}, "html": {"href": "https://bitbucket.org/%7B7012cf74-23b1-4689-8f6d-63be51ab0d44%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/501bf0c2270ceed7106969dc5e2b6f5ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsY-1.png"}}, "nickname": "yurivict", "type": "user", "account_id": "557058:683abaa1-e9c1-4591-9582-634372ed2a78"}, "title": "Please respect the BUILD_TESTING variable", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There is no need to build tests by default, only with ```BUILD_TESTING=ON```.\r\n\r\nhttps://cmake.org/cmake/help/v3.0/module/CTest.html", "markup": "markdown", "html": "<p>There is no need to build tests by default, only with <code>BUILD_TESTING=ON</code>.</p>\n<p><a href=\"https://cmake.org/cmake/help/v3.0/module/CTest.html\" rel=\"nofollow\" class=\"ap-connect-link\">https://cmake.org/cmake/help/v3.0/module/CTest.html</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-21T00:46:49.185413+00:00", "milestone": null, "updated_on": "2018-11-29T15:35:02.712676+00:00", "type": "issue", "id": 208}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/209/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/209.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/209/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/209/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/209/please-use-the-newer-tinyxml2-instead-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/209/vote"}}, "reporter": {"display_name": "yurivict", "uuid": "{7012cf74-23b1-4689-8f6d-63be51ab0d44}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7012cf74-23b1-4689-8f6d-63be51ab0d44%7D"}, "html": {"href": "https://bitbucket.org/%7B7012cf74-23b1-4689-8f6d-63be51ab0d44%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/501bf0c2270ceed7106969dc5e2b6f5ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsY-1.png"}}, "nickname": "yurivict", "type": "user", "account_id": "557058:683abaa1-e9c1-4591-9582-634372ed2a78"}, "title": "Please use the newer tinyxml2 instead of tinyxml", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I had to apply this patch:\r\n```\r\n-  pkg_check_modules(tinyxml tinyxml)\r\n+  pkg_check_modules(tinyxml tinyxml2)\r\n   if (NOT tinyxml_FOUND)\r\n-    find_path (tinyxml_include_dirs tinyxml.h ${tinyxml_include_dirs} ENV CPATH)\r\n-    find_library(tinyxml_LIBRARIES NAMES tinyxml)\r\n+    find_path (tinyxml_include_dirs tinyxml2.h ${tinyxml_include_dirs} ENV CPATH)\r\n+    find_library(tinyxml_LIBRARIES NAMES tinyxml2)\r\n     set (tinyxml_FAIL False)\r\n     if (NOT tinyxml_include_dirs)\r\n-      message (STATUS \"Looking for tinyxml headers - not found\")\r\n+      message (STATUS \"Looking for tinyxml2 headers - not found\")\r\n       set (tinyxml_FAIL True)\r\n     endif()\r\n```\r\n\r\n```tinyxml``` doesn't install ```.pc``` files and isn't found, but ```tinyxml2``` is easily found.", "markup": "markdown", "html": "<p>I had to apply this patch:</p>\n<div class=\"codehilite\"><pre><span></span>-  pkg_check_modules(tinyxml tinyxml)\n+  pkg_check_modules(tinyxml tinyxml2)\n   if (NOT tinyxml_FOUND)\n-    find_path (tinyxml_include_dirs tinyxml.h <span class=\"cp\">${</span><span class=\"n\">tinyxml_include_dirs</span><span class=\"cp\">}</span> ENV CPATH)\n-    find_library(tinyxml_LIBRARIES NAMES tinyxml)\n+    find_path (tinyxml_include_dirs tinyxml2.h <span class=\"cp\">${</span><span class=\"n\">tinyxml_include_dirs</span><span class=\"cp\">}</span> ENV CPATH)\n+    find_library(tinyxml_LIBRARIES NAMES tinyxml2)\n     set (tinyxml_FAIL False)\n     if (NOT tinyxml_include_dirs)\n-      message (STATUS &quot;Looking for tinyxml headers - not found&quot;)\n+      message (STATUS &quot;Looking for tinyxml2 headers - not found&quot;)\n       set (tinyxml_FAIL True)\n     endif()\n</pre></div>\n\n\n<p><code>tinyxml</code> doesn't install <code>.pc</code> files and isn't found, but <code>tinyxml2</code> is easily found.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-21T00:48:47.794644+00:00", "milestone": null, "updated_on": "2018-11-29T15:32:07.736961+00:00", "type": "issue", "id": 209}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/210/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/210.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/210/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/210/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/210/version-6-fails-when-build_testing-off"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/210/vote"}}, "reporter": {"display_name": "yurivict", "uuid": "{7012cf74-23b1-4689-8f6d-63be51ab0d44}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7012cf74-23b1-4689-8f6d-63be51ab0d44%7D"}, "html": {"href": "https://bitbucket.org/%7B7012cf74-23b1-4689-8f6d-63be51ab0d44%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/501bf0c2270ceed7106969dc5e2b6f5ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsY-1.png"}}, "nickname": "yurivict", "type": "user", "account_id": "557058:683abaa1-e9c1-4591-9582-634372ed2a78"}, "title": "Version 6 fails when BUILD_TESTING=OFF", "component": null, "votes": 0, "watches": 1, "content": {"raw": "```\r\n/usr/ports/misc/sdformat/work-6/osrf-sdformat-d5372e7cf352/src/ign_TEST.cc:24:10: fatal error: 'test_config.h' file not found\r\n#include \"test_config.h\"\r\n         ^~~~~~~~~~~~~~~\r\n```\r\n\r\nrev. d5372e7cf352", "markup": "markdown", "html": "<div class=\"codehilite\"><pre><span></span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">ports</span><span class=\"o\">/</span><span class=\"n\">misc</span><span class=\"o\">/</span><span class=\"n\">sdformat</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"o\">/</span><span class=\"n\">osrf</span><span class=\"o\">-</span><span class=\"n\">sdformat</span><span class=\"o\">-</span><span class=\"n\">d5372e7cf352</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign_TEST</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">fatal</span> <span class=\"nl\">error</span><span class=\"p\">:</span> <span class=\"err\">&#39;</span><span class=\"n\">test_config</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"err\">&#39;</span> <span class=\"n\">file</span> <span class=\"n\">not</span> <span class=\"n\">found</span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&quot;test_config.h&quot;</span><span class=\"cp\"></span>\n         <span class=\"o\">^~~~~~~~~~~~~~~</span>\n</pre></div>\n\n\n<p>rev. <a href=\"#!/osrf/sdformat/commits/d5372e7cf352\" rel=\"nofollow\" class=\"ap-connect-link\">d5372e7cf352</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-21T03:24:03.372773+00:00", "milestone": null, "updated_on": "2018-11-21T03:24:03.372773+00:00", "type": "issue", "id": 210}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/211/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/211.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/211/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/211/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/211/virtual-area"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/211/vote"}}, "reporter": {"display_name": "Matthijs van der Burgh", "uuid": "{855a4af3-768d-4ef3-a630-cf1751b3571d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B855a4af3-768d-4ef3-a630-cf1751b3571d%7D"}, "html": {"href": "https://bitbucket.org/%7B855a4af3-768d-4ef3-a630-cf1751b3571d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c571e20349b3b6c68a716be1b11a34d6d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMB-6.png"}}, "nickname": "MatthijsBurgh", "type": "user", "account_id": "5bdd827c607ed0380401a826"}, "title": "Virtual area", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\nSDF doesn't contain any elements for virtual geometries. Virtual geometries could be used in multiple ways. For example event triggerring or limiting behaviour, position. I am interested in how you would implement it in SDF.\r\n\r\nMy suggestion would be:\r\ntag: virtual_area\r\nparent: link\r\nchilds: name, frame, pose, geometry(, plugin)\r\n\r\n# Motivation\r\nThe virtual area could be useful for:\r\n* Event triggers, start an event if a robot, actor, etc. enters a virtual area.\r\n* Allow objects, actors, population to only move in the virtual area.\r\n\r\nMore in general the virtual area can be used for checking if certain objects are located somewhere in space. Or to apply limits in space for almost anything: models, actors, population, physics, etc,\r\n\r\n# Describe alternatives you've considered\r\nI couldn't find anything already in SDF suitable for this. World, State and Scene, don't have anything in there, which could match this. In my opinion the best solution is to define these in models. So this area can be used for events/limits relative to a model.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>SDF doesn't contain any elements for virtual geometries. Virtual geometries could be used in multiple ways. For example event triggerring or limiting behaviour, position. I am interested in how you would implement it in SDF.</p>\n<p>My suggestion would be:\ntag: virtual_area\nparent: link\nchilds: name, frame, pose, geometry(, plugin)</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>The virtual area could be useful for:\n<em> Event triggers, start an event if a robot, actor, etc. enters a virtual area.\n</em> Allow objects, actors, population to only move in the virtual area.</p>\n<p>More in general the virtual area can be used for checking if certain objects are located somewhere in space. Or to apply limits in space for almost anything: models, actors, population, physics, etc,</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>I couldn't find anything already in SDF suitable for this. World, State and Scene, don't have anything in there, which could match this. In my opinion the best solution is to define these in models. So this area can be used for events/limits relative to a model.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-26T12:49:48.719042+00:00", "milestone": null, "updated_on": "2018-11-26T17:04:12.361716+00:00", "type": "issue", "id": 211}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/212/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/212.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/212/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/212/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/212/creating-a-closed-structure"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/212/vote"}}, "reporter": {"display_name": "PK", "uuid": "{30346539-088a-48a7-a6d4-9c690503e606}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B30346539-088a-48a7-a6d4-9c690503e606%7D"}, "html": {"href": "https://bitbucket.org/%7B30346539-088a-48a7-a6d4-9c690503e606%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1491b1f29f75a4604a63fb28111598b0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsP-0.png"}}, "nickname": "PK94", "type": "user", "account_id": "5c6ec89932395f479a482b41"}, "title": "Creating a closed structure", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hello\r\n\r\nI am trying to create a triangular frame where each side is a cylindrical link. Each link is connected to the other two via a joint(like in a triangle). Is it possible to model this in SDF? The joint can be anything for now.\r\nI am trying to import this into pybullet for simulation but the simulation dies. Is it because, I have a loop like structure defined in the SDF file?\r\nThe structure of the frame defined by me is as follows:\r\n3 links- Link A,B and C\r\nJoint#1 : parent A, child B\r\nJoint#2 : parent B, child C\r\njoint#3 : parent C, child A\r\n\r\nIs this definition of joints and their corresponding parents and children valid in SDF format? Is there an alternative definition I could use?\r\nI have attached a schematic of my system\r\n\r\nThank you!!", "markup": "markdown", "html": "<p>Hello</p>\n<p>I am trying to create a triangular frame where each side is a cylindrical link. Each link is connected to the other two via a joint(like in a triangle). Is it possible to model this in SDF? The joint can be anything for now.\nI am trying to import this into pybullet for simulation but the simulation dies. Is it because, I have a loop like structure defined in the SDF file?\nThe structure of the frame defined by me is as follows:\n3 links- Link A,B and C\nJoint<a href=\"#!/osrf/sdformat/issues/1/indentation-might-not-be-indented-enough\" rel=\"nofollow\" title=\"Indentation might not be indented enough\" class=\"ap-connect-link\"><s>#1</s></a> : parent A, child B\nJoint<a href=\"#!/osrf/sdformat/issues/2/make-schema-for-validation\" rel=\"nofollow\" title=\"Make schema for validation\" class=\"ap-connect-link\">#2</a> : parent B, child C\njoint<a href=\"#!/osrf/sdformat/issues/3/create-static-meta-tag\" rel=\"nofollow\" title=\"create &quot;static&quot; meta-tag\" class=\"ap-connect-link\"><s>#3</s></a> : parent C, child A</p>\n<p>Is this definition of joints and their corresponding parents and children valid in SDF format? Is there an alternative definition I could use?\nI have attached a schematic of my system</p>\n<p>Thank you!!</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2019-02-21T15:53:57.527882+00:00", "milestone": null, "updated_on": "2019-02-21T17:03:07.678678+00:00", "type": "issue", "id": 212}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/213/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/213.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/213/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/213/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/213/element-get-ignores-default-input-for"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/213/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Element::Get ignores default input for elements", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* [ X ] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nThe `Element::Get` function which accepts an optional default value will always ignore that value in favour of the default value defined in the spec.\r\n\r\n# Steps to Reproduce\r\n\r\nI would expect the following tests to pass:\r\n\r\n~~~\r\ndiff -r 301cecc99c22 src/Root_TEST.cc\r\n--- a/src/Root_TEST.cc  Thu Jan 31 20:37:41 2019 +0000\r\n+++ b/src/Root_TEST.cc  Tue Feb 26 18:42:00 2019 -0800\r\n@@ -23,6 +23,7 @@\r\n #include \"sdf/Light.hh\"\r\n #include \"sdf/Model.hh\"\r\n #include \"sdf/Root.hh\"\r\n+#include \"sdf/Sensor.hh\"\r\n \r\n /////////////////////////////////////////////////\r\n TEST(DOMRoot, Construction)\r\n@@ -63,6 +64,13 @@\r\n     \"           </box>\"\r\n     \"         </geometry>\"\r\n     \"       </collision>\"\r\n+    \"       <sensor name='sensor_contact' type='contact'>\"\r\n+    \"         <contact>\"\r\n+    \"           <collision>box_col</collision>\"\r\n+    \"         </contact>\"\r\n+    \"         <always_on>1</always_on>\"\r\n+    \"         <update_rate>100</update_rate>\"\r\n+    \"       </sensor>\"\r\n     \"     </link>\"\r\n     \"   </model>\"\r\n     \"   <light type='directional' name='sun'>\"\r\n@@ -95,6 +103,16 @@\r\n   EXPECT_NE(nullptr, collision->Element());\r\n   EXPECT_EQ(\"box_col\", collision->Name());\r\n \r\n+  const sdf::Sensor *sensor = link->SensorByIndex(0);\r\n+  ASSERT_NE(nullptr, sensor);\r\n+  EXPECT_EQ(\"sensor_contact\", sensor->Name());\r\n+  ASSERT_NE(nullptr, sensor->Element());\r\n+  EXPECT_TRUE(sensor->Element()->HasElement(\"always_on\"));\r\n+  EXPECT_FALSE(sensor->Element()->HasElement(\"topic\"));\r\n+  auto [topic, success] = sensor->Element()->Get<std::string>(\"topic\", \"default_value\");\r\n+  EXPECT_EQ(\"default_value\", topic);\r\n+  EXPECT_FALSE(success);\r\n+\r\n   EXPECT_TRUE(root.LightNameExists(\"sun\"));\r\n   EXPECT_EQ(1u, root.LightCount());\r\n   const sdf::Light *light = root.LightByIndex(0);\r\n\r\ndiff -r 301cecc99c22 src/SDF_TEST.cc\r\n--- a/src/SDF_TEST.cc   Thu Jan 31 20:37:41 2019 +0000\r\n+++ b/src/SDF_TEST.cc   Tue Feb 26 18:42:00 2019 -0800\r\n@@ -173,6 +173,20 @@\r\n   EXPECT_EQ(elem->Get<std::string>(\"name\", \"default_value\").first, \"model2\");\r\n   EXPECT_TRUE(elem->Get<std::string>(\"name\", \"default_value\").second);\r\n \r\n+  {\r\n+    EXPECT_TRUE(elem->HasElement(\"static\"));\r\n+    auto [value, success] = elem->Get<bool>(\"static\", true);\r\n+    EXPECT_FALSE(value);\r\n+    EXPECT_TRUE(success);\r\n+  }\r\n+\r\n+  {\r\n+    EXPECT_FALSE(elem->HasElement(\"self_collide\"));\r\n+    auto [value, success] = elem->Get<bool>(\"self_collide\", true);\r\n+    EXPECT_TRUE(value);\r\n+    EXPECT_FALSE(success);\r\n+  }\r\n+\r\n   // Remove model2\r\n   elem->RemoveFromParent();\r\n~~~\r\n\r\nHowever, they fail because the function will always fallback to the default value from the spec, rather than using the passed value.\r\n\r\n**Expected behavior:**  \r\n\r\nI'd expect the default value passed by the user to override the default from the spec, otherwise there's no point on calling this function.\r\n\r\n**Actual behavior:**\r\n\r\nThe tests fail:\r\n\r\n~~~\r\n[ RUN      ] DOMRoot.StringParse\r\n/home/developer/sdformat/src/Root_TEST.cc:113: Failure\r\nExpected equality of these values:\r\n  \"default_value\"\r\n  topic\r\n    Which is: \"__default__\"\r\n/home/developer/sdformat/src/Root_TEST.cc:114: Failure\r\nValue of: success\r\n  Actual: true\r\nExpected: false\r\n[  FAILED  ] DOMRoot.StringParse (37 ms)\r\n~~~\r\n\r\n~~~\r\n[ RUN      ] SDF.ElementRemoveFromParent\r\nWarning [parser.cc:528] Converting a deprecated SDF source[data-string].\r\n/home/developer/sdformat/src/SDF_TEST.cc:186: Failure\r\nValue of: value\r\n  Actual: false\r\nExpected: true\r\n/home/developer/sdformat/src/SDF_TEST.cc:187: Failure\r\nValue of: success\r\n  Actual: true\r\nExpected: false\r\n[  FAILED  ] SDF.ElementRemoveFromParent (35 ms)\r\n~~~\r\n\r\n**Reproduces how often:** \r\n\r\nAlways\r\n\r\n# Versions\r\n\r\nsdf8\r\n\r\n# Additional Information\r\n\r\nOne way to solve this issue is to remove the line that uses the default value from the spec:\r\n\r\n~~~\r\ndiff -r 301cecc99c22 include/sdf/Element.hh\r\n--- a/include/sdf/Element.hh    Thu Jan 31 20:37:41 2019 +0000\r\n+++ b/include/sdf/Element.hh    Tue Feb 26 18:42:00 2019 -0800\r\n@@ -470,10 +470,6 @@              \r\n       {                                 \r\n         result.first = this->GetElementImpl(_key)->Get<T>();\r\n       }                                                                                                                                                \r\n-      else if (this->HasElementDescription(_key))\r\n-      {                                                                                                                    \r\n-        result.first = this->GetElementDescription(_key)->Get<T>();                                                                                     \r\n-      }                             \r\n       else                                                                                                                  \r\n       {                          \r\n         result.second = false;  \r\n~~~\r\n\r\nHowever, that causes tests which use the `Get` version that doesn't accept a default value to fail, like:\r\n\r\n~~~\r\n/home/developer/sdformat/test/integration/fixed_joint_reduction.cc:334: Failure\r\nExpected equality of these values:\r\n  urdf_child_link_2_col->Get<int>(\"max_contacts\")\r\n    Which is: 0\r\n  10\r\n~~~\r\n\r\n That's because that function is calling the other one, passing a default value:\r\n\r\n~~~\r\n    ///////////////////////////////////////////////\r\n    template<typename T>\r\n    T Element::Get(const std::string &_key) const\r\n    {\r\n      T result = T();\r\n  \r\n      std::pair<T, bool> ret = this->Get<T>(_key, result);\r\n  \r\n      return ret.first;\r\n    }\r\n~~~\r\n\r\nI first wanted to check if this is the expected behaviour. If it isn't, I can make a PR fixing all cases.", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[ X ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>The <code>Element::Get</code> function which accepts an optional default value will always ignore that value in favour of the default value defined in the spec.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<p>I would expect the following tests to pass:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 301cecc99c22 src/Root_TEST.cc</span>\n<span class=\"gd\">--- a/src/Root_TEST.cc  Thu Jan 31 20:37:41 2019 +0000</span>\n<span class=\"gi\">+++ b/src/Root_TEST.cc  Tue Feb 26 18:42:00 2019 -0800</span>\n<span class=\"gu\">@@ -23,6 +23,7 @@</span>\n #include &quot;sdf/Light.hh&quot;\n #include &quot;sdf/Model.hh&quot;\n #include &quot;sdf/Root.hh&quot;\n<span class=\"gi\">+#include &quot;sdf/Sensor.hh&quot;</span>\n\n /////////////////////////////////////////////////\n TEST(DOMRoot, Construction)\n<span class=\"gu\">@@ -63,6 +64,13 @@</span>\n     &quot;           &lt;/box&gt;&quot;\n     &quot;         &lt;/geometry&gt;&quot;\n     &quot;       &lt;/collision&gt;&quot;\n<span class=\"gi\">+    &quot;       &lt;sensor name=&#39;sensor_contact&#39; type=&#39;contact&#39;&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;contact&gt;&quot;</span>\n<span class=\"gi\">+    &quot;           &lt;collision&gt;box_col&lt;/collision&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;/contact&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;always_on&gt;1&lt;/always_on&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;update_rate&gt;100&lt;/update_rate&gt;&quot;</span>\n<span class=\"gi\">+    &quot;       &lt;/sensor&gt;&quot;</span>\n     &quot;     &lt;/link&gt;&quot;\n     &quot;   &lt;/model&gt;&quot;\n     &quot;   &lt;light type=&#39;directional&#39; name=&#39;sun&#39;&gt;&quot;\n<span class=\"gu\">@@ -95,6 +103,16 @@</span>\n   EXPECT_NE(nullptr, collision-&gt;Element());\n   EXPECT_EQ(&quot;box_col&quot;, collision-&gt;Name());\n\n<span class=\"gi\">+  const sdf::Sensor *sensor = link-&gt;SensorByIndex(0);</span>\n<span class=\"gi\">+  ASSERT_NE(nullptr, sensor);</span>\n<span class=\"gi\">+  EXPECT_EQ(&quot;sensor_contact&quot;, sensor-&gt;Name());</span>\n<span class=\"gi\">+  ASSERT_NE(nullptr, sensor-&gt;Element());</span>\n<span class=\"gi\">+  EXPECT_TRUE(sensor-&gt;Element()-&gt;HasElement(&quot;always_on&quot;));</span>\n<span class=\"gi\">+  EXPECT_FALSE(sensor-&gt;Element()-&gt;HasElement(&quot;topic&quot;));</span>\n<span class=\"gi\">+  auto [topic, success] = sensor-&gt;Element()-&gt;Get&lt;std::string&gt;(&quot;topic&quot;, &quot;default_value&quot;);</span>\n<span class=\"gi\">+  EXPECT_EQ(&quot;default_value&quot;, topic);</span>\n<span class=\"gi\">+  EXPECT_FALSE(success);</span>\n<span class=\"gi\">+</span>\n   EXPECT_TRUE(root.LightNameExists(&quot;sun&quot;));\n   EXPECT_EQ(1u, root.LightCount());\n   const sdf::Light *light = root.LightByIndex(0);\n\n<span class=\"gh\">diff -r 301cecc99c22 src/SDF_TEST.cc</span>\n<span class=\"gd\">--- a/src/SDF_TEST.cc   Thu Jan 31 20:37:41 2019 +0000</span>\n<span class=\"gi\">+++ b/src/SDF_TEST.cc   Tue Feb 26 18:42:00 2019 -0800</span>\n<span class=\"gu\">@@ -173,6 +173,20 @@</span>\n   EXPECT_EQ(elem-&gt;Get&lt;std::string&gt;(&quot;name&quot;, &quot;default_value&quot;).first, &quot;model2&quot;);\n   EXPECT_TRUE(elem-&gt;Get&lt;std::string&gt;(&quot;name&quot;, &quot;default_value&quot;).second);\n\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    EXPECT_TRUE(elem-&gt;HasElement(&quot;static&quot;));</span>\n<span class=\"gi\">+    auto [value, success] = elem-&gt;Get&lt;bool&gt;(&quot;static&quot;, true);</span>\n<span class=\"gi\">+    EXPECT_FALSE(value);</span>\n<span class=\"gi\">+    EXPECT_TRUE(success);</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    EXPECT_FALSE(elem-&gt;HasElement(&quot;self_collide&quot;));</span>\n<span class=\"gi\">+    auto [value, success] = elem-&gt;Get&lt;bool&gt;(&quot;self_collide&quot;, true);</span>\n<span class=\"gi\">+    EXPECT_TRUE(value);</span>\n<span class=\"gi\">+    EXPECT_FALSE(success);</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n   // Remove model2\n   elem-&gt;RemoveFromParent();\n</pre></div>\n\n\n<p>However, they fail because the function will always fallback to the default value from the spec, rather than using the passed value.</p>\n<p><strong>Expected behavior:</strong>  </p>\n<p>I'd expect the default value passed by the user to override the default from the spec, otherwise there's no point on calling this function.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>The tests fail:</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] DOMRoot.StringParse\n/home/developer/sdformat/src/Root_TEST.cc:113: Failure\nExpected equality of these values:\n  &quot;default_value&quot;\n  topic\n    Which is: &quot;__default__&quot;\n/home/developer/sdformat/src/Root_TEST.cc:114: Failure\nValue of: success\n  Actual: true\nExpected: false\n[  FAILED  ] DOMRoot.StringParse (37 ms)\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] SDF.ElementRemoveFromParent\nWarning [parser.cc:528] Converting a deprecated SDF source[data-string].\n/home/developer/sdformat/src/SDF_TEST.cc:186: Failure\nValue of: value\n  Actual: false\nExpected: true\n/home/developer/sdformat/src/SDF_TEST.cc:187: Failure\nValue of: success\n  Actual: true\nExpected: false\n[  FAILED  ] SDF.ElementRemoveFromParent (35 ms)\n</pre></div>\n\n\n<p><strong>Reproduces how often:</strong> </p>\n<p>Always</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>sdf8</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>One way to solve this issue is to remove the line that uses the default value from the spec:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 301cecc99c22 include/sdf/Element.hh</span>\n<span class=\"gd\">--- a/include/sdf/Element.hh    Thu Jan 31 20:37:41 2019 +0000</span>\n<span class=\"gi\">+++ b/include/sdf/Element.hh    Tue Feb 26 18:42:00 2019 -0800</span>\n<span class=\"gu\">@@ -470,10 +470,6 @@              </span>\n       {                                 \n         result.first = this-&gt;GetElementImpl(_key)-&gt;Get&lt;T&gt;();\n       }                                                                                                                                                \n<span class=\"gd\">-      else if (this-&gt;HasElementDescription(_key))</span>\n<span class=\"gd\">-      {                                                                                                                    </span>\n<span class=\"gd\">-        result.first = this-&gt;GetElementDescription(_key)-&gt;Get&lt;T&gt;();                                                                                     </span>\n<span class=\"gd\">-      }                             </span>\n       else                                                                                                                  \n       {                          \n         result.second = false;  \n</pre></div>\n\n\n<p>However, that causes tests which use the <code>Get</code> version that doesn't accept a default value to fail, like:</p>\n<div class=\"codehilite\"><pre><span></span>/home/developer/sdformat/test/integration/fixed_joint_reduction.cc:334: Failure\nExpected equality of these values:\n  urdf_child_link_2_col-&gt;Get&lt;int&gt;(&quot;max_contacts&quot;)\n    Which is: 0\n  10\n</pre></div>\n\n\n<p>That's because that function is calling the other one, passing a default value:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"o\">///////////////////////////////////////////////</span>\n    <span class=\"nt\">template</span><span class=\"o\">&lt;</span><span class=\"nt\">typename</span> <span class=\"nt\">T</span><span class=\"o\">&gt;</span>\n    <span class=\"nt\">T</span> <span class=\"nt\">Element</span><span class=\"p\">::</span><span class=\"nd\">Get</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_key</span><span class=\"o\">)</span> <span class=\"nt\">const</span>\n    <span class=\"p\">{</span>\n      <span class=\"err\">T</span> <span class=\"err\">result</span> <span class=\"err\">=</span> <span class=\"err\">T()</span><span class=\"p\">;</span>\n\n      <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">pair</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">bool</span><span class=\"o\">&gt;</span> <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">this-</span><span class=\"o\">&gt;</span><span class=\"n\">Get</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">);</span>\n\n      <span class=\"err\">return</span> <span class=\"err\">ret.first</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>I first wanted to check if this is the expected behaviour. If it isn't, I can make a PR fixing all cases.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-02-27T02:52:24.945184+00:00", "milestone": null, "updated_on": "2019-02-27T02:52:24.945184+00:00", "type": "issue", "id": 213}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/214/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/214.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/214/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/214/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/214/urdf-to-sdf-parser-does-not-allow"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/214/vote"}}, "reporter": {"display_name": "Auguste Bourgois", "uuid": "{69e75446-c532-4da6-ad0a-07e54115e07e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B69e75446-c532-4da6-ad0a-07e54115e07e%7D"}, "html": {"href": "https://bitbucket.org/%7B69e75446-c532-4da6-ad0a-07e54115e07e%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5c9d0e64a54a69118b3226c6/6962844c-90a7-4b96-8cc0-0ca8346bcd7e/128"}}, "nickname": "AugusteBourgois", "type": "user", "account_id": "5c9d0e64a54a69118b3226c6"}, "title": "URDF to SDF parser does not allow attachment of light to links", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hello,\r\n\r\n# Prerequisites\r\n* [X] Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n* [X] Checked that your issue isn't already filed.\r\n* [X] Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nI am trying to use the FlashLightPlugin from Gazebo to attach a light to the link of a robot. Unfortunately, it doesn't work, and the reason might be the following :\r\nWhen converting a URDF file to SDF, whether manually using the command `gz sdf --print file.urdf > file.sdf` or automatically when launching gazebo, the light components attached to links are not parsed and do not appear in the resulting SDF file.\r\n\r\n# Steps to Reproduce\r\n\r\n1. Create a simple URDF file (See test.urdf)\r\n2. Convert the file to SDF using `gz sdf --print file.urdf > file.sdf` (See file.sdf)\r\n3. The <light> component has disappeared during the conversion from URDF to SDF.\r\n\r\n**Expected behavior:**  \r\n\r\nThe light component should be in the resulting SDF file.\r\n\r\n**Actual behavior:**\r\n\r\nThe light component is not in the resulting SDF file.\r\n\r\n**Reproduces how often:** \r\n\r\nEvery time I tried.\r\n\r\n# Versions\r\n\r\nGazebo 9, Ubuntu 16.04, ROS Kinetic, SDF 1.6\r\n\r\n# Additional Information\r\n\r\nThe problem comes from the URDF parser used to convert URDF files into SDF files. It only looks for <collision>, <visual> and <inertial> elements in a <link>.\r\nA way of avoiding that could be to just copy-n-paste the <light> element directly in the right place of the resulting SDF file.\r\nAnother way, which seems a bit longer, could be to parse the <light> element just like any other element, and recreate it in the right place in the resulting SDF file.\r\n\r\nI guess this \"bug\" could be considered as a feature request, so I apologize in advance in that case.\r\n\r\nIf necessary, I could take part in the development of this bugfix/feature, even though I don't really know where to start.", "markup": "markdown", "html": "<p>Hello,</p>\n<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[X] Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>[X] Checked that your issue isn't already filed.</li>\n<li>[X] Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>I am trying to use the FlashLightPlugin from Gazebo to attach a light to the link of a robot. Unfortunately, it doesn't work, and the reason might be the following :\nWhen converting a URDF file to SDF, whether manually using the command <code>gz sdf --print file.urdf &gt; file.sdf</code> or automatically when launching gazebo, the light components attached to links are not parsed and do not appear in the resulting SDF file.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Create a simple URDF file (See test.urdf)</li>\n<li>Convert the file to SDF using <code>gz sdf --print file.urdf &gt; file.sdf</code> (See file.sdf)</li>\n<li>The &lt;light&gt; component has disappeared during the conversion from URDF to SDF.</li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>The light component should be in the resulting SDF file.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>The light component is not in the resulting SDF file.</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>Every time I tried.</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>Gazebo 9, Ubuntu 16.04, ROS Kinetic, SDF 1.6</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>The problem comes from the URDF parser used to convert URDF files into SDF files. It only looks for &lt;collision&gt;, &lt;visual&gt; and &lt;inertial&gt; elements in a &lt;link&gt;.\nA way of avoiding that could be to just copy-n-paste the &lt;light&gt; element directly in the right place of the resulting SDF file.\nAnother way, which seems a bit longer, could be to parse the &lt;light&gt; element just like any other element, and recreate it in the right place in the resulting SDF file.</p>\n<p>I guess this \"bug\" could be considered as a feature request, so I apologize in advance in that case.</p>\n<p>If necessary, I could take part in the development of this bugfix/feature, even though I don't really know where to start.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-03-29T12:45:13.048992+00:00", "milestone": null, "updated_on": "2019-03-29T18:25:14.271223+00:00", "type": "issue", "id": 214}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/215/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/215.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/215/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/215/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/215/flexible-sheet-modelling"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/215/vote"}}, "reporter": null, "title": "Flexible sheet modelling", "component": null, "votes": 0, "watches": null, "content": {"raw": "Hello, \r\nI am trying to model a piezoelectric sheet which can expand when we apply voltage to it. Is there any way of doing so in SDF format?", "markup": "markdown", "html": "<p>Hello, \nI am trying to model a piezoelectric sheet which can expand when we apply voltage to it. Is there any way of doing so in SDF format?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2019-04-23T13:54:34.294390+00:00", "milestone": null, "updated_on": "2019-04-23T17:24:30.662936+00:00", "type": "issue", "id": 215}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/216/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/216.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/216/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/216/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/216/check-the-sdf-elements-have-unique-names"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/216/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Check the SDF elements have unique names when parsing", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nAccording to the [SDF specification](http://sdformat.org/spec?ver=1.6), sibling elements of the same type must have unique names (for example, see the description of the [model name attribute](http://sdformat.org/spec?ver=1.6&elem=model#model_name)). This has also been documented in the [Pose frame semantics: legacy behavior documentation](http://sdformat.org/tutorials?tut=pose_frame_semantics&cat=pose_semantics_docs&#Elementnamingrulesinsdf1.4). Currently, however, the parser does not check for name uniqueness when loading a file with `sdf::readFile` or `sdf::readString`. At a minimum, the parser should print a warning, and possibly return an error core or fail to load.\r\n\r\n# Motivation\r\n\r\nThere is a proposal to add more restrictive naming requirements to support pose frame semantics:\r\n\r\n* http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&cat=pose_semantics_docs&\r\n\r\nWe should support the existing naming requirements as a first step to implementing the proposal.\r\n\r\n# Describe alternatives you've considered\r\n\r\nIt's already part of the spec; I think we just need to implement it. The alternatives are about whether to fail hard or soft.\r\n\r\n# Additional context", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>According to the <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6\" rel=\"nofollow\">SDF specification</a>, sibling elements of the same type must have unique names (for example, see the description of the <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=model#model_name\" rel=\"nofollow\">model name attribute</a>). This has also been documented in the <a data-is-external-link=\"true\" href=\"http://sdformat.org/tutorials?tut=pose_frame_semantics&amp;cat=pose_semantics_docs&amp;#Elementnamingrulesinsdf1.4\" rel=\"nofollow\">Pose frame semantics: legacy behavior documentation</a>. Currently, however, the parser does not check for name uniqueness when loading a file with <code>sdf::readFile</code> or <code>sdf::readString</code>. At a minimum, the parser should print a warning, and possibly return an error core or fail to load.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>There is a proposal to add more restrictive naming requirements to support pose frame semantics:</p>\n<ul>\n<li><a href=\"http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&amp;cat=pose_semantics_docs&amp\" rel=\"nofollow\" class=\"ap-connect-link\">http://sdformat.org/tutorials?tut=pose_frame_semantics_proposal&amp;cat=pose_semantics_docs&amp</a>;</li>\n</ul>\n<p>We should support the existing naming requirements as a first step to implementing the proposal.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>It's already part of the spec; I think we just need to implement it. The alternatives are about whether to fail hard or soft.</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-06-18T21:09:53.376913+00:00", "milestone": null, "updated_on": "2019-08-14T00:06:47.011927+00:00", "type": "issue", "id": 216}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/217/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/217.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/217/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/217/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/217/add-sdf-elements-for-transparency"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/217/vote"}}, "reporter": {"display_name": "Peter Mitrano", "uuid": "{f79f793e-4f31-4c61-9df2-190b239e0bf2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D"}, "html": {"href": "https://bitbucket.org/%7Bf79f793e-4f31-4c61-9df2-190b239e0bf2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:b5298278-299c-4d16-b5aa-449d6d2db98d/e384924a-68d0-4825-9af2-9892e5f3417c/128"}}, "nickname": "peter_mitrano", "type": "user", "account_id": "557058:b5298278-299c-4d16-b5aa-449d6d2db98d"}, "title": "Add SDF elements for transparency, wireframe, etc...", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nI would like in my world file to indicate that gazebo should start as if I went to `view`/`transparent` in the menu.\r\n\r\n# Motivation\r\n\r\nI am using the gazebo marker to show some markers, and sometimes those markers appear inside obstacles. This means I often start gazebo and then immediately set the view to transparent, so I can debug things. I would expect to write something like:\r\n\r\n\u200c\r\n\r\n```xml\r\n<sdf version=\"1.5\">\r\n  <world name=\"default\">\r\n      <gui>\r\n          <camera name=/user_camera/>\r\n              <pose frame=\"\">0 0 25 0 1.5707 1.5707</pose>\r\n          </camera>\r\n          <view>\r\n              <transparent>true</transparent>\r\n              <wireframe>true</wireframe>\r\n              ... anything else in that menu\r\n          </view>\r\n      </gui>\r\n      <include>\r\n          <uri>model://ground_plane</uri>\r\n      </include>\r\n      <include>\r\n          <uri>model://sun</uri>\r\n      </include>\r\n      ...\r\n      <physics name=\"ode\" type=\"ode\">\r\n        ...\r\n      </physics>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\n# Describe alternatives you've considered\r\n\r\nMake the actual models transparent, but then I would need different models for debugging or not which is bad.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>I would like in my world file to indicate that gazebo should start as if I went to <code>view</code>/<code>transparent</code> in the menu.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>I am using the gazebo marker to show some markers, and sometimes those markers appear inside obstacles. This means I often start gazebo and then immediately set the view to transparent, so I can debug things. I would expect to write something like:</p>\n<p>\u200c</p>\n<div class=\"codehilite language-xml\"><pre><span></span><span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.5&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;default&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;gui&gt;</span>\n          <span class=\"nt\">&lt;camera</span> <span class=\"na\">name=</span><span class=\"s\">/user_camera/</span><span class=\"nt\">&gt;</span>\n              <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;&quot;</span><span class=\"nt\">&gt;</span>0 0 25 0 1.5707 1.5707<span class=\"nt\">&lt;/pose&gt;</span>\n          <span class=\"nt\">&lt;/camera&gt;</span>\n          <span class=\"nt\">&lt;view&gt;</span>\n              <span class=\"nt\">&lt;transparent&gt;</span>true<span class=\"nt\">&lt;/transparent&gt;</span>\n              <span class=\"nt\">&lt;wireframe&gt;</span>true<span class=\"nt\">&lt;/wireframe&gt;</span>\n              ... anything else in that menu\n          <span class=\"nt\">&lt;/view&gt;</span>\n      <span class=\"nt\">&lt;/gui&gt;</span>\n      <span class=\"nt\">&lt;include&gt;</span>\n          <span class=\"nt\">&lt;uri&gt;</span>model://ground_plane<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;/include&gt;</span>\n      <span class=\"nt\">&lt;include&gt;</span>\n          <span class=\"nt\">&lt;uri&gt;</span>model://sun<span class=\"nt\">&lt;/uri&gt;</span>\n      <span class=\"nt\">&lt;/include&gt;</span>\n      ...\n      <span class=\"nt\">&lt;physics</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ode&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n        ...\n      <span class=\"nt\">&lt;/physics&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Make the actual models transparent, but then I would need different models for debugging or not which is bad.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-10T13:46:41.026676+00:00", "milestone": null, "updated_on": "2019-07-10T13:50:45.509947+00:00", "type": "issue", "id": 217}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/218/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/218.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/218/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/218/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/218/converter-rename-only-renames-the-first"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/218/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Converter::Rename only renames the first element", "component": null, "votes": 0, "watches": 1, "content": {"raw": "During review of pull request #551, which fixed the `Converter::Remove` function to remove repeated elements, @azeey pointed out that `Converter::Rename` has the same problem in that it only renames the first element and not any repeated elements. I have confirmed this by adding a failing test to the following branch:\r\n\r\n* #!/osrf/sdformat/branch/converter_fix_rename?dest=converter_fix_remove#diff", "markup": "markdown", "html": "<p>During review of <a href=\"#!/osrf/sdformat/pull-requests/551/converter-remove-all-matching-elements\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #551</a>, which fixed the <code>Converter::Remove</code> function to remove repeated elements, @azeey pointed out that <code>Converter::Rename</code> has the same problem in that it only renames the first element and not any repeated elements. I have confirmed this by adding a failing test to the following branch:</p>\n<ul>\n<li><a href=\"#!/osrf/sdformat/branch/converter_fix_rename?dest=converter_fix_remove#diff\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/branch/converter_fix_rename?dest=converter_fix_remove#diff</a></li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-08-27T19:31:38.914146+00:00", "milestone": null, "updated_on": "2019-08-27T19:31:38.914146+00:00", "type": "issue", "id": 218}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/219/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/219.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/219/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/219/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/219/joint-axis-always-uses-parent-model-frame"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/219/vote"}}, "reporter": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "title": "Joint axis always uses parent model frame when nested", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When a model is nested in another model, the joints inside the child model are parsed as though `use_parent_model_frame` is set to true even if it is not. \r\n\r\nRelevant line of code: #!/osrf/sdformat/src/sdf6/src/parser.cc#lines-1104\r\n\r\n# Steps to Reproduce\r\n\r\n1. Extract attached zip file. Place the `included_joint` folder in your gazebo model database. This can be done by copying the folder to `~/.gazebo/models`.\r\n2. Run gazebo\r\n3. Spawn the `joint_axis_test` model by running `gz model -f joint_axis_test.sdf -m joint_axis_test`\r\n\r\n**Expected behavior:**  \r\n\r\nThe model `included_joint` has one revolute joint with an axis set to `0 0 1`. This model is nested in another model as\r\n\r\n```\r\n<include>\r\n  <uri>model://included_joint</uri>\r\n  <pose>0 0 0.5 0 -1.570796 0</pose>\r\n</include>\r\n```\r\n\r\nSince `use_parent_model_frame` is not set, this vector is taken to be in the local frame of the child link `wheel`. The expected behavior is that the axis is aligned with the longitudinal direction of the cylinder.\r\n\r\n![default_gzclient_camera(1)-2019-09-04T11_02_18.648658.jpg](data/bitbucket.org/repo/ak8x4z/images/3089388943-default_gzclient_camera1-2019-09-04T11_02_18.648658.jpg)\r\n\r\n**Actual behavior:**\r\n\r\nThe axis is not aligned with the longitudinal direction of the cylinder because it is rotated by the parent model's pose.\r\n\r\n![default_gzclient_camera(1)-2019-09-04T11_01_54.664453.jpg](data/bitbucket.org/repo/ak8x4z/images/608178976-default_gzclient_camera1-2019-09-04T11_01_54.664453.jpg)\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\nall\r\n\r\n# Additional Information", "markup": "markdown", "html": "<p>When a model is nested in another model, the joints inside the child model are parsed as though <code>use_parent_model_frame</code> is set to true even if it is not. </p>\n<p>Relevant line of code: <a href=\"#!/osrf/sdformat/src/sdf6/src/parser.cc#lines-1104\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/sdf6/src/parser.cc#lines-1104</a></p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Extract attached zip file. Place the <code>included_joint</code> folder in your gazebo model database. This can be done by copying the folder to <code>~/.gazebo/models</code>.</li>\n<li>Run gazebo</li>\n<li>Spawn the <code>joint_axis_test</code> model by running <code>gz model -f joint_axis_test.sdf -m joint_axis_test</code></li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>The model <code>included_joint</code> has one revolute joint with an axis set to <code>0 0 1</code>. This model is nested in another model as</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;include&gt;</span>\n  <span class=\"nt\">&lt;uri&gt;</span>model://included_joint<span class=\"nt\">&lt;/uri&gt;</span>\n  <span class=\"nt\">&lt;pose&gt;</span>0 0 0.5 0 -1.570796 0<span class=\"nt\">&lt;/pose&gt;</span>\n<span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>Since <code>use_parent_model_frame</code> is not set, this vector is taken to be in the local frame of the child link <code>wheel</code>. The expected behavior is that the axis is aligned with the longitudinal direction of the cylinder.</p>\n<p><img alt=\"default_gzclient_camera(1)-2019-09-04T11_02_18.648658.jpg\" src=\"data/bitbucket.org/repo/ak8x4z/images/3089388943-default_gzclient_camera1-2019-09-04T11_02_18.648658.jpg\" /></p>\n<p><strong>Actual behavior:</strong></p>\n<p>The axis is not aligned with the longitudinal direction of the cylinder because it is rotated by the parent model's pose.</p>\n<p><img alt=\"default_gzclient_camera(1)-2019-09-04T11_01_54.664453.jpg\" src=\"data/bitbucket.org/repo/ak8x4z/images/608178976-default_gzclient_camera1-2019-09-04T11_01_54.664453.jpg\" /></p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>all</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-04T16:15:38.566943+00:00", "milestone": null, "updated_on": "2020-02-25T20:01:01.025400+00:00", "type": "issue", "id": 219}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/220/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/220.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/220/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/220/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/220/provide-api-for-loading-sdf-file-without"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/220/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Provide API for loading SDF file without converting it to latest supported version", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThe `sdf::readFile` and `sdf::readString` functions in [parser.hh](#!/osrf/sdformat/src/default/include/sdf/parser.hh) convert file to the latest SDF version. It would be nice to provide an API that loads the file at its current version without conversion.\r\n\r\n# Motivation\r\n\r\nIt would allow 3rd parties that use the sdformat parser time to migrate from an older version of the spec to the newest one.\r\n\r\n# Describe alternatives you've considered\r\n\r\nTell users to read the `/sdf[@version]` attribute and pass it to `sdf::convertFile` to load the file at the specific version. Providing a dedicated API would simplify this process.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>The <code>sdf::readFile</code> and <code>sdf::readString</code> functions in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/default/include/sdf/parser.hh\" rel=\"nofollow\">parser.hh</a> convert file to the latest SDF version. It would be nice to provide an API that loads the file at its current version without conversion.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>It would allow 3rd parties that use the sdformat parser time to migrate from an older version of the spec to the newest one.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Tell users to read the <code>/sdf[@version]</code> attribute and pass it to <code>sdf::convertFile</code> to load the file at the specific version. Providing a dedicated API would simplify this process.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-16T21:44:05.292807+00:00", "milestone": null, "updated_on": "2020-01-17T06:03:57.500418+00:00", "type": "issue", "id": 220}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/221/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/221.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/221/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/221/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/221/some-symbols-without-sdf-vn-namespace"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/221/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Some symbols without sdf::vN namespace", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I noticed an issue with symbols while adding a function to `src/Utils.hh` and I realized that the visible symbols in `ign.hh` don't use the `sdf` namespace, and the internal symbols in `src/Utils.hh` don't use the inline versioned namespace.\r\n\r\n* #!/osrf/sdformat/src/927e6eb0b68ba70435b4f6786dd6010994fcb25d/include/sdf/ign.hh?at=default\r\n* #!/osrf/sdformat/src/f16b643368034e771f121ab17971bb5a4f8d0aef/src/Utils.hh?at=default", "markup": "markdown", "html": "<p>I noticed an issue with symbols while adding a function to <code>src/Utils.hh</code> and I realized that the visible symbols in <code>ign.hh</code> don't use the <code>sdf</code> namespace, and the internal symbols in <code>src/Utils.hh</code> don't use the inline versioned namespace.</p>\n<ul>\n<li><a href=\"#!/osrf/sdformat/src/927e6eb0b68ba70435b4f6786dd6010994fcb25d/include/sdf/ign.hh?at=default\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/927e6eb0b68ba70435b4f6786dd6010994fcb25d/include/sdf/ign.hh?at=default</a></li>\n<li><a href=\"#!/osrf/sdformat/src/f16b643368034e771f121ab17971bb5a4f8d0aef/src/Utils.hh?at=default\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/src/f16b643368034e771f121ab17971bb5a4f8d0aef/src/Utils.hh?at=default</a></li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-27T21:43:50.108872+00:00", "milestone": null, "updated_on": "2019-11-15T20:57:24.473570+00:00", "type": "issue", "id": 221}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/222/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/222.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/222/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/222/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/222/converter-map-only-maps-first-of-sibling"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/222/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Converter::Map only maps first of sibling elements", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The `Converter::Map` functionality was added to libsdformat9 in pull request #580. It maps values from elements/attributes into other elements/attributes. It is currently limited to only mapping the first of sibling elements of the same type.\r\n\r\nFor example, consider the following xml from a `.convert ` file:\r\n\r\n~~~\r\n<map>\r\n  <from name='elemD'>\r\n    <value>d</value>\r\n    <value>D</value>\r\n  </from>\r\n  <to name='elemF'>\r\n    <value>f</value>\r\n    <value>F</value>\r\n  </to>\r\n</map>\r\n~~~\r\n\r\nthat operates on the following xml:\r\n\r\n~~~\r\n<elemC attrC='C'>\r\n  <elemD>D</elemD>\r\n  <elemD>D</elemD>\r\n  <elemD>d</elemD>\r\n  <elemD>d</elemD>\r\n</elemC>\r\n~~~\r\n\r\nCurrently it only maps the first element, so the output would be the following (all the original `elemD` elements plus one new `elemF` element):\r\n\r\n~~~\r\n<elemC attrC='C'>\r\n  <elemD>D</elemD>\r\n  <elemD>D</elemD>\r\n  <elemD>d</elemD>\r\n  <elemD>d</elemD>\r\n  <elemF>F</elemF>\r\n</elemC>\r\n~~~\r\n\r\nI've added a failing test to the following branch that expects all sibling elements to be mapped in the converted xml:\r\n\r\n* #!/osrf/sdformat/branch/converter_map_multiple_siblings", "markup": "markdown", "html": "<p>The <code>Converter::Map</code> functionality was added to libsdformat9 in <a href=\"#!/osrf/sdformat/pull-requests/580/converter-add-element-for-converting-fixed\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #580</a>. It maps values from elements/attributes into other elements/attributes. It is currently limited to only mapping the first of sibling elements of the same type.</p>\n<p>For example, consider the following xml from a <code>.convert</code> file:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;map&gt;</span>\n  <span class=\"nt\">&lt;from</span> <span class=\"na\">name=</span><span class=\"s\">&#39;elemD&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>d<span class=\"nt\">&lt;/value&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>D<span class=\"nt\">&lt;/value&gt;</span>\n  <span class=\"nt\">&lt;/from&gt;</span>\n  <span class=\"nt\">&lt;to</span> <span class=\"na\">name=</span><span class=\"s\">&#39;elemF&#39;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>f<span class=\"nt\">&lt;/value&gt;</span>\n    <span class=\"nt\">&lt;value&gt;</span>F<span class=\"nt\">&lt;/value&gt;</span>\n  <span class=\"nt\">&lt;/to&gt;</span>\n<span class=\"nt\">&lt;/map&gt;</span>\n</pre></div>\n\n\n<p>that operates on the following xml:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;elemC</span> <span class=\"na\">attrC=</span><span class=\"s\">&#39;C&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n<span class=\"nt\">&lt;/elemC&gt;</span>\n</pre></div>\n\n\n<p>Currently it only maps the first element, so the output would be the following (all the original <code>elemD</code> elements plus one new <code>elemF</code> element):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;elemC</span> <span class=\"na\">attrC=</span><span class=\"s\">&#39;C&#39;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>D<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemD&gt;</span>d<span class=\"nt\">&lt;/elemD&gt;</span>\n  <span class=\"nt\">&lt;elemF&gt;</span>F<span class=\"nt\">&lt;/elemF&gt;</span>\n<span class=\"nt\">&lt;/elemC&gt;</span>\n</pre></div>\n\n\n<p>I've added a failing test to the following branch that expects all sibling elements to be mapped in the converted xml:</p>\n<ul>\n<li><a href=\"#!/osrf/sdformat/branch/converter_map_multiple_siblings\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/sdformat/branch/converter_map_multiple_siblings</a></li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-11-15T21:05:51.940329+00:00", "milestone": null, "updated_on": "2019-11-15T21:05:51.940329+00:00", "type": "issue", "id": 222}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/223/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/223.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/223/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/223/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/223/sdformat-fails-to-build"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/223/vote"}}, "reporter": {"display_name": "acxz", "uuid": "{9dedb9bd-d101-4691-882b-c20ed6bbe205}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9dedb9bd-d101-4691-882b-c20ed6bbe205%7D"}, "html": {"href": "https://bitbucket.org/%7B9dedb9bd-d101-4691-882b-c20ed6bbe205%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5cc8ac43174d2a0e4b04d3de/3ad0ca54-a1a2-4073-930a-eed4a566829d/128"}}, "nickname": "avcxz", "type": "user", "account_id": "5cc8ac43174d2a0e4b04d3de"}, "title": "sdformat fails to build", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n\\[ \\] Put an X between the brackets on this line if you have done all of the following:\r\n\r\n* Checked the Q&A board for common solutions: [http://answers.gazebosim.org](http://answers.gazebosim.org)\r\n* Checked that your issue isn't already filed.\r\n* Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\nI have only checked the second point, since I believe 3 is not true and 1 will not be informative.\r\n\r\n# Description\r\n\r\nsdformat-6 is failing to compile for me. I am trying to install gazebo-10 and it requires version 6 of sdformat. Here is the error I receive:\r\n\r\n```\r\nTraceback (most recent call last):\r\n<internal:gem_prelude>:4:in `<internal:gem_prelude>': undefined method `gem' for main:Object (NoMethodError)\r\n    1: from <internal:gem_prelude>:3:in `<internal:gem_prelude>'\r\n<internal:gem_prelude>:6:in `rescue in <internal:gem_prelude>': uninitialized constant Gem::LoadError (NameError)\r\nmake[2]: *** [sdf/1.6/CMakeFiles/schema1_6.dir/build.make:115: sdf/1.6/actor.xsd] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:1996: sdf/1.6/CMakeFiles/schema1_6.dir/all] Error 2\r\nmake: *** [Makefile:141: all] Error 2\r\n```\r\n\r\n# Steps to Reproduce\r\n\r\n1. Clone the latest sdformat version 6. [d4d9796](#!/osrf/sdformat/commits/d4d9796600b9) or get the relevant download from the 6.2 tag.\r\n2. Run the build process as shown \\[here\\]\\([http://gazebosim.org/tutorials?tut=install\\_dependencies\\_from\\_source&cat=install](http://gazebosim.org/tutorials?tut=install_dependencies_from_source&cat=install)\\)\r\n\r\n**Expected behavior:**\r\n\r\nThe build should complete successfully.\r\n\r\n**Actual behavior:**\r\n\r\nThe build fails with the following error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n<internal:gem_prelude>:4:in `<internal:gem_prelude>': undefined method `gem' for main:Object (NoMethodError)\r\n    1: from <internal:gem_prelude>:3:in `<internal:gem_prelude>'\r\n<internal:gem_prelude>:6:in `rescue in <internal:gem_prelude>': uninitialized constant Gem::LoadError (NameError)\r\nmake[2]: *** [sdf/1.6/CMakeFiles/schema1_6.dir/build.make:115: sdf/1.6/actor.xsd] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:1996: sdf/1.6/CMakeFiles/schema1_6.dir/all] Error 2\r\nmake: *** [Makefile:141: all] Error 2\r\n```\r\n\r\n\u200c\r\n\r\n**Reproduces how often:**\r\n\r\nEvery time I try to build sdformat-6.\r\n\r\n# Versions\r\n\r\nOS: ArchLinux\r\n\r\ncmake: v3.15.5\r\n\r\ngcc: v9.2.0\r\n\r\nsdformat: v6.2\r\n\r\nruby: v2.6.5 \\(this seems like a likely culprit to me since gem stuff is related to ruby and Ubuntu 18.04 offers ruby 2.5.1 which presumably works\\)\r\n\r\nI do not think the versions of the other dependencies are useful to this issue.\r\n\r\n# Additional Information\r\n\r\nAssigned blocker priority since this is preventing the install of gazebo and ros-melodic-desktop-full on ArchLinux. Would love to have this issue resolved ASAP.\r\n\r\nI went ahead and checked out the master branch to see if the issue comes up in future releases. Using the latest master \\([e66c789](#!/osrf/sdformat/commits/e66c789100b4644a799a602cc29928ec1b594794) as of posting\\) I still encounter the same issue.\r\n\r\nThinking a bit more about the issue, maybe the issue lies with gtest. Archlinux uses version 1.8.1, but sdformat uses its own packaged gtest. Is there a way for me to build sdformat using the system wide package of gtest instead of the prepackaged version of gtest provided by sdformat?", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<p>[ ] Put an X between the brackets on this line if you have done all of the following:</p>\n<ul>\n<li>Checked the Q&amp;A board for common solutions: <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org\" rel=\"nofollow\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n<p>I have only checked the second point, since I believe 3 is not true and 1 will not be informative.</p>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>sdformat-6 is failing to compile for me. I am trying to install gazebo-10 and it requires version 6 of sdformat. Here is the error I receive:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n&lt;internal:gem_prelude&gt;:4:in `&lt;internal:gem_prelude&gt;&#39;: undefined method `gem&#39; for main:Object (NoMethodError)\n    1: from &lt;internal:gem_prelude&gt;:3:in `&lt;internal:gem_prelude&gt;&#39;\n&lt;internal:gem_prelude&gt;:6:in `rescue in &lt;internal:gem_prelude&gt;&#39;: uninitialized constant Gem::LoadError (NameError)\nmake[2]: *** [sdf/1.6/CMakeFiles/schema1_6.dir/build.make:115: sdf/1.6/actor.xsd] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:1996: sdf/1.6/CMakeFiles/schema1_6.dir/all] Error 2\nmake: *** [Makefile:141: all] Error 2\n</pre></div>\n\n\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Clone the latest sdformat version 6. <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/commits/d4d9796600b9\" rel=\"nofollow\">d4d9796</a> or get the relevant download from the 6.2 tag.</li>\n<li>Run the build process as shown [here](<a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=install_dependencies_from_source&amp;cat=install\" rel=\"nofollow\">http://gazebosim.org/tutorials?tut=install_dependencies_from_source&amp;cat=install</a>)</li>\n</ol>\n<p><strong>Expected behavior:</strong></p>\n<p>The build should complete successfully.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>The build fails with the following error.</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n&lt;internal:gem_prelude&gt;:4:in `&lt;internal:gem_prelude&gt;&#39;: undefined method `gem&#39; for main:Object (NoMethodError)\n    1: from &lt;internal:gem_prelude&gt;:3:in `&lt;internal:gem_prelude&gt;&#39;\n&lt;internal:gem_prelude&gt;:6:in `rescue in &lt;internal:gem_prelude&gt;&#39;: uninitialized constant Gem::LoadError (NameError)\nmake[2]: *** [sdf/1.6/CMakeFiles/schema1_6.dir/build.make:115: sdf/1.6/actor.xsd] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:1996: sdf/1.6/CMakeFiles/schema1_6.dir/all] Error 2\nmake: *** [Makefile:141: all] Error 2\n</pre></div>\n\n\n<p>\u200c</p>\n<p><strong>Reproduces how often:</strong></p>\n<p>Every time I try to build sdformat-6.</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>OS: ArchLinux</p>\n<p>cmake: v3.15.5</p>\n<p>gcc: v9.2.0</p>\n<p>sdformat: v6.2</p>\n<p>ruby: v2.6.5 (this seems like a likely culprit to me since gem stuff is related to ruby and Ubuntu 18.04 offers ruby 2.5.1 which presumably works)</p>\n<p>I do not think the versions of the other dependencies are useful to this issue.</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>Assigned blocker priority since this is preventing the install of gazebo and ros-melodic-desktop-full on ArchLinux. Would love to have this issue resolved ASAP.</p>\n<p>I went ahead and checked out the master branch to see if the issue comes up in future releases. Using the latest master (<a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/commits/e66c789100b4644a799a602cc29928ec1b594794\" rel=\"nofollow\">e66c789</a> as of posting) I still encounter the same issue.</p>\n<p>Thinking a bit more about the issue, maybe the issue lies with gtest. Archlinux uses version 1.8.1, but sdformat uses its own packaged gtest. Is there a way for me to build sdformat using the system wide package of gtest instead of the prepackaged version of gtest provided by sdformat?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-11-16T19:54:22.132590+00:00", "milestone": null, "updated_on": "2019-11-26T05:36:31.817435+00:00", "type": "issue", "id": 223}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/224/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/224.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/224/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/224/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/224/urdfdom-and-urdfdom_header-not-found-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/224/vote"}}, "reporter": {"display_name": "Claire Wang", "uuid": "{4b4ab2f2-8148-463e-a671-2eed1e6ccd42}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D"}, "html": {"href": "https://bitbucket.org/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d3f35705e485d0dab01c896/a44642e6-28d8-4727-b9cc-b4c18e91d167/128"}}, "nickname": "Claire Wang", "type": "user", "account_id": "5d3f35705e485d0dab01c896"}, "title": "urdfdom and urdfdom_header not found when building from source on OSX", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* \\[X\\] Put an X between the brackets on this line if you have done all of the following:\r\n\r\n    * Checked the Q&A board for common solutions: [http://answers.gazebosim.org](http://answers.gazebosim.org)\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: [https://ignitionrobotics.org/libs](https://ignitionrobotics.org/libs)\r\n    \r\n\r\n# Description\r\n\r\n\\[Description of the issue\\]  \r\nAfter installing urdfdom package with brew, cmake is still unable to find it during the build process.\r\n\r\n# Steps to Reproduce\r\n\r\n1. \\[First Step\\] brew install urdfdom\r\n2. \\[Second Step\\] colcon build --merge-install\r\n3. \\[and so on...\\]\r\n\r\n**Expected behavior:**\r\n\r\n\\[What you expect to happen\\]  \r\nBuilds sdformat9 successfully\r\n\r\n**Actual behavior:**\r\n\r\n\\[What actually happens\\]\r\n\r\n```\r\n/Users/clairewang/citadel_ws/src/sdformat/src/parser_urdf.cc:30:10: fatal error: 'urdf_model/model.h' file not found\r\n\r\n#include <urdf_model/model.h>^~~~~~~~1 error generated.make[2]: *** [src/CMakeFiles/sdformat9.dir/parser_urdf.cc.o] Error 1make[1]: *** [src/CMakeFiles/sdformat9.dir/all] Error 2make: *** [all] Error 2make: INTERNAL: Exiting with 14 jobserver tokens available; should be 12!\r\n\r\nFailed <<< sdformat9 [ Exited with code 2 ]\r\n```\r\n\r\n**Reproduces how often:**\r\n\r\n\\[What percentage of the time does it occur?\\]  \r\nAll the time when I build from source\r\n\r\n# Versions\r\n\r\n\\[Include information about relevant software versions, and your OS type and version.\\]\r\n\r\nOS: Mojave \\(10.14\\)  \r\nIgnition: Citadel  \r\nXcode: 10.3\r\n\r\n# Additional Information\r\n\r\n\\[Any additional information, configuration or data that might be necessary to reproduce the issue.\\]\r\n\r\nThe current workaround is to use `colcon build --cmake-args -DUSE_INTERNAL_URDF=ON --merge-install`, but it would be nice to build with the system one.\r\n\r\n\u200c", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>\n<p>[X] Put an X between the brackets on this line if you have done all of the following:</p>\n<ul>\n<li>Checked the Q&amp;A board for common solutions: <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org\" rel=\"nofollow\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a data-is-external-link=\"true\" href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>[Description of the issue]<br />\nAfter installing urdfdom package with brew, cmake is still unable to find it during the build process.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>[First Step] brew install urdfdom</li>\n<li>[Second Step] colcon build --merge-install</li>\n<li>[and so on...]</li>\n</ol>\n<p><strong>Expected behavior:</strong></p>\n<p>[What you expect to happen]<br />\nBuilds sdformat9 successfully</p>\n<p><strong>Actual behavior:</strong></p>\n<p>[What actually happens]</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">clairewang</span><span class=\"o\">/</span><span class=\"n\">citadel_ws</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">sdformat</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">parser_urdf</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">fatal</span> <span class=\"nl\">error</span><span class=\"p\">:</span> <span class=\"err\">&#39;</span><span class=\"n\">urdf_model</span><span class=\"o\">/</span><span class=\"n\">model</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"err\">&#39;</span> <span class=\"n\">file</span> <span class=\"n\">not</span> <span class=\"n\">found</span>\n\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;urdf_model/model.h&gt;^~~~~~~~1 error generated.make[2]: *** [src/CMakeFiles/sdformat9.dir/parser_urdf.cc.o] Error 1make[1]: *** [src/CMakeFiles/sdformat9.dir/all] Error 2make: *** [all] Error 2make: INTERNAL: Exiting with 14 jobserver tokens available; should be 12!</span><span class=\"cp\"></span>\n\n<span class=\"n\">Failed</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"n\">sdformat9</span> <span class=\"p\">[</span> <span class=\"n\">Exited</span> <span class=\"n\">with</span> <span class=\"n\">code</span> <span class=\"mi\">2</span> <span class=\"p\">]</span>\n</pre></div>\n\n\n<p><strong>Reproduces how often:</strong></p>\n<p>[What percentage of the time does it occur?]<br />\nAll the time when I build from source</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>[Include information about relevant software versions, and your OS type and version.]</p>\n<p>OS: Mojave (10.14)<br />\nIgnition: Citadel<br />\nXcode: 10.3</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>[Any additional information, configuration or data that might be necessary to reproduce the issue.]</p>\n<p>The current workaround is to use <code>colcon build --cmake-args -DUSE_INTERNAL_URDF=ON --merge-install</code>, but it would be nice to build with the system one.</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-12-09T22:44:42.240078+00:00", "milestone": null, "updated_on": "2019-12-09T23:40:16.088809+00:00", "type": "issue", "id": 224}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/225/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/225.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/225/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/225/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/225/airpressure-move-constructor-is-not-marked"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/225/vote"}}, "reporter": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "title": "AirPressure Move Constructor is not marked noexcept", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It should be marked noexcept like the rest of the move constructors, but would require an ABI break.", "markup": "markdown", "html": "<p>It should be marked noexcept like the rest of the move constructors, but would require an ABI break.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-01-10T19:06:13.159702+00:00", "milestone": null, "updated_on": "2020-01-10T20:05:19.340995+00:00", "type": "issue", "id": 225}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/226/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/226.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/226/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/226/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/226/associate-sdf-element-with-line-number-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/226/vote"}}, "reporter": null, "title": "Associate sdf::Element with line number in file", "component": null, "votes": 0, "watches": null, "content": {"raw": "Currently, during parsing, it is impossible to examine an arbitrary sdf::Thing (or sdf::Element) and provide any feedback on the element and link it to where it came from in the original source file. This definitely handicaps error and warning messages.", "markup": "markdown", "html": "<p>Currently, during parsing, it is impossible to examine an arbitrary sdf::Thing (or sdf::Element) and provide any feedback on the element and link it to where it came from in the original source file. This definitely handicaps error and warning messages.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2020-01-21T17:16:38.016662+00:00", "milestone": null, "updated_on": "2020-01-21T22:57:04.745597+00:00", "type": "issue", "id": 226}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/227/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/227.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/227/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/227/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/227/error-loading-meshes-from-a-relative"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/227/vote"}}, "reporter": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "title": "Error loading meshes from a relative folder for urdf models", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Description\r\n\r\nIf an urdf file has meshes defined with relative path wrt the model file \\(support introduced in [sdformat#558](#!/osrf/sdformat/pull-requests/558/accept-relative-path-in)\\), the meshes are not found.\r\n\r\nThe setup is the following:\r\n\r\n* A world file with a ground plane and an `<include><uri>` of the model file \\(the model\u2019s parent folder is part of `SDF_PATH`\\). The world file is in an external folder far away from the model / mesh files.\r\n* A urdf model that uses relative path to the mesh files \\(mesh files are inside a `meshes` subfolder of the model\u2019s directory\\).\r\n* A `model.config` file in the same folder of the urdf model that loads the urdf with: `<sdf>icub.urdf</sdf>`.\r\n\r\nOpening the world with `ign gazebo /path/to/include_model.world` fails producing errors about meshes not found:\r\n\r\n```\r\n[Err] [SystemPaths.cc:428] Could not resolve file [urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]\r\n[Err] [MeshManager.cc:172] Unable to find file[urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]\r\n[...]\r\n[GUI] [Err] [SystemPaths.cc:428] Could not resolve file [urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]\r\n[GUI] [Err] [MeshManager.cc:172] Unable to find file[urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]\r\n[GUI] [Err] [MeshDescriptor.cc:56] Mesh manager can't find mesh named [urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]\r\n[GUI] [Err] [OgreMeshFactory.cc:422] Cannot load null mesh\r\n[GUI] [Err] [SceneManager.cc:290] Failed to load geometry for visual: base_link_fixed_joint_lump__root_link_visual\r\n[...]\r\n```\r\n\r\nHowever, if I convert the urdf to sdf with `ign sdf -p model.urdf > model.sdf`, and modify the `model.config` to load the sdf, the meshes are found correctly.\r\n\r\n# Versions\r\n\r\nI\u2019m on ubuntu 18.04 with sdformat and ign-gazebo compiled from sources.\r\n\r\n* sdformat: `sdf9@`[8ba6c75](#!/osrf/sdformat/commits/8ba6c751ad4d9326fd8b3f14c8dc51d7c67a0ed3)\r\n* ign-gazebo: `ign-gazebo3@`[d42d5ba](https://bitbucket.org/ignitionrobotics/ign-gazebo/commits/d42d5badf2d41371d8567292e8e08b58f4f83d42)\r\n\r\n# Additional Information\r\n\r\nThe meshes folder is not on purpose inside `IGN_FILE_PATH`. If I add the folder to the env variable, meshes are found also in the urdf case \\(but the main point is that is should work also without this env var\\).\r\n\r\nIt seems to me that the relative path support for meshes works only if the model is already a sdf model. If, instead, the model is an urdf that needs to be converted, the link to the meshes cannot be resolved. I suspect that, since the conversion happens inside sdformat code, the folder where the original urdf code is located is somehow ignored and it is not included in the search path for meshes.\r\n\r\ncc @{557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8}", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>If an urdf file has meshes defined with relative path wrt the model file (support introduced in <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/pull-requests/558/accept-relative-path-in\" rel=\"nofollow\">sdformat#558</a>), the meshes are not found.</p>\n<p>The setup is the following:</p>\n<ul>\n<li>A world file with a ground plane and an <code>&lt;include&gt;&lt;uri&gt;</code> of the model file (the model\u2019s parent folder is part of <code>SDF_PATH</code>). The world file is in an external folder far away from the model / mesh files.</li>\n<li>A urdf model that uses relative path to the mesh files (mesh files are inside a <code>meshes</code> subfolder of the model\u2019s directory).</li>\n<li>A <code>model.config</code> file in the same folder of the urdf model that loads the urdf with: <code>&lt;sdf&gt;icub.urdf&lt;/sdf&gt;</code>.</li>\n</ul>\n<p>Opening the world with <code>ign gazebo /path/to/include_model.world</code> fails producing errors about meshes not found:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[Err] [SystemPaths.cc:428] Could not resolve file [urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]</span>\n<span class=\"k\">[Err] [MeshManager.cc:172] Unable to find file[urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]</span>\n<span class=\"k\">[...]</span>\n<span class=\"k\">[GUI] [Err] [SystemPaths.cc:428] Could not resolve file [urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]</span>\n<span class=\"k\">[GUI] [Err] [MeshManager.cc:172] Unable to find file[urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]</span>\n<span class=\"k\">[GUI] [Err] [MeshDescriptor.cc:56] Mesh manager can&#39;t find mesh named [urdf file/meshes/simmechanics/sim_sea_2-5_root_link_prt-binary.stl]</span>\n<span class=\"na\">[GUI] [Err] [OgreMeshFactory.cc:422] Cannot load null mesh</span>\n<span class=\"na\">[GUI] [Err] [SceneManager.cc:290] Failed to load geometry for visual: base_link_fixed_joint_lump__root_link_visual</span>\n<span class=\"k\">[...]</span>\n</pre></div>\n\n\n<p>However, if I convert the urdf to sdf with <code>ign sdf -p model.urdf &gt; model.sdf</code>, and modify the <code>model.config</code> to load the sdf, the meshes are found correctly.</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>I\u2019m on ubuntu 18.04 with sdformat and ign-gazebo compiled from sources.</p>\n<ul>\n<li>sdformat: <code>sdf9@</code><a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/commits/8ba6c751ad4d9326fd8b3f14c8dc51d7c67a0ed3\" rel=\"nofollow\">8ba6c75</a></li>\n<li>ign-gazebo: <code>ign-gazebo3@</code><a data-is-external-link=\"true\" href=\"https://bitbucket.org/ignitionrobotics/ign-gazebo/commits/d42d5badf2d41371d8567292e8e08b58f4f83d42\" rel=\"nofollow\">d42d5ba</a></li>\n</ul>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>The meshes folder is not on purpose inside <code>IGN_FILE_PATH</code>. If I add the folder to the env variable, meshes are found also in the urdf case (but the main point is that is should work also without this env var).</p>\n<p>It seems to me that the relative path support for meshes works only if the model is already a sdf model. If, instead, the model is an urdf that needs to be converted, the link to the meshes cannot be resolved. I suspect that, since the conversion happens inside sdformat code, the folder where the original urdf code is located is somehow ignored and it is not included in the search path for meshes.</p>\n<p>cc <span class=\"ap-mention\" data-atlassian-id=\"557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8\">@Louise Poubel</span></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": {"name": "1.5", "links": {"self": {"href": "data/repositories/osrf/sdformat/versions/90015.json"}}}, "edited_on": null, "created_on": "2020-02-03T17:05:34.579350+00:00", "milestone": null, "updated_on": "2020-02-12T22:05:01.894833+00:00", "type": "issue", "id": 227}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/228/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/228.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/228/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/228/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/228/diagnostics-for-invalid-numeric-input"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/228/vote"}}, "reporter": {"display_name": "Jeremy Nimmer", "uuid": "{127cef5b-add8-4be7-9175-2c7214f56bcf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B127cef5b-add8-4be7-9175-2c7214f56bcf%7D"}, "html": {"href": "https://bitbucket.org/%7B127cef5b-add8-4be7-9175-2c7214f56bcf%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/de15ec9b6a4e1718bcc2246bed83cb14d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJN-6.png"}}, "nickname": "Jeremy Nimmer", "type": "user", "account_id": "5ad664a1d8b95a2b34f24648"}, "title": "Diagnostics for invalid numeric input", "component": null, "votes": 1, "watches": 2, "content": {"raw": "\\# Summary\r\n\r\nWhen a user makes a mistake and provides invalid data, e.g., for a \\(link pose\\)\\[[http://sdformat.org/spec?ver=1.6&elem=link#link\\_pose](http://sdformat.org/spec?ver=1.6&elem=link#link_pose)\\], the sdformat parser should provide a diagnostic.\r\n\r\n\\# Motivation\r\n\r\nIn many cases \\`\\*.sdf\\` files are authored by hand, possibly even with xacro or related tools.  It is easy to accidentally make a typo and end up with a file that appears to be valid, but in fact will behave poorly in simulation for some unknown reason, e.g., if `1.O1e2` is parsed as \"1.\" instead of \"101.\".\r\n\r\n\\# Describe alternatives you've considered\r\n\r\nI would appreciate if the parser provided an API channel for errors, but I believe this isn't available yet \u2013 even for mistakes that it does provide diagnostics for.  Starting out with log printouts for numeric typos would be a step in the right direction.\r\n\r\n\\# Additional context\r\n\r\nHere is an example stanza that does not produce any diagnostics as of tag/sdformat9\\_9.1.0:\r\n\r\n```xml\r\n      <collision name='link1_collision1'>\r\n        <pose>foo foo foo foo foo foo foo foo -1e899999</pose>\r\n        <geometry>\r\n          <plane>\r\n            <normal>1.0 2.0 3.0 foo</normal>\r\n          </plane>\r\n        </geometry>\r\n        <surface>\r\n          <friction>\r\n            <ode>\r\n              <mu>0.8 gravitons</mu>\r\n              <mu2>0.3 muons</mu2>\r\n            </ode>\r\n          </friction>\r\n        </surface>\r\n      </collision>\r\n```\r\n\r\n\u200c", "markup": "markdown", "html": "<p># Summary</p>\n<p>When a user makes a mistake and provides invalid data, e.g., for a (link pose)[<a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=link#link_pose\" rel=\"nofollow\">http://sdformat.org/spec?ver=1.6&amp;elem=link#link_pose</a>], the sdformat parser should provide a diagnostic.</p>\n<p># Motivation</p>\n<p>In many cases `*.sdf` files are authored by hand, possibly even with xacro or related tools.  It is easy to accidentally make a typo and end up with a file that appears to be valid, but in fact will behave poorly in simulation for some unknown reason, e.g., if <code>1.O1e2</code> is parsed as \"1.\" instead of \"101.\".</p>\n<p># Describe alternatives you've considered</p>\n<p>I would appreciate if the parser provided an API channel for errors, but I believe this isn't available yet \u2013 even for mistakes that it does provide diagnostics for.  Starting out with log printouts for numeric typos would be a step in the right direction.</p>\n<p># Additional context</p>\n<p>Here is an example stanza that does not produce any diagnostics as of tag/sdformat9_9.1.0:</p>\n<div class=\"codehilite language-xml\"><pre><span></span>      <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&#39;link1_collision1&#39;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>foo foo foo foo foo foo foo foo -1e899999<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;plane&gt;</span>\n            <span class=\"nt\">&lt;normal&gt;</span>1.0 2.0 3.0 foo<span class=\"nt\">&lt;/normal&gt;</span>\n          <span class=\"nt\">&lt;/plane&gt;</span>\n        <span class=\"nt\">&lt;/geometry&gt;</span>\n        <span class=\"nt\">&lt;surface&gt;</span>\n          <span class=\"nt\">&lt;friction&gt;</span>\n            <span class=\"nt\">&lt;ode&gt;</span>\n              <span class=\"nt\">&lt;mu&gt;</span>0.8 gravitons<span class=\"nt\">&lt;/mu&gt;</span>\n              <span class=\"nt\">&lt;mu2&gt;</span>0.3 muons<span class=\"nt\">&lt;/mu2&gt;</span>\n            <span class=\"nt\">&lt;/ode&gt;</span>\n          <span class=\"nt\">&lt;/friction&gt;</span>\n        <span class=\"nt\">&lt;/surface&gt;</span>\n      <span class=\"nt\">&lt;/collision&gt;</span>\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-03-13T19:29:36.882254+00:00", "milestone": null, "updated_on": "2020-03-13T19:29:36.882254+00:00", "type": "issue", "id": 228}], "page": 3, "size": 228}